<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10300.17.0615.2100                               -->
<workbook source-build='10.3.1 (10300.17.0615.2100)' source-platform='win' version='10.3' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='Anime' path='/workbooks' revision='1.5' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.3'>
      <aliases enabled='yes' />
      <column caption='Avoid Genre3' datatype='string' name='[Avoid Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
        <calculation class='tableau' formula='&quot;None&quot;' />
        <members>
          <member value='&quot;None&quot;' />
          <member value='&quot;Action&quot;' />
          <member value='&quot;Adventure&quot;' />
          <member value='&quot;Cars&quot;' />
          <member value='&quot;Comedy&quot;' />
          <member value='&quot;Dementia&quot;' />
          <member value='&quot;Demons&quot;' />
          <member value='&quot;Drama&quot;' />
          <member value='&quot;Ecchi&quot;' />
          <member value='&quot;Fantasy&quot;' />
          <member value='&quot;Game&quot;' />
          <member value='&quot;Harem&quot;' />
          <member value='&quot;Historical&quot;' />
          <member value='&quot;Horror&quot;' />
          <member value='&quot;Josei&quot;' />
          <member value='&quot;Kids&quot;' />
          <member value='&quot;Magic&quot;' />
          <member value='&quot;Martial Arts&quot;' />
          <member value='&quot;Mecha&quot;' />
          <member value='&quot;Military&quot;' />
          <member value='&quot;Music&quot;' />
          <member value='&quot;Mystery&quot;' />
          <member value='&quot;Parody&quot;' />
          <member value='&quot;Police&quot;' />
          <member value='&quot;Psychological&quot;' />
          <member value='&quot;Romance&quot;' />
          <member value='&quot;Samurai&quot;' />
          <member value='&quot;School&quot;' />
          <member value='&quot;Sci-Fi&quot;' />
          <member value='&quot;Seinen&quot;' />
          <member value='&quot;Shoujo&quot;' />
          <member value='&quot;Shoujo Ai&quot;' />
          <member value='&quot;Shounen&quot;' />
          <member value='&quot;Slice of Life&quot;' />
          <member value='&quot;Space&quot;' />
          <member value='&quot;Sports&quot;' />
          <member value='&quot;Super Power&quot;' />
          <member value='&quot;Supernatural&quot;' />
          <member value='&quot;Thriller&quot;' />
          <member value='&quot;Vampire&quot;' />
        </members>
      </column>
      <column caption='Avoid Genre2' datatype='string' name='[Avoid Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
        <calculation class='tableau' formula='&quot;None&quot;' />
        <members>
          <member value='&quot;None&quot;' />
          <member value='&quot;Action&quot;' />
          <member value='&quot;Adventure&quot;' />
          <member value='&quot;Cars&quot;' />
          <member value='&quot;Comedy&quot;' />
          <member value='&quot;Dementia&quot;' />
          <member value='&quot;Demons&quot;' />
          <member value='&quot;Drama&quot;' />
          <member value='&quot;Ecchi&quot;' />
          <member value='&quot;Fantasy&quot;' />
          <member value='&quot;Game&quot;' />
          <member value='&quot;Harem&quot;' />
          <member value='&quot;Historical&quot;' />
          <member value='&quot;Horror&quot;' />
          <member value='&quot;Josei&quot;' />
          <member value='&quot;Kids&quot;' />
          <member value='&quot;Magic&quot;' />
          <member value='&quot;Martial Arts&quot;' />
          <member value='&quot;Mecha&quot;' />
          <member value='&quot;Military&quot;' />
          <member value='&quot;Music&quot;' />
          <member value='&quot;Mystery&quot;' />
          <member value='&quot;Parody&quot;' />
          <member value='&quot;Police&quot;' />
          <member value='&quot;Psychological&quot;' />
          <member value='&quot;Romance&quot;' />
          <member value='&quot;Samurai&quot;' />
          <member value='&quot;School&quot;' />
          <member value='&quot;Sci-Fi&quot;' />
          <member value='&quot;Seinen&quot;' />
          <member value='&quot;Shoujo&quot;' />
          <member value='&quot;Shoujo Ai&quot;' />
          <member value='&quot;Shounen&quot;' />
          <member value='&quot;Slice of Life&quot;' />
          <member value='&quot;Space&quot;' />
          <member value='&quot;Sports&quot;' />
          <member value='&quot;Super Power&quot;' />
          <member value='&quot;Supernatural&quot;' />
          <member value='&quot;Thriller&quot;' />
          <member value='&quot;Vampire&quot;' />
        </members>
      </column>
      <column caption='Required Genre1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
        <calculation class='tableau' formula='&quot;Any&quot;' />
        <members>
          <member value='&quot;Any&quot;' />
          <member value='&quot;Action&quot;' />
          <member value='&quot;Adventure&quot;' />
          <member value='&quot;Cars&quot;' />
          <member value='&quot;Comedy&quot;' />
          <member value='&quot;Dementia&quot;' />
          <member value='&quot;Demons&quot;' />
          <member value='&quot;Drama&quot;' />
          <member value='&quot;Ecchi&quot;' />
          <member value='&quot;Fantasy&quot;' />
          <member value='&quot;Game&quot;' />
          <member value='&quot;Harem&quot;' />
          <member value='&quot;Historical&quot;' />
          <member value='&quot;Horror&quot;' />
          <member value='&quot;Josei&quot;' />
          <member value='&quot;Kids&quot;' />
          <member value='&quot;Magic&quot;' />
          <member value='&quot;Martial Arts&quot;' />
          <member value='&quot;Mecha&quot;' />
          <member value='&quot;Military&quot;' />
          <member value='&quot;Music&quot;' />
          <member value='&quot;Mystery&quot;' />
          <member value='&quot;Parody&quot;' />
          <member value='&quot;Police&quot;' />
          <member value='&quot;Psychological&quot;' />
          <member value='&quot;Romance&quot;' />
          <member value='&quot;Samurai&quot;' />
          <member value='&quot;School&quot;' />
          <member value='&quot;Sci-Fi&quot;' />
          <member value='&quot;Seinen&quot;' />
          <member value='&quot;Shoujo&quot;' />
          <member value='&quot;Shoujo Ai&quot;' />
          <member value='&quot;Shounen&quot;' />
          <member value='&quot;Slice of Life&quot;' />
          <member value='&quot;Space&quot;' />
          <member value='&quot;Sports&quot;' />
          <member value='&quot;Super Power&quot;' />
          <member value='&quot;Supernatural&quot;' />
          <member value='&quot;Thriller&quot;' />
          <member value='&quot;Vampire&quot;' />
        </members>
      </column>
      <column caption='Required Genre2' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
        <calculation class='tableau' formula='&quot;Any&quot;' />
        <members>
          <member value='&quot;Any&quot;' />
          <member value='&quot;Action&quot;' />
          <member value='&quot;Adventure&quot;' />
          <member value='&quot;Cars&quot;' />
          <member value='&quot;Comedy&quot;' />
          <member value='&quot;Dementia&quot;' />
          <member value='&quot;Demons&quot;' />
          <member value='&quot;Drama&quot;' />
          <member value='&quot;Ecchi&quot;' />
          <member value='&quot;Fantasy&quot;' />
          <member value='&quot;Game&quot;' />
          <member value='&quot;Harem&quot;' />
          <member value='&quot;Historical&quot;' />
          <member value='&quot;Horror&quot;' />
          <member value='&quot;Josei&quot;' />
          <member value='&quot;Kids&quot;' />
          <member value='&quot;Magic&quot;' />
          <member value='&quot;Martial Arts&quot;' />
          <member value='&quot;Mecha&quot;' />
          <member value='&quot;Military&quot;' />
          <member value='&quot;Music&quot;' />
          <member value='&quot;Mystery&quot;' />
          <member value='&quot;Parody&quot;' />
          <member value='&quot;Police&quot;' />
          <member value='&quot;Psychological&quot;' />
          <member value='&quot;Romance&quot;' />
          <member value='&quot;Samurai&quot;' />
          <member value='&quot;School&quot;' />
          <member value='&quot;Sci-Fi&quot;' />
          <member value='&quot;Seinen&quot;' />
          <member value='&quot;Shoujo&quot;' />
          <member value='&quot;Shoujo Ai&quot;' />
          <member value='&quot;Shounen&quot;' />
          <member value='&quot;Slice of Life&quot;' />
          <member value='&quot;Space&quot;' />
          <member value='&quot;Sports&quot;' />
          <member value='&quot;Super Power&quot;' />
          <member value='&quot;Supernatural&quot;' />
          <member value='&quot;Thriller&quot;' />
          <member value='&quot;Vampire&quot;' />
        </members>
      </column>
      <column caption='Required Genre3' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
        <calculation class='tableau' formula='&quot;Any&quot;' />
        <members>
          <member value='&quot;Any&quot;' />
          <member value='&quot;Action&quot;' />
          <member value='&quot;Adventure&quot;' />
          <member value='&quot;Cars&quot;' />
          <member value='&quot;Comedy&quot;' />
          <member value='&quot;Dementia&quot;' />
          <member value='&quot;Demons&quot;' />
          <member value='&quot;Drama&quot;' />
          <member value='&quot;Ecchi&quot;' />
          <member value='&quot;Fantasy&quot;' />
          <member value='&quot;Game&quot;' />
          <member value='&quot;Harem&quot;' />
          <member value='&quot;Historical&quot;' />
          <member value='&quot;Horror&quot;' />
          <member value='&quot;Josei&quot;' />
          <member value='&quot;Kids&quot;' />
          <member value='&quot;Magic&quot;' />
          <member value='&quot;Martial Arts&quot;' />
          <member value='&quot;Mecha&quot;' />
          <member value='&quot;Military&quot;' />
          <member value='&quot;Music&quot;' />
          <member value='&quot;Mystery&quot;' />
          <member value='&quot;Parody&quot;' />
          <member value='&quot;Police&quot;' />
          <member value='&quot;Psychological&quot;' />
          <member value='&quot;Romance&quot;' />
          <member value='&quot;Samurai&quot;' />
          <member value='&quot;School&quot;' />
          <member value='&quot;Sci-Fi&quot;' />
          <member value='&quot;Seinen&quot;' />
          <member value='&quot;Shoujo&quot;' />
          <member value='&quot;Shoujo Ai&quot;' />
          <member value='&quot;Shounen&quot;' />
          <member value='&quot;Slice of Life&quot;' />
          <member value='&quot;Space&quot;' />
          <member value='&quot;Sports&quot;' />
          <member value='&quot;Super Power&quot;' />
          <member value='&quot;Supernatural&quot;' />
          <member value='&quot;Thriller&quot;' />
          <member value='&quot;Vampire&quot;' />
        </members>
      </column>
      <column caption='Required Genre4' datatype='string' name='[Required Genre1 (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
        <calculation class='tableau' formula='&quot;Any&quot;' />
        <members>
          <member value='&quot;Any&quot;' />
          <member value='&quot;Action&quot;' />
          <member value='&quot;Adventure&quot;' />
          <member value='&quot;Cars&quot;' />
          <member value='&quot;Comedy&quot;' />
          <member value='&quot;Dementia&quot;' />
          <member value='&quot;Demons&quot;' />
          <member value='&quot;Drama&quot;' />
          <member value='&quot;Ecchi&quot;' />
          <member value='&quot;Fantasy&quot;' />
          <member value='&quot;Game&quot;' />
          <member value='&quot;Harem&quot;' />
          <member value='&quot;Historical&quot;' />
          <member value='&quot;Horror&quot;' />
          <member value='&quot;Josei&quot;' />
          <member value='&quot;Kids&quot;' />
          <member value='&quot;Magic&quot;' />
          <member value='&quot;Martial Arts&quot;' />
          <member value='&quot;Mecha&quot;' />
          <member value='&quot;Military&quot;' />
          <member value='&quot;Music&quot;' />
          <member value='&quot;Mystery&quot;' />
          <member value='&quot;Parody&quot;' />
          <member value='&quot;Police&quot;' />
          <member value='&quot;Psychological&quot;' />
          <member value='&quot;Romance&quot;' />
          <member value='&quot;Samurai&quot;' />
          <member value='&quot;School&quot;' />
          <member value='&quot;Sci-Fi&quot;' />
          <member value='&quot;Seinen&quot;' />
          <member value='&quot;Shoujo&quot;' />
          <member value='&quot;Shoujo Ai&quot;' />
          <member value='&quot;Shounen&quot;' />
          <member value='&quot;Slice of Life&quot;' />
          <member value='&quot;Space&quot;' />
          <member value='&quot;Sports&quot;' />
          <member value='&quot;Super Power&quot;' />
          <member value='&quot;Supernatural&quot;' />
          <member value='&quot;Thriller&quot;' />
          <member value='&quot;Vampire&quot;' />
        </members>
      </column>
      <column caption='Required Genre5' datatype='string' name='[Required Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
        <calculation class='tableau' formula='&quot;Any&quot;' />
        <members>
          <member value='&quot;Any&quot;' />
          <member value='&quot;Action&quot;' />
          <member value='&quot;Adventure&quot;' />
          <member value='&quot;Cars&quot;' />
          <member value='&quot;Comedy&quot;' />
          <member value='&quot;Dementia&quot;' />
          <member value='&quot;Demons&quot;' />
          <member value='&quot;Drama&quot;' />
          <member value='&quot;Ecchi&quot;' />
          <member value='&quot;Fantasy&quot;' />
          <member value='&quot;Game&quot;' />
          <member value='&quot;Harem&quot;' />
          <member value='&quot;Historical&quot;' />
          <member value='&quot;Horror&quot;' />
          <member value='&quot;Josei&quot;' />
          <member value='&quot;Kids&quot;' />
          <member value='&quot;Magic&quot;' />
          <member value='&quot;Martial Arts&quot;' />
          <member value='&quot;Mecha&quot;' />
          <member value='&quot;Military&quot;' />
          <member value='&quot;Music&quot;' />
          <member value='&quot;Mystery&quot;' />
          <member value='&quot;Parody&quot;' />
          <member value='&quot;Police&quot;' />
          <member value='&quot;Psychological&quot;' />
          <member value='&quot;Romance&quot;' />
          <member value='&quot;Samurai&quot;' />
          <member value='&quot;School&quot;' />
          <member value='&quot;Sci-Fi&quot;' />
          <member value='&quot;Seinen&quot;' />
          <member value='&quot;Shoujo&quot;' />
          <member value='&quot;Shoujo Ai&quot;' />
          <member value='&quot;Shounen&quot;' />
          <member value='&quot;Slice of Life&quot;' />
          <member value='&quot;Space&quot;' />
          <member value='&quot;Sports&quot;' />
          <member value='&quot;Super Power&quot;' />
          <member value='&quot;Supernatural&quot;' />
          <member value='&quot;Thriller&quot;' />
          <member value='&quot;Vampire&quot;' />
        </members>
      </column>
      <column caption='Required Genre6' datatype='string' name='[Required Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
        <calculation class='tableau' formula='&quot;Any&quot;' />
        <members>
          <member value='&quot;Any&quot;' />
          <member value='&quot;Action&quot;' />
          <member value='&quot;Adventure&quot;' />
          <member value='&quot;Cars&quot;' />
          <member value='&quot;Comedy&quot;' />
          <member value='&quot;Dementia&quot;' />
          <member value='&quot;Demons&quot;' />
          <member value='&quot;Drama&quot;' />
          <member value='&quot;Ecchi&quot;' />
          <member value='&quot;Fantasy&quot;' />
          <member value='&quot;Game&quot;' />
          <member value='&quot;Harem&quot;' />
          <member value='&quot;Historical&quot;' />
          <member value='&quot;Horror&quot;' />
          <member value='&quot;Josei&quot;' />
          <member value='&quot;Kids&quot;' />
          <member value='&quot;Magic&quot;' />
          <member value='&quot;Martial Arts&quot;' />
          <member value='&quot;Mecha&quot;' />
          <member value='&quot;Military&quot;' />
          <member value='&quot;Music&quot;' />
          <member value='&quot;Mystery&quot;' />
          <member value='&quot;Parody&quot;' />
          <member value='&quot;Police&quot;' />
          <member value='&quot;Psychological&quot;' />
          <member value='&quot;Romance&quot;' />
          <member value='&quot;Samurai&quot;' />
          <member value='&quot;School&quot;' />
          <member value='&quot;Sci-Fi&quot;' />
          <member value='&quot;Seinen&quot;' />
          <member value='&quot;Shoujo&quot;' />
          <member value='&quot;Shoujo Ai&quot;' />
          <member value='&quot;Shounen&quot;' />
          <member value='&quot;Slice of Life&quot;' />
          <member value='&quot;Space&quot;' />
          <member value='&quot;Sports&quot;' />
          <member value='&quot;Super Power&quot;' />
          <member value='&quot;Supernatural&quot;' />
          <member value='&quot;Thriller&quot;' />
          <member value='&quot;Vampire&quot;' />
        </members>
      </column>
      <column caption='Avoid Genre1' datatype='string' name='[Required Genre6 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
        <calculation class='tableau' formula='&quot;None&quot;' />
        <members>
          <member value='&quot;None&quot;' />
          <member value='&quot;Action&quot;' />
          <member value='&quot;Adventure&quot;' />
          <member value='&quot;Cars&quot;' />
          <member value='&quot;Comedy&quot;' />
          <member value='&quot;Dementia&quot;' />
          <member value='&quot;Demons&quot;' />
          <member value='&quot;Drama&quot;' />
          <member value='&quot;Ecchi&quot;' />
          <member value='&quot;Fantasy&quot;' />
          <member value='&quot;Game&quot;' />
          <member value='&quot;Harem&quot;' />
          <member value='&quot;Historical&quot;' />
          <member value='&quot;Horror&quot;' />
          <member value='&quot;Josei&quot;' />
          <member value='&quot;Kids&quot;' />
          <member value='&quot;Magic&quot;' />
          <member value='&quot;Martial Arts&quot;' />
          <member value='&quot;Mecha&quot;' />
          <member value='&quot;Military&quot;' />
          <member value='&quot;Music&quot;' />
          <member value='&quot;Mystery&quot;' />
          <member value='&quot;Parody&quot;' />
          <member value='&quot;Police&quot;' />
          <member value='&quot;Psychological&quot;' />
          <member value='&quot;Romance&quot;' />
          <member value='&quot;Samurai&quot;' />
          <member value='&quot;School&quot;' />
          <member value='&quot;Sci-Fi&quot;' />
          <member value='&quot;Seinen&quot;' />
          <member value='&quot;Shoujo&quot;' />
          <member value='&quot;Shoujo Ai&quot;' />
          <member value='&quot;Shounen&quot;' />
          <member value='&quot;Slice of Life&quot;' />
          <member value='&quot;Space&quot;' />
          <member value='&quot;Sports&quot;' />
          <member value='&quot;Super Power&quot;' />
          <member value='&quot;Supernatural&quot;' />
          <member value='&quot;Thriller&quot;' />
          <member value='&quot;Vampire&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Genres (Anime Exports)' inline='true' name='federated.1b2b7y41ru73pf19gx60j1d24zbx' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Anime Exports' name='google-sheets.0sbs7kt14xb44z1d4ddff0drrzwu'>
            <connection REDIRECT_URI='urn:ietf:wg:oauth:2.0:oob' SCOPE='email profile https://www.googleapis.com/auth/drive.readonly' class='google-sheets' cleaning='no' compat='no' dataRefreshTime='' filename='Anime Exports' googleSheetId='17KQKFy9o1pPG0Yko2dTYZcRhNSTdNWyI3NLWsJyfqbI' interpretationMode='8' mimeType='application/vnd.google-apps.spreadsheet' server='' server-oauth='' username='spencershadley@gmail.com' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='google-sheets.0sbs7kt14xb44z1d4ddff0drrzwu' name='Genres' table='[Genres$]' type='table'>
          <columns gridOrigin='A1:A41:no:A1:A41:0' header='yes' outcome='2'>
            <column datatype='string' name='Genres' ordinal='0' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Genres</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Genres]</local-name>
            <parent-name>[Genres]</parent-name>
            <remote-alias>Genres</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Genres]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:A41:no:A1:A41:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='HasGenres' datatype='boolean' name='[Calculation_92605288849973249]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS(ATTR([federated.16528900by6s131f9qlq90dm3noc].[Genres]), [Parameters].[Parameter 1]) then TRUE&#13;&#10;ELSE FALSE&#13;&#10;END' />
      </column>
      <column caption='Possible Genres' datatype='string' name='[Genres]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.490143' measure-ordering='alphabetic' measure-percentage='0.200717' parameter-percentage='0.30914' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Required Genre1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
          <calculation class='tableau' formula='&quot;Any&quot;' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
        <column datatype='string' name='[Genres]' role='dimension' type='nominal' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='Top Anime (Anime Exports)' inline='true' name='federated.16528900by6s131f9qlq90dm3noc' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Anime Exports' name='google-sheets.0o2ab0f0w5exig11tlfe00jwzoqs'>
            <connection REDIRECT_URI='urn:ietf:wg:oauth:2.0:oob' SCOPE='email profile https://www.googleapis.com/auth/drive.readonly' class='google-sheets' cleaning='no' compat='no' dataRefreshTime='' filename='Anime Exports' googleSheetId='17KQKFy9o1pPG0Yko2dTYZcRhNSTdNWyI3NLWsJyfqbI' interpretationMode='256' mimeType='application/vnd.google-apps.spreadsheet' server='' server-oauth='' username='spencershadley@gmail.com' validate='no' workgroup-auth-mode='prompt' />
          </named-connection>
        </named-connections>
        <relation connection='google-sheets.0o2ab0f0w5exig11tlfe00jwzoqs' name='Top Anime' table='[&apos;Top Anime$&apos;]' type='table'>
          <columns gridOrigin='A1:AE5051:no:A1:AE5051:0' header='yes' outcome='2'>
            <column datatype='string' name='Title' ordinal='0' />
            <column datatype='string' name='English Title' ordinal='1' />
            <column datatype='string' name='Japanese Title' ordinal='2' />
            <column datatype='string' name='Synonyms' ordinal='3' />
            <column datatype='string' name='URL' ordinal='4' />
            <column datatype='real' name='Score' ordinal='5' />
            <column datatype='integer' name='Number of ratings' ordinal='6' />
            <column datatype='integer' name='Rank' ordinal='7' />
            <column datatype='integer' name='Popularity' ordinal='8' />
            <column datatype='integer' name='Number of Members' ordinal='9' />
            <column datatype='integer' name='Number of Favorites' ordinal='10' />
            <column datatype='string' name='Type of Media' ordinal='11' />
            <column datatype='integer' name='Number of Episodes' ordinal='12' />
            <column datatype='string' name='Status' ordinal='13' />
            <column datatype='date' date-parse-format='MMM dd, yyyy|#|#|MMM ddHH, yyyy' name='Date Started Airing' ordinal='14' />
            <column datatype='date' date-parse-format='MMM dd, yyyy|#|#|MMM ddHH, yyyy' name='Date Finished Airing' ordinal='15' />
            <column datatype='string' name='Producers' ordinal='16' />
            <column datatype='string' name='Licensors' ordinal='17' />
            <column datatype='string' name='Studios' ordinal='18' />
            <column datatype='string' name='Genres' ordinal='19' />
            <column datatype='string' name='Duration' ordinal='20' />
            <column datatype='string' name='Rating' ordinal='21' />
            <column datatype='string' name='Source' ordinal='22' />
            <column datatype='string' name='Synopsis' ordinal='23' />
            <column datatype='string' name='Background' ordinal='24' />
            <column datatype='string' name='Image' ordinal='25' />
            <column datatype='string' name='Adaptation' ordinal='26' />
            <column datatype='string' name='Alternative Setting' ordinal='27' />
            <column datatype='string' name='Sequel' ordinal='28' />
            <column datatype='string' name='Other' ordinal='29' />
            <column datatype='string' name='Alternative Version' ordinal='30' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AE5051:no:A1:AE5051:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Title]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Title</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>English Title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[English Title]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>English Title</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Japanese Title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Japanese Title]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Japanese Title</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Synonyms</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Synonyms]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Synonyms</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>URL</remote-name>
            <remote-type>130</remote-type>
            <local-name>[URL]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>URL</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Score]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Score</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of ratings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of ratings]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Number of ratings</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Rank</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Popularity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Popularity]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Popularity</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Members</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Members]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Number of Members</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Favorites</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Favorites]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Number of Favorites</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of Media</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type of Media]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Type of Media</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Episodes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Episodes]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Number of Episodes</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date Started Airing</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date Started Airing]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Date Started Airing</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date Finished Airing</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date Finished Airing]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Date Finished Airing</remote-alias>
            <ordinal>15</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Producers</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Producers]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Producers</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Licensors</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Licensors]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Licensors</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Studios</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Studios]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Studios</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Genres</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Genres]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Genres</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Duration</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Duration]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Duration</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rating</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Rating]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Rating</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Source]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Source</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Synopsis</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Synopsis]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Synopsis</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Background</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Background]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Background</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Image</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Image]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Image</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Adaptation</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Adaptation]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Adaptation</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Alternative Setting</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Alternative Setting]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Alternative Setting</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sequel</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sequel]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Sequel</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Other]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Other</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Alternative Version</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Alternative Version]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Alternative Version</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='HasGenres' datatype='boolean' name='[Calculation_379991242418241536]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='(CONTAINS([Genres], [Parameters].[Parameter 1]) OR [Parameters].[Parameter 1] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy)]) OR [Parameters].[Required Genre1 (copy)] = &quot;Any&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Required Genre6 (copy)])) OR [Parameters].[Required Genre6 (copy)] = &quot;None&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Avoid Genre1 (copy)])) OR [Parameters].[Avoid Genre1 (copy)] = &quot;None&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Avoid Genre1 (copy) (copy)])) OR [Parameters].[Avoid Genre1 (copy) (copy)] = &quot;None&quot;)' />
      </column>
      <column caption='Percentage of Members who Favorite' datatype='real' name='[Calculation_4901886739109130240]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Number of Favorites] / [Number of Members] * 100' />
      </column>
      <column caption='AwesomenessFactor' datatype='real' name='[Calculation_4901886739110236161]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_4901886739109130240]*([Score]^2)' />
      </column>
      <column caption='ExaggeratedAwesomenessFactor' datatype='real' name='[Calculation_4901886739117621250]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_4901886739110236161]^2' />
      </column>
      <column caption='Came out in the last 12 months' datatype='boolean' name='[Calculation_4901886739125026819]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF DATEDIFF(&apos;month&apos;,[Date Finished Airing],TODAY()) &lt;= 12&#13;&#10;     THEN true&#13;&#10;     ELSE false&#13;&#10;     END' />
      </column>
      <column datatype='date' name='[Date Finished Airing]' role='dimension' type='ordinal' />
      <column datatype='date' name='[Date Started Airing]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Score (Dimension)' datatype='real' name='[Score (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Score]' />
      </column>
      <column datatype='string' name='[Title]' role='dimension' type='nominal' />
      <column datatype='string' name='[URL]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_4901886739110236161]' derivation='Avg' name='[avg:Calculation_4901886739110236161:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
      <column-instance column='[URL]' derivation='None' name='[none:URL:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_4901886739109130240]' derivation='Sum' name='[sum:Calculation_4901886739109130240:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4901886739110236161]' derivation='Sum' name='[sum:Calculation_4901886739110236161:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date Finished Airing]' derivation='Day-Trunc' name='[tdy:Date Finished Airing:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Date Started Airing]' derivation='Day-Trunc' name='[tdy:Date Started Airing:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date Finished Airing]' derivation='Year-Trunc' name='[tyr:Date Finished Airing:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Date Started Airing]' derivation='Year-Trunc' name='[tyr:Date Started Airing:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date Started Airing]' derivation='Year' name='[yr:Date Started Airing:ok]' pivot='key' type='ordinal' />
      <group caption='Action (DAY(Date Finished Airing),Title)' hidden='true' name='[Action (DAY(Date Finished Airing),Title)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tdy:Date Finished Airing:ok]' />
          <groupfilter function='level-members' level='[Title]' />
        </groupfilter>
      </group>
      <group caption='Action (Title,URL)' hidden='true' name='[Action (Title,URL)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Title]' />
          <groupfilter function='level-members' level='[URL]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date Started Airing))' hidden='true' name='[Action (YEAR(Date Started Airing))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Date Started Airing:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (DAY(Date Started Airing),Title)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tdy:Date Started Airing:qk]' />
          <groupfilter function='level-members' level='[none:Title:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Title,URL)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Title:nk]' />
          <groupfilter function='level-members' level='[none:URL:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Title,YEAR(Date Finished Airing))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Title:nk]' />
          <groupfilter function='level-members' level='[tyr:Date Finished Airing:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Title,YEAR(Date Started Airing))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Title:nk]' />
          <groupfilter function='level-members' level='[tyr:Date Started Airing:qk]' />
        </groupfilter>
      </group>
      <folder name='Metrics' role='measures'>
        <folder-item name='[Calculation_4901886739109130240]' type='field' />
        <folder-item name='[Number of Episodes]' type='field' />
        <folder-item name='[Number of Favorites]' type='field' />
        <folder-item name='[Number of Members]' type='field' />
        <folder-item name='[Number of ratings]' type='field' />
        <folder-item name='[Popularity]' type='field' />
        <folder-item name='[Rank]' type='field' />
        <folder-item name='[Score]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.541219' measure-ordering='alphabetic' measure-percentage='0.286738' parameter-percentage='0.172043' rowDisplayCount='10000' show-structure='false' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.16528900by6s131f9qlq90dm3noc].[avg:Calculation_4901886739110236161:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739109130240:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Avoid Genre3' datatype='string' name='[Avoid Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
          <calculation class='tableau' formula='&quot;None&quot;' />
        </column>
        <column caption='Avoid Genre2' datatype='string' name='[Avoid Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
          <calculation class='tableau' formula='&quot;None&quot;' />
        </column>
        <column caption='Required Genre1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
          <calculation class='tableau' formula='&quot;Any&quot;' />
        </column>
        <column caption='Required Genre2' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
          <calculation class='tableau' formula='&quot;Any&quot;' />
        </column>
        <column caption='Required Genre3' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
          <calculation class='tableau' formula='&quot;Any&quot;' />
        </column>
        <column caption='Required Genre4' datatype='string' name='[Required Genre1 (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
          <calculation class='tableau' formula='&quot;Any&quot;' />
        </column>
        <column caption='Required Genre5' datatype='string' name='[Required Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
          <calculation class='tableau' formula='&quot;Any&quot;' />
        </column>
        <column caption='Required Genre6' datatype='string' name='[Required Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
          <calculation class='tableau' formula='&quot;Any&quot;' />
        </column>
        <column caption='Avoid Genre1' datatype='string' name='[Required Genre6 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
          <calculation class='tableau' formula='&quot;None&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.16528900by6s131f9qlq90dm3noc'>
      <datasources>
        <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
      </datasources>
      <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
        <column caption='AwesomenessFactor' datatype='real' name='[Calculation_4901886739110236161]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='[Calculation_4901886739109130240]*([Score]^2)' />
        </column>
        <column datatype='real' name='[Score]' role='measure' type='quantitative' />
        <column datatype='string' name='[Title]' role='dimension' type='nominal' />
        <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_4901886739110236161]' derivation='Sum' name='[sum:Calculation_4901886739110236161:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='quantitative' column='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' included-values='in-range'>
        <min>6.6100000000000003</min>
        <max>8.8599999999999994</max>
      </filter>
      <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]'>
        <groupfilter function='level-members' level='[none:Title:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' />
      </filter>
      <filter class='quantitative' column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]' included-values='in-range-or-null'>
        <min>13.021850450974686</min>
        <max>9649.5669171569207</max>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 9 (generated)' name='[Action10]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Anime over Time' type='sheet' worksheet='When does anime come out?' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Anime over Time' />
      </command>
    </action>
    <action caption='Show on MyAnimeList' name='[Action11]'>
      <source dashboard='Anime over Time' type='sheet' />
      <link caption='' expression='&lt;ATTR([URL])&gt;' />
    </action>
    <action caption='Filter 6 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Anime over Time' type='sheet' worksheet='Avg Number of Episodes' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Anime over Time' />
      </command>
    </action>
    <action caption='Show on MyAnimeList.net' name='[Action2]'>
      <source dashboard='Discovery' type='sheet' />
      <link caption='' expression='&lt;[URL]&gt;' />
    </action>
    <action caption='Filter 1 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Discovery' type='sheet' worksheet='Great New Anime' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Discovery' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Discovery' type='sheet' worksheet='Highest Rated' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Discovery' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Discovery' type='sheet' worksheet='Best Movies' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Discovery' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Discovery' type='sheet' worksheet='Most Favorited' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Discovery' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Discovery' type='sheet' worksheet='Best Movies of the Last 12 Months' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Discovery' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Anime over Time' type='sheet' worksheet='Score over Time' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Anime over Time' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Anime over Time' type='sheet' worksheet='Anime Popularity' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Anime over Time' />
      </command>
    </action>
    <datasources>
      <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
    </datasources>
    <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
      <column datatype='string' name='[URL]' role='dimension' type='nominal' />
      <column-instance column='[URL]' derivation='Attribute' name='[attr:URL:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Anime Popularity'>
      <table>
        <view>
          <datasources>
            <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Avoid Genre3' datatype='string' name='[Avoid Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
            <column caption='Avoid Genre2' datatype='string' name='[Avoid Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
            <column caption='Required Genre1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre2' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre3' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre4' datatype='string' name='[Required Genre1 (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre5' datatype='string' name='[Required Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre6' datatype='string' name='[Required Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Avoid Genre1' datatype='string' name='[Required Genre6 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
            <column caption='HasGenres' datatype='boolean' name='[Calculation_379991242418241536]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='(CONTAINS([Genres], [Parameters].[Parameter 1]) OR [Parameters].[Parameter 1] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy)]) OR [Parameters].[Required Genre1 (copy)] = &quot;Any&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Required Genre6 (copy)])) OR [Parameters].[Required Genre6 (copy)] = &quot;None&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Avoid Genre1 (copy)])) OR [Parameters].[Avoid Genre1 (copy)] = &quot;None&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Avoid Genre1 (copy) (copy)])) OR [Parameters].[Avoid Genre1 (copy) (copy)] = &quot;None&quot;)' />
            </column>
            <column caption='Percentage of Members who Favorite' datatype='real' name='[Calculation_4901886739109130240]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Number of Favorites] / [Number of Members] * 100' />
            </column>
            <column caption='AwesomenessFactor' datatype='real' name='[Calculation_4901886739110236161]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4901886739109130240]*([Score]^2)' />
            </column>
            <column datatype='date' name='[Date Finished Airing]' role='dimension' type='ordinal' />
            <column datatype='date' name='[Date Started Airing]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Genres]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Favorites]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Members]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_379991242418241536]' derivation='None' name='[none:Calculation_379991242418241536:nk]' pivot='key' type='nominal' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4901886739110236161]' derivation='Sum' name='[sum:Calculation_4901886739110236161:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Finished Airing]' derivation='Day-Trunc' name='[tdy:Date Finished Airing:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date Started Airing]' derivation='Year' name='[yr:Date Started Airing:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[Action (DAY(Date Finished Airing),Title)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tdy:Date Finished Airing:ok]' />
              <groupfilter function='level-members' level='[Title]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[Action (YEAR(Date Started Airing))]'>
            <groupfilter function='level-members' level='[yr:Date Started Airing:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_379991242418241536:nk]'>
            <groupfilter function='member' level='[none:Calculation_379991242418241536:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Date Started Airing:ok]' />
              <groupfilter function='member' level='[yr:Date Started Airing:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_379991242418241536:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[Action (DAY(Date Finished Airing),Title)]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[Action (YEAR(Date Started Airing))]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Records:qk]</rows>
        <cols>[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Avg Number of Episodes'>
      <table>
        <view>
          <datasources>
            <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Avoid Genre3' datatype='string' name='[Avoid Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
            <column caption='Avoid Genre2' datatype='string' name='[Avoid Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
            <column caption='Required Genre1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre2' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre3' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre4' datatype='string' name='[Required Genre1 (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre5' datatype='string' name='[Required Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre6' datatype='string' name='[Required Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Avoid Genre1' datatype='string' name='[Required Genre6 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
            <column caption='HasGenres' datatype='boolean' name='[Calculation_379991242418241536]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='(CONTAINS([Genres], [Parameters].[Parameter 1]) OR [Parameters].[Parameter 1] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy)]) OR [Parameters].[Required Genre1 (copy)] = &quot;Any&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Required Genre6 (copy)])) OR [Parameters].[Required Genre6 (copy)] = &quot;None&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Avoid Genre1 (copy)])) OR [Parameters].[Avoid Genre1 (copy)] = &quot;None&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Avoid Genre1 (copy) (copy)])) OR [Parameters].[Avoid Genre1 (copy) (copy)] = &quot;None&quot;)' />
            </column>
            <column caption='Percentage of Members who Favorite' datatype='real' name='[Calculation_4901886739109130240]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Number of Favorites] / [Number of Members] * 100' />
            </column>
            <column caption='AwesomenessFactor' datatype='real' name='[Calculation_4901886739110236161]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4901886739109130240]*([Score]^2)' />
            </column>
            <column datatype='date' name='[Date Finished Airing]' role='dimension' type='ordinal' />
            <column datatype='date' name='[Date Started Airing]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Genres]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Episodes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Favorites]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Members]' role='measure' type='quantitative' />
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column-instance column='[Number of Episodes]' derivation='Avg' name='[avg:Number of Episodes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_379991242418241536]' derivation='None' name='[none:Calculation_379991242418241536:nk]' pivot='key' type='nominal' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4901886739110236161]' derivation='Sum' name='[sum:Calculation_4901886739110236161:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Finished Airing]' derivation='Day-Trunc' name='[tdy:Date Finished Airing:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date Started Airing]' derivation='Year' name='[yr:Date Started Airing:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[Action (DAY(Date Finished Airing),Title)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tdy:Date Finished Airing:ok]' />
              <groupfilter function='level-members' level='[Title]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_379991242418241536:nk]'>
            <groupfilter function='member' level='[none:Calculation_379991242418241536:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Date Started Airing:ok]' />
              <groupfilter function='member' level='[yr:Date Started Airing:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_379991242418241536:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[Action (DAY(Date Finished Airing),Title)]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.16528900by6s131f9qlq90dm3noc].[avg:Number of Episodes:qk]</rows>
        <cols>[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Best Movies'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location id='CoolMovies' path='/workbooks/Anime' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
          </datasources>
          <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
            <column caption='Percentage of Members who Favorite' datatype='real' name='[Calculation_4901886739109130240]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Number of Favorites] / [Number of Members] * 100' />
            </column>
            <column caption='AwesomenessFactor' datatype='real' name='[Calculation_4901886739110236161]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4901886739109130240]*([Score]^2)' />
            </column>
            <column caption='ExaggeratedAwesomenessFactor' datatype='real' name='[Calculation_4901886739117621250]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4901886739110236161]^2' />
            </column>
            <column datatype='integer' name='[Number of Episodes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Favorites]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Members]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of ratings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Popularity]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Rank]' role='measure' type='quantitative' />
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type of Media]' role='dimension' type='nominal' />
            <column datatype='string' name='[URL]' role='dimension' type='nominal' />
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type of Media]' derivation='None' name='[none:Type of Media:nk]' pivot='key' type='nominal' />
            <column-instance column='[URL]' derivation='None' name='[none:URL:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4901886739109130240]' derivation='Sum' name='[sum:Calculation_4901886739109130240:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4901886739110236161]' derivation='Sum' name='[sum:Calculation_4901886739110236161:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4901886739117621250]' derivation='Sum' name='[sum:Calculation_4901886739117621250:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Episodes]' derivation='Sum' name='[sum:Number of Episodes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Favorites]' derivation='Sum' name='[sum:Number of Favorites:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Members]' derivation='Sum' name='[sum:Number of Members:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of ratings]' derivation='Sum' name='[sum:Number of ratings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Popularity]' derivation='Sum' name='[sum:Popularity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rank]' derivation='Sum' name='[sum:Rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[Action (Title,URL)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Title]' />
              <groupfilter function='level-members' level='[URL]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[Exclusions (Title,URL)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Title:nk]' />
              <groupfilter function='level-members' level='[none:URL:nk]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[none:Type of Media:nk]'>
            <groupfilter function='member' level='[none:Type of Media:nk]' member='&quot;Movie&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Type of Media:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[Exclusions (Title,URL)]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[Action (Title,URL)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]' field-type='quantitative' max-size='1' min-size='0.000666667' type='quantsize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739117621250:qk]' />
              <lod column='[federated.16528900by6s131f9qlq90dm3noc].[none:URL:nk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Episodes:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Favorites:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Members:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of ratings:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Popularity:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Rank:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739109130240:qk]' />
              <text column='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' />
              <color column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Best Movies of the Last 12 Months'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location id='BestNewMovies' path='/workbooks/Anime' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
          </datasources>
          <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
            <column caption='Percentage of Members who Favorite' datatype='real' name='[Calculation_4901886739109130240]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Number of Favorites] / [Number of Members] * 100' />
            </column>
            <column caption='AwesomenessFactor' datatype='real' name='[Calculation_4901886739110236161]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4901886739109130240]*([Score]^2)' />
            </column>
            <column caption='Came out in the last 12 months' datatype='boolean' name='[Calculation_4901886739125026819]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF DATEDIFF(&apos;month&apos;,[Date Finished Airing],TODAY()) &lt;= 12&#13;&#10;     THEN true&#13;&#10;     ELSE false&#13;&#10;     END' />
            </column>
            <column datatype='date' name='[Date Finished Airing]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Favorites]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Members]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of ratings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Popularity]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Rank]' role='measure' type='quantitative' />
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type of Media]' role='dimension' type='nominal' />
            <column datatype='string' name='[URL]' role='dimension' type='nominal' />
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4901886739125026819]' derivation='None' name='[none:Calculation_4901886739125026819:nk]' pivot='key' type='nominal' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type of Media]' derivation='None' name='[none:Type of Media:nk]' pivot='key' type='nominal' />
            <column-instance column='[URL]' derivation='None' name='[none:URL:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4901886739109130240]' derivation='Sum' name='[sum:Calculation_4901886739109130240:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4901886739110236161]' derivation='Sum' name='[sum:Calculation_4901886739110236161:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Favorites]' derivation='Sum' name='[sum:Number of Favorites:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Members]' derivation='Sum' name='[sum:Number of Members:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of ratings]' derivation='Sum' name='[sum:Number of ratings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Popularity]' derivation='Sum' name='[sum:Popularity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rank]' derivation='Sum' name='[sum:Rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Finished Airing]' derivation='Day-Trunc' name='[tdy:Date Finished Airing:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[Action (Title,URL)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Title]' />
              <groupfilter function='level-members' level='[URL]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_4901886739125026819:nk]'>
            <groupfilter function='member' level='[none:Calculation_4901886739125026819:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[none:Type of Media:nk]'>
            <groupfilter function='member' level='[none:Type of Media:nk]' member='&quot;Movie&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.16528900by6s131f9qlq90dm3noc].[tdy:Date Finished Airing:qk]' included-values='in-range'>
            <min>#1962-01-01 00:00:00#</min>
            <max>#2017-06-17 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Type of Media:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[tdy:Date Finished Airing:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[Action (Title,URL)]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_4901886739125026819:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]' />
              <lod column='[federated.16528900by6s131f9qlq90dm3noc].[none:URL:nk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Favorites:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Members:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of ratings:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Popularity:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Rank:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739109130240:qk]' />
              <text column='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' />
              <color column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Genres'>
      <table>
        <view>
          <datasources>
            <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Avoid Genre3' datatype='string' name='[Avoid Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
            <column caption='Avoid Genre2' datatype='string' name='[Avoid Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
            <column caption='Required Genre1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre2' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre3' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre4' datatype='string' name='[Required Genre1 (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre5' datatype='string' name='[Required Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre6' datatype='string' name='[Required Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Avoid Genre1' datatype='string' name='[Required Genre6 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
            <column caption='HasGenres' datatype='boolean' name='[Calculation_379991242418241536]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='(CONTAINS([Genres], [Parameters].[Parameter 1]) OR [Parameters].[Parameter 1] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy)]) OR [Parameters].[Required Genre1 (copy)] = &quot;Any&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Required Genre6 (copy)])) OR [Parameters].[Required Genre6 (copy)] = &quot;None&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Avoid Genre1 (copy)])) OR [Parameters].[Avoid Genre1 (copy)] = &quot;None&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Avoid Genre1 (copy) (copy)])) OR [Parameters].[Avoid Genre1 (copy) (copy)] = &quot;None&quot;)' />
            </column>
            <column caption='Percentage of Members who Favorite' datatype='real' name='[Calculation_4901886739109130240]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Number of Favorites] / [Number of Members] * 100' />
            </column>
            <column caption='AwesomenessFactor' datatype='real' name='[Calculation_4901886739110236161]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4901886739109130240]*([Score]^2)' />
            </column>
            <column datatype='string' name='[Genres]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Favorites]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Members]' role='measure' type='quantitative' />
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_379991242418241536]' derivation='None' name='[none:Calculation_379991242418241536:nk]' pivot='key' type='nominal' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4901886739110236161]' derivation='Sum' name='[sum:Calculation_4901886739110236161:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_379991242418241536:nk]'>
            <groupfilter function='member' level='[none:Calculation_379991242418241536:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_379991242418241536:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' value='600' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Great New Anime'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location id='GreatNewAnime' path='/workbooks/Anime' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
          </datasources>
          <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
            <column caption='Percentage of Members who Favorite' datatype='real' name='[Calculation_4901886739109130240]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Number of Favorites] / [Number of Members] * 100' />
            </column>
            <column caption='AwesomenessFactor' datatype='real' name='[Calculation_4901886739110236161]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4901886739109130240]*([Score]^2)' />
            </column>
            <column datatype='date' name='[Date Started Airing]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Episodes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Favorites]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Members]' role='measure' type='quantitative' />
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column datatype='string' name='[URL]' role='dimension' type='nominal' />
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[URL]' derivation='None' name='[none:URL:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4901886739110236161]' derivation='Sum' name='[sum:Calculation_4901886739110236161:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Episodes]' derivation='Sum' name='[sum:Number of Episodes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Favorites]' derivation='Sum' name='[sum:Number of Favorites:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Started Airing]' derivation='Day-Trunc' name='[tdy:Date Started Airing:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[Action (Title,URL)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Title]' />
              <groupfilter function='level-members' level='[URL]' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' direction='DESC' using='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Favorites:qk]' />
          <filter class='quantitative' column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' included-values='in-range-or-null'>
            <min>8.5</min>
            <max>10.0</max>
          </filter>
          <filter class='quantitative' column='[federated.16528900by6s131f9qlq90dm3noc].[tdy:Date Started Airing:qk]' included-values='in-range'>
            <min>#2014-12-16 00:00:00#</min>
            <max>#2017-06-17 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[tdy:Date Started Airing:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[Action (Title,URL)]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' value='364' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' value='Search for an anime...'>
              <formatted-text>
                <run>Search for an anime...</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.16528900by6s131f9qlq90dm3noc].[none:URL:nk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Episodes:qk]' />
              <text column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</rows>
        <cols>[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Favorites:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Highest Rated'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location id='HighestRated' path='/workbooks/Anime' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
          </datasources>
          <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
            <column caption='Percentage of Members who Favorite' datatype='real' name='[Calculation_4901886739109130240]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Number of Favorites] / [Number of Members] * 100' />
            </column>
            <column caption='AwesomenessFactor' datatype='real' name='[Calculation_4901886739110236161]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4901886739109130240]*([Score]^2)' />
            </column>
            <column datatype='integer' name='[Number of Favorites]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Members]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of ratings]' role='measure' type='quantitative' />
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column datatype='string' name='[URL]' role='dimension' type='nominal' />
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[URL]' derivation='None' name='[none:URL:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4901886739110236161]' derivation='Sum' name='[sum:Calculation_4901886739110236161:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Favorites]' derivation='Sum' name='[sum:Number of Favorites:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Members]' derivation='Sum' name='[sum:Number of Members:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of ratings]' derivation='Sum' name='[sum:Number of ratings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[Action (Title,URL)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Title]' />
              <groupfilter function='level-members' level='[URL]' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' direction='DESC' using='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' />
          <filter class='quantitative' column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' included-values='in-range'>
            <min>8.5</min>
            <max>10.0</max>
          </filter>
          <slices>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[Action (Title,URL)]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' field-type='quantitative' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' value='384' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Favorites:qk]' />
              <lod column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Members:qk]' />
              <lod column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of ratings:qk]' />
              <lod column='[federated.16528900by6s131f9qlq90dm3noc].[none:URL:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</rows>
        <cols>[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Is Anime Getting Better?'>
      <table>
        <view>
          <datasources>
            <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Avoid Genre3' datatype='string' name='[Avoid Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
            <column caption='Avoid Genre2' datatype='string' name='[Avoid Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
            <column caption='Required Genre1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre2' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre3' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre4' datatype='string' name='[Required Genre1 (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre5' datatype='string' name='[Required Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre6' datatype='string' name='[Required Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Avoid Genre1' datatype='string' name='[Required Genre6 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
            <column caption='HasGenres' datatype='boolean' name='[Calculation_379991242418241536]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='(CONTAINS([Genres], [Parameters].[Parameter 1]) OR [Parameters].[Parameter 1] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy)]) OR [Parameters].[Required Genre1 (copy)] = &quot;Any&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Required Genre6 (copy)])) OR [Parameters].[Required Genre6 (copy)] = &quot;None&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Avoid Genre1 (copy)])) OR [Parameters].[Avoid Genre1 (copy)] = &quot;None&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Avoid Genre1 (copy) (copy)])) OR [Parameters].[Avoid Genre1 (copy) (copy)] = &quot;None&quot;)' />
            </column>
            <column caption='Percentage of Members who Favorite' datatype='real' name='[Calculation_4901886739109130240]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Number of Favorites] / [Number of Members] * 100' />
            </column>
            <column caption='AwesomenessFactor' datatype='real' name='[Calculation_4901886739110236161]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4901886739109130240]*([Score]^2)' />
            </column>
            <column datatype='date' name='[Date Started Airing]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Genres]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Favorites]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Members]' role='measure' type='quantitative' />
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_4901886739110236161]' derivation='Avg' name='[avg:Calculation_4901886739110236161:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_379991242418241536]' derivation='None' name='[none:Calculation_379991242418241536:nk]' pivot='key' type='nominal' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4901886739110236161]' derivation='Sum' name='[sum:Calculation_4901886739110236161:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Started Airing]' derivation='Year' name='[yr:Date Started Airing:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_379991242418241536:nk]'>
            <groupfilter function='member' level='[none:Calculation_379991242418241536:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Date Started Airing:ok]' />
              <groupfilter function='member' level='[yr:Date Started Airing:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_379991242418241536:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.16528900by6s131f9qlq90dm3noc].[avg:Calculation_4901886739110236161:qk]</rows>
        <cols>[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Most Favorited'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location id='MostFavorited' path='/workbooks/Anime' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
          </datasources>
          <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
            <column caption='Percentage of Members who Favorite' datatype='real' name='[Calculation_4901886739109130240]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Number of Favorites] / [Number of Members] * 100' />
            </column>
            <column caption='AwesomenessFactor' datatype='real' name='[Calculation_4901886739110236161]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4901886739109130240]*([Score]^2)' />
            </column>
            <column datatype='integer' name='[Number of Favorites]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Members]' role='measure' type='quantitative' />
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column datatype='string' name='[URL]' role='dimension' type='nominal' />
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[URL]' derivation='None' name='[none:URL:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4901886739110236161]' derivation='Sum' name='[sum:Calculation_4901886739110236161:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Favorites]' derivation='Sum' name='[sum:Number of Favorites:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[Action (Title,URL)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Title]' />
              <groupfilter function='level-members' level='[URL]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Favorites:qk]' included-values='non-null' />
          <slices>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Favorites:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[Action (Title,URL)]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <lod column='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' />
              <lod column='[federated.16528900by6s131f9qlq90dm3noc].[none:URL:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Favorites:qk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Score over Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
          </datasources>
          <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
            <column caption='Percentage of Members who Favorite' datatype='real' name='[Calculation_4901886739109130240]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Number of Favorites] / [Number of Members] * 100' />
            </column>
            <column caption='AwesomenessFactor' datatype='real' name='[Calculation_4901886739110236161]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4901886739109130240]*([Score]^2)' />
            </column>
            <column datatype='date' name='[Date Finished Airing]' role='dimension' type='ordinal' />
            <column datatype='date' name='[Date Started Airing]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Favorites]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Members]' role='measure' type='quantitative' />
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column datatype='string' name='[URL]' role='dimension' type='nominal' />
            <column-instance column='[URL]' derivation='Attribute' name='[attr:URL:nk]' pivot='key' type='nominal' />
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4901886739110236161]' derivation='Sum' name='[sum:Calculation_4901886739110236161:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Finished Airing]' derivation='Day-Trunc' name='[tdy:Date Finished Airing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Finished Airing]' derivation='Year-Trunc' name='[tyr:Date Finished Airing:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date Started Airing]' derivation='Year' name='[yr:Date Started Airing:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[Action (YEAR(Date Started Airing))]'>
            <groupfilter function='level-members' level='[yr:Date Started Airing:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[Exclusions (Title,YEAR(Date Finished Airing))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Title:nk]' />
                <groupfilter function='level-members' level='[tyr:Date Finished Airing:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Title:nk]' member='&quot;Failed to export this anime&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[tyr:Date Finished Airing:ok]' member='#1998-01-01 00:00:00#' />
                  <groupfilter function='member' level='[tyr:Date Finished Airing:ok]' member='#2008-01-01 00:00:00#' />
                  <groupfilter function='member' level='[tyr:Date Finished Airing:ok]' member='#2009-01-01 00:00:00#' />
                  <groupfilter function='member' level='[tyr:Date Finished Airing:ok]' member='#2010-01-01 00:00:00#' />
                  <groupfilter function='member' level='[tyr:Date Finished Airing:ok]' member='#2012-01-01 00:00:00#' />
                  <groupfilter function='member' level='[tyr:Date Finished Airing:ok]' member='#2013-01-01 00:00:00#' />
                  <groupfilter function='member' level='[tyr:Date Finished Airing:ok]' member='#2015-01-01 00:00:00#' />
                  <groupfilter function='member' level='[tyr:Date Finished Airing:ok]' member='#2016-01-01 00:00:00#' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[tyr:Date Finished Airing:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tyr:Date Finished Airing:ok]' />
              <groupfilter function='member' level='[tyr:Date Finished Airing:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[Exclusions (Title,YEAR(Date Finished Airing))]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[tyr:Date Finished Airing:ok]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[Action (YEAR(Date Started Airing))]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='boxplot-style' id='refline1' value='modern' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <lod column='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[attr:URL:nk]' />
            </encodings>
            <trendline degree='3' enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='polynomial' />
            <reference-line axis-column='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' z-order='2' />
            <reference-line axis-column='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='none' probability='95' scope='per-cell' value-column='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]</rows>
        <cols>[federated.16528900by6s131f9qlq90dm3noc].[tdy:Date Finished Airing:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='When does anime come out?'>
      <table>
        <view>
          <datasources>
            <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Avoid Genre3' datatype='string' name='[Avoid Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
            <column caption='Avoid Genre2' datatype='string' name='[Avoid Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
            <column caption='Required Genre1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre2' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre3' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre4' datatype='string' name='[Required Genre1 (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre5' datatype='string' name='[Required Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre6' datatype='string' name='[Required Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Avoid Genre1' datatype='string' name='[Required Genre6 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
            <column caption='HasGenres' datatype='boolean' name='[Calculation_379991242418241536]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='(CONTAINS([Genres], [Parameters].[Parameter 1]) OR [Parameters].[Parameter 1] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy)]) OR [Parameters].[Required Genre1 (copy)] = &quot;Any&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Required Genre6 (copy)])) OR [Parameters].[Required Genre6 (copy)] = &quot;None&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Avoid Genre1 (copy)])) OR [Parameters].[Avoid Genre1 (copy)] = &quot;None&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Avoid Genre1 (copy) (copy)])) OR [Parameters].[Avoid Genre1 (copy) (copy)] = &quot;None&quot;)' />
            </column>
            <column caption='Percentage of Members who Favorite' datatype='real' name='[Calculation_4901886739109130240]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Number of Favorites] / [Number of Members] * 100' />
            </column>
            <column caption='AwesomenessFactor' datatype='real' name='[Calculation_4901886739110236161]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4901886739109130240]*([Score]^2)' />
            </column>
            <column datatype='date' name='[Date Finished Airing]' role='dimension' type='ordinal' />
            <column datatype='date' name='[Date Started Airing]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Genres]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Favorites]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Members]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Started Airing]' derivation='Day' name='[dy:Date Started Airing:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date Started Airing]' derivation='Month' name='[mn:Date Started Airing:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_379991242418241536]' derivation='None' name='[none:Calculation_379991242418241536:nk]' pivot='key' type='nominal' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4901886739110236161]' derivation='Sum' name='[sum:Calculation_4901886739110236161:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Finished Airing]' derivation='Day-Trunc' name='[tdy:Date Finished Airing:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date Started Airing]' derivation='Year' name='[yr:Date Started Airing:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[Action (DAY(Date Finished Airing),Title)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tdy:Date Finished Airing:ok]' />
              <groupfilter function='level-members' level='[Title]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[Action (YEAR(Date Started Airing))]'>
            <groupfilter function='level-members' level='[yr:Date Started Airing:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[dy:Date Started Airing:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[dy:Date Started Airing:ok]' />
              <groupfilter function='member' level='[dy:Date Started Airing:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_379991242418241536:nk]'>
            <groupfilter function='member' level='[none:Calculation_379991242418241536:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_379991242418241536:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[Action (DAY(Date Finished Airing),Title)]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[Action (YEAR(Date Started Airing))]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[dy:Date Started Airing:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Records:qk]</rows>
        <cols>([federated.16528900by6s131f9qlq90dm3noc].[mn:Date Started Airing:ok] / [federated.16528900by6s131f9qlq90dm3noc].[dy:Date Started Airing:ok])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Anime over Time'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
      </datasources>
      <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
        <column datatype='real' name='[Score]' role='measure' type='quantitative' />
        <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='26138' id='13' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='26138' id='8' name='When does anime come out?' w='93189' x='0' y='0'>
              <layout-cache cell-count-w='354' minheight='205' non-cell-size-w='61' type-h='scalable' type-w='cell' />
            </zone>
            <zone fixed-size='160' h='26138' id='4' is-fixed='true' param='vert' type='layout-flow' w='6811' x='93189' y='0'>
              <zone h='4396' id='7' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='6811' x='93189' y='0' />
              <zone h='5416' id='9' name='When does anime come out?' param='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='6811' x='93189' y='4396' />
            </zone>
          </zone>
          <zone h='73862' id='14' layout-strategy-id='distribute-evenly' param='horz' type='layout-flow' w='100000' x='0' y='26138'>
            <zone fixed-size='665' h='73862' id='1' is-fixed='true' name='Avg Number of Episodes' w='33334' x='0' y='26138'>
              <layout-cache minheight='203' type-h='scalable' type-w='cell' />
            </zone>
            <zone fixed-size='463' h='73862' id='12' is-fixed='true' name='Score over Time' w='33333' x='33333' y='26138'>
              <layout-cache minheight='198' minwidth='163' type-h='scalable' type-w='scalable' />
            </zone>
            <zone h='73862' id='10' name='Anime Popularity' w='33333' x='66666' y='26138'>
              <layout-cache type-h='fixed' type-w='cell' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Discovery'>
      <repository-location id='LandingDashboard' path='/workbooks/Anime' revision='' />
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
      </datasources>
      <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
        <column datatype='string' name='[Title]' role='dimension' type='nominal' />
        <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='22' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='20' param='horz' type='layout-flow' w='99830' x='0' y='0'>
              <zone h='100000' id='18' param='horz' type='layout-flow' w='99830' x='0' y='0'>
                <zone h='100000' id='16' type='layout-basic' w='99830' x='0' y='0'>
                  <zone h='38320' id='25' type='layout-basic' w='99830' x='0' y='0'>
                    <zone h='38320' id='14' param='horz' type='layout-flow' w='50080' x='0' y='0'>
                      <zone fixed-size='1083' h='38320' id='8' is-fixed='true' name='Great New Anime' w='50080' x='0' y='0'>
                        <layout-cache fixed-size-h='538' minwidth='482' type-h='fixed' type-w='scalable' />
                      </zone>
                    </zone>
                    <zone h='38320' id='26' param='horz' type='layout-flow' w='49750' x='50080' y='0'>
                      <zone h='38320' id='3' name='Highest Rated' w='49750' x='50080' y='0'>
                        <layout-cache fixed-size-h='44' minwidth='502' type-h='fixed' type-w='scalable' />
                      </zone>
                    </zone>
                  </zone>
                  <zone h='61680' id='24' param='horz' type='layout-flow' w='99830' x='0' y='38320'>
                    <zone h='61680' id='27' param='horz' type='layout-flow' w='99830' x='0' y='38320'>
                      <zone h='61680' id='11' name='Best Movies' w='45104' x='0' y='38320'>
                        <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                      </zone>
                      <zone fixed-size='222' h='61680' id='1' is-fixed='true' name='Most Favorited' w='9791' x='45104' y='38320'>
                        <layout-cache minheight='143' type-h='scalable' type-w='cell' />
                      </zone>
                      <zone h='61680' id='15' name='Best Movies of the Last 12 Months' w='44934' x='54895' y='38320'>
                        <layout-cache cell-count-w='1' type-h='fixed' type-w='cell' />
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='3454' id='23' mode='pattern' name='Great New Anime' param='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' type='filter' w='14645' x='83780' y='1413' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Genres' tab-color='#6e597f'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_379991242418241536:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Required Genre1 (copy) (copy) (copy) (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Required Genre1 (copy) (copy) (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Required Genre1 (copy) (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Required Genre1 (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Required Genre6 (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Avoid Genre1 (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Avoid Genre1 (copy) (copy)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Is Anime Getting Better?' tab-color='#6e597f'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Most Favorited' tab-color='#17927d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</field>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[none:URL:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Highest Rated' tab-color='#17927d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[none:Score (copy):ok]</field>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</field>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[none:URL:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Great New Anime' tab-color='#17927d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='pattern' param='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' type='filter' />
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[tdy:Date Started Airing:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[attr:URL:nk]</field>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[none:URL:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Best Movies' tab-color='#17927d'>
      <cards>
        <edge name='left'>
          <strip size='228'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='pattern' param='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' type='filter' />
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</field>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[none:URL:nk]</field>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Best Movies of the Last 12 Months' tab-color='#17927d'>
      <cards>
        <edge name='left'>
          <strip size='239'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_4901886739125026819:nk]' type='filter' />
            <card mode='pattern' param='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' type='filter' />
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[none:Type of Media:nk]' type='filter' />
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[tdy:Date Finished Airing:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</field>
                  <field>[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Favorites:qk]</field>
                  <field>[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Failed to export this anime&quot;</value>
                <value>1677</value>
                <value>39.810000000000002</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[none:URL:nk]</field>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Discovery' tab-color='#17927d'>
      <viewpoints>
        <viewpoint name='Best Movies'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Best Movies of the Last 12 Months'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Great New Anime'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Highest Rated'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Most Favorited'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
    </window>
    <window class='worksheet' name='Score over Time' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</field>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[none:URL:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Avg Number of Episodes' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='When does anime come out?' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.16528900by6s131f9qlq90dm3noc].[mn:Date Started Airing:ok]</field>
                  <field>[federated.16528900by6s131f9qlq90dm3noc].[dy:Date Started Airing:ok]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Anime Popularity' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Anime over Time' tab-color='#4f779a'>
      <viewpoints>
        <viewpoint name='Anime Popularity'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Avg Number of Episodes'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Score over Time'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='When does anime come out?'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Anime Popularity' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Anime over Time' width='192'>
      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
      P7qg24e+WgB9AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Avg Number of Episodes' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Best Movies' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Best Movies of the Last 12 Months' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Discovery' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Genres' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Great New Anime' width='192'>
      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
      aOYCmHOi+b8aw0aTuDhzrwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Highest Rated' width='192'>
      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
      gu9fgv88x+8Rt+fvYHTh+QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Is Anime Getting Better?' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Most Favorited' width='130'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Score over Time' width='192'>
      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
      HWKC5VnJfAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='When does anime come out?' width='192'>
      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
      8oZgBkzRNgAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
