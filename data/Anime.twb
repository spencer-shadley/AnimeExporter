<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10300.17.0615.2100                               -->
<workbook source-build='10.3.1 (10300.17.0615.2100)' source-platform='win' version='10.3' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='Anime' path='/workbooks' revision='1.5' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.3'>
      <aliases enabled='yes' />
      <column caption='Avoid Genre3' datatype='string' name='[Avoid Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
        <calculation class='tableau' formula='&quot;None&quot;' />
        <members>
          <member value='&quot;None&quot;' />
          <member value='&quot;Action&quot;' />
          <member value='&quot;Adventure&quot;' />
          <member value='&quot;Cars&quot;' />
          <member value='&quot;Comedy&quot;' />
          <member value='&quot;Dementia&quot;' />
          <member value='&quot;Demons&quot;' />
          <member value='&quot;Drama&quot;' />
          <member value='&quot;Ecchi&quot;' />
          <member value='&quot;Fantasy&quot;' />
          <member value='&quot;Game&quot;' />
          <member value='&quot;Harem&quot;' />
          <member value='&quot;Historical&quot;' />
          <member value='&quot;Horror&quot;' />
          <member value='&quot;Josei&quot;' />
          <member value='&quot;Kids&quot;' />
          <member value='&quot;Magic&quot;' />
          <member value='&quot;Martial Arts&quot;' />
          <member value='&quot;Mecha&quot;' />
          <member value='&quot;Military&quot;' />
          <member value='&quot;Music&quot;' />
          <member value='&quot;Mystery&quot;' />
          <member value='&quot;Parody&quot;' />
          <member value='&quot;Police&quot;' />
          <member value='&quot;Psychological&quot;' />
          <member value='&quot;Romance&quot;' />
          <member value='&quot;Samurai&quot;' />
          <member value='&quot;School&quot;' />
          <member value='&quot;Sci-Fi&quot;' />
          <member value='&quot;Seinen&quot;' />
          <member value='&quot;Shoujo&quot;' />
          <member value='&quot;Shoujo Ai&quot;' />
          <member value='&quot;Shounen&quot;' />
          <member value='&quot;Slice of Life&quot;' />
          <member value='&quot;Space&quot;' />
          <member value='&quot;Sports&quot;' />
          <member value='&quot;Super Power&quot;' />
          <member value='&quot;Supernatural&quot;' />
          <member value='&quot;Thriller&quot;' />
          <member value='&quot;Vampire&quot;' />
        </members>
      </column>
      <column caption='Avoid Genre2' datatype='string' name='[Avoid Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
        <calculation class='tableau' formula='&quot;None&quot;' />
        <members>
          <member value='&quot;None&quot;' />
          <member value='&quot;Action&quot;' />
          <member value='&quot;Adventure&quot;' />
          <member value='&quot;Cars&quot;' />
          <member value='&quot;Comedy&quot;' />
          <member value='&quot;Dementia&quot;' />
          <member value='&quot;Demons&quot;' />
          <member value='&quot;Drama&quot;' />
          <member value='&quot;Ecchi&quot;' />
          <member value='&quot;Fantasy&quot;' />
          <member value='&quot;Game&quot;' />
          <member value='&quot;Harem&quot;' />
          <member value='&quot;Historical&quot;' />
          <member value='&quot;Horror&quot;' />
          <member value='&quot;Josei&quot;' />
          <member value='&quot;Kids&quot;' />
          <member value='&quot;Magic&quot;' />
          <member value='&quot;Martial Arts&quot;' />
          <member value='&quot;Mecha&quot;' />
          <member value='&quot;Military&quot;' />
          <member value='&quot;Music&quot;' />
          <member value='&quot;Mystery&quot;' />
          <member value='&quot;Parody&quot;' />
          <member value='&quot;Police&quot;' />
          <member value='&quot;Psychological&quot;' />
          <member value='&quot;Romance&quot;' />
          <member value='&quot;Samurai&quot;' />
          <member value='&quot;School&quot;' />
          <member value='&quot;Sci-Fi&quot;' />
          <member value='&quot;Seinen&quot;' />
          <member value='&quot;Shoujo&quot;' />
          <member value='&quot;Shoujo Ai&quot;' />
          <member value='&quot;Shounen&quot;' />
          <member value='&quot;Slice of Life&quot;' />
          <member value='&quot;Space&quot;' />
          <member value='&quot;Sports&quot;' />
          <member value='&quot;Super Power&quot;' />
          <member value='&quot;Supernatural&quot;' />
          <member value='&quot;Thriller&quot;' />
          <member value='&quot;Vampire&quot;' />
        </members>
      </column>
      <column caption='Required Genre1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
        <calculation class='tableau' formula='&quot;Any&quot;' />
        <members>
          <member value='&quot;Any&quot;' />
          <member value='&quot;Action&quot;' />
          <member value='&quot;Adventure&quot;' />
          <member value='&quot;Cars&quot;' />
          <member value='&quot;Comedy&quot;' />
          <member value='&quot;Dementia&quot;' />
          <member value='&quot;Demons&quot;' />
          <member value='&quot;Drama&quot;' />
          <member value='&quot;Ecchi&quot;' />
          <member value='&quot;Fantasy&quot;' />
          <member value='&quot;Game&quot;' />
          <member value='&quot;Harem&quot;' />
          <member value='&quot;Historical&quot;' />
          <member value='&quot;Horror&quot;' />
          <member value='&quot;Josei&quot;' />
          <member value='&quot;Kids&quot;' />
          <member value='&quot;Magic&quot;' />
          <member value='&quot;Martial Arts&quot;' />
          <member value='&quot;Mecha&quot;' />
          <member value='&quot;Military&quot;' />
          <member value='&quot;Music&quot;' />
          <member value='&quot;Mystery&quot;' />
          <member value='&quot;Parody&quot;' />
          <member value='&quot;Police&quot;' />
          <member value='&quot;Psychological&quot;' />
          <member value='&quot;Romance&quot;' />
          <member value='&quot;Samurai&quot;' />
          <member value='&quot;School&quot;' />
          <member value='&quot;Sci-Fi&quot;' />
          <member value='&quot;Seinen&quot;' />
          <member value='&quot;Shoujo&quot;' />
          <member value='&quot;Shoujo Ai&quot;' />
          <member value='&quot;Shounen&quot;' />
          <member value='&quot;Slice of Life&quot;' />
          <member value='&quot;Space&quot;' />
          <member value='&quot;Sports&quot;' />
          <member value='&quot;Super Power&quot;' />
          <member value='&quot;Supernatural&quot;' />
          <member value='&quot;Thriller&quot;' />
          <member value='&quot;Vampire&quot;' />
        </members>
      </column>
      <column caption='Required Genre2' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
        <calculation class='tableau' formula='&quot;Any&quot;' />
        <members>
          <member value='&quot;Any&quot;' />
          <member value='&quot;Action&quot;' />
          <member value='&quot;Adventure&quot;' />
          <member value='&quot;Cars&quot;' />
          <member value='&quot;Comedy&quot;' />
          <member value='&quot;Dementia&quot;' />
          <member value='&quot;Demons&quot;' />
          <member value='&quot;Drama&quot;' />
          <member value='&quot;Ecchi&quot;' />
          <member value='&quot;Fantasy&quot;' />
          <member value='&quot;Game&quot;' />
          <member value='&quot;Harem&quot;' />
          <member value='&quot;Historical&quot;' />
          <member value='&quot;Horror&quot;' />
          <member value='&quot;Josei&quot;' />
          <member value='&quot;Kids&quot;' />
          <member value='&quot;Magic&quot;' />
          <member value='&quot;Martial Arts&quot;' />
          <member value='&quot;Mecha&quot;' />
          <member value='&quot;Military&quot;' />
          <member value='&quot;Music&quot;' />
          <member value='&quot;Mystery&quot;' />
          <member value='&quot;Parody&quot;' />
          <member value='&quot;Police&quot;' />
          <member value='&quot;Psychological&quot;' />
          <member value='&quot;Romance&quot;' />
          <member value='&quot;Samurai&quot;' />
          <member value='&quot;School&quot;' />
          <member value='&quot;Sci-Fi&quot;' />
          <member value='&quot;Seinen&quot;' />
          <member value='&quot;Shoujo&quot;' />
          <member value='&quot;Shoujo Ai&quot;' />
          <member value='&quot;Shounen&quot;' />
          <member value='&quot;Slice of Life&quot;' />
          <member value='&quot;Space&quot;' />
          <member value='&quot;Sports&quot;' />
          <member value='&quot;Super Power&quot;' />
          <member value='&quot;Supernatural&quot;' />
          <member value='&quot;Thriller&quot;' />
          <member value='&quot;Vampire&quot;' />
        </members>
      </column>
      <column caption='Required Genre3' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
        <calculation class='tableau' formula='&quot;Any&quot;' />
        <members>
          <member value='&quot;Any&quot;' />
          <member value='&quot;Action&quot;' />
          <member value='&quot;Adventure&quot;' />
          <member value='&quot;Cars&quot;' />
          <member value='&quot;Comedy&quot;' />
          <member value='&quot;Dementia&quot;' />
          <member value='&quot;Demons&quot;' />
          <member value='&quot;Drama&quot;' />
          <member value='&quot;Ecchi&quot;' />
          <member value='&quot;Fantasy&quot;' />
          <member value='&quot;Game&quot;' />
          <member value='&quot;Harem&quot;' />
          <member value='&quot;Historical&quot;' />
          <member value='&quot;Horror&quot;' />
          <member value='&quot;Josei&quot;' />
          <member value='&quot;Kids&quot;' />
          <member value='&quot;Magic&quot;' />
          <member value='&quot;Martial Arts&quot;' />
          <member value='&quot;Mecha&quot;' />
          <member value='&quot;Military&quot;' />
          <member value='&quot;Music&quot;' />
          <member value='&quot;Mystery&quot;' />
          <member value='&quot;Parody&quot;' />
          <member value='&quot;Police&quot;' />
          <member value='&quot;Psychological&quot;' />
          <member value='&quot;Romance&quot;' />
          <member value='&quot;Samurai&quot;' />
          <member value='&quot;School&quot;' />
          <member value='&quot;Sci-Fi&quot;' />
          <member value='&quot;Seinen&quot;' />
          <member value='&quot;Shoujo&quot;' />
          <member value='&quot;Shoujo Ai&quot;' />
          <member value='&quot;Shounen&quot;' />
          <member value='&quot;Slice of Life&quot;' />
          <member value='&quot;Space&quot;' />
          <member value='&quot;Sports&quot;' />
          <member value='&quot;Super Power&quot;' />
          <member value='&quot;Supernatural&quot;' />
          <member value='&quot;Thriller&quot;' />
          <member value='&quot;Vampire&quot;' />
        </members>
      </column>
      <column caption='Required Genre4' datatype='string' name='[Required Genre1 (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
        <calculation class='tableau' formula='&quot;Any&quot;' />
        <members>
          <member value='&quot;Any&quot;' />
          <member value='&quot;Action&quot;' />
          <member value='&quot;Adventure&quot;' />
          <member value='&quot;Cars&quot;' />
          <member value='&quot;Comedy&quot;' />
          <member value='&quot;Dementia&quot;' />
          <member value='&quot;Demons&quot;' />
          <member value='&quot;Drama&quot;' />
          <member value='&quot;Ecchi&quot;' />
          <member value='&quot;Fantasy&quot;' />
          <member value='&quot;Game&quot;' />
          <member value='&quot;Harem&quot;' />
          <member value='&quot;Historical&quot;' />
          <member value='&quot;Horror&quot;' />
          <member value='&quot;Josei&quot;' />
          <member value='&quot;Kids&quot;' />
          <member value='&quot;Magic&quot;' />
          <member value='&quot;Martial Arts&quot;' />
          <member value='&quot;Mecha&quot;' />
          <member value='&quot;Military&quot;' />
          <member value='&quot;Music&quot;' />
          <member value='&quot;Mystery&quot;' />
          <member value='&quot;Parody&quot;' />
          <member value='&quot;Police&quot;' />
          <member value='&quot;Psychological&quot;' />
          <member value='&quot;Romance&quot;' />
          <member value='&quot;Samurai&quot;' />
          <member value='&quot;School&quot;' />
          <member value='&quot;Sci-Fi&quot;' />
          <member value='&quot;Seinen&quot;' />
          <member value='&quot;Shoujo&quot;' />
          <member value='&quot;Shoujo Ai&quot;' />
          <member value='&quot;Shounen&quot;' />
          <member value='&quot;Slice of Life&quot;' />
          <member value='&quot;Space&quot;' />
          <member value='&quot;Sports&quot;' />
          <member value='&quot;Super Power&quot;' />
          <member value='&quot;Supernatural&quot;' />
          <member value='&quot;Thriller&quot;' />
          <member value='&quot;Vampire&quot;' />
        </members>
      </column>
      <column caption='Required Genre5' datatype='string' name='[Required Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
        <calculation class='tableau' formula='&quot;Any&quot;' />
        <members>
          <member value='&quot;Any&quot;' />
          <member value='&quot;Action&quot;' />
          <member value='&quot;Adventure&quot;' />
          <member value='&quot;Cars&quot;' />
          <member value='&quot;Comedy&quot;' />
          <member value='&quot;Dementia&quot;' />
          <member value='&quot;Demons&quot;' />
          <member value='&quot;Drama&quot;' />
          <member value='&quot;Ecchi&quot;' />
          <member value='&quot;Fantasy&quot;' />
          <member value='&quot;Game&quot;' />
          <member value='&quot;Harem&quot;' />
          <member value='&quot;Historical&quot;' />
          <member value='&quot;Horror&quot;' />
          <member value='&quot;Josei&quot;' />
          <member value='&quot;Kids&quot;' />
          <member value='&quot;Magic&quot;' />
          <member value='&quot;Martial Arts&quot;' />
          <member value='&quot;Mecha&quot;' />
          <member value='&quot;Military&quot;' />
          <member value='&quot;Music&quot;' />
          <member value='&quot;Mystery&quot;' />
          <member value='&quot;Parody&quot;' />
          <member value='&quot;Police&quot;' />
          <member value='&quot;Psychological&quot;' />
          <member value='&quot;Romance&quot;' />
          <member value='&quot;Samurai&quot;' />
          <member value='&quot;School&quot;' />
          <member value='&quot;Sci-Fi&quot;' />
          <member value='&quot;Seinen&quot;' />
          <member value='&quot;Shoujo&quot;' />
          <member value='&quot;Shoujo Ai&quot;' />
          <member value='&quot;Shounen&quot;' />
          <member value='&quot;Slice of Life&quot;' />
          <member value='&quot;Space&quot;' />
          <member value='&quot;Sports&quot;' />
          <member value='&quot;Super Power&quot;' />
          <member value='&quot;Supernatural&quot;' />
          <member value='&quot;Thriller&quot;' />
          <member value='&quot;Vampire&quot;' />
        </members>
      </column>
      <column caption='Required Genre6' datatype='string' name='[Required Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
        <calculation class='tableau' formula='&quot;Any&quot;' />
        <members>
          <member value='&quot;Any&quot;' />
          <member value='&quot;Action&quot;' />
          <member value='&quot;Adventure&quot;' />
          <member value='&quot;Cars&quot;' />
          <member value='&quot;Comedy&quot;' />
          <member value='&quot;Dementia&quot;' />
          <member value='&quot;Demons&quot;' />
          <member value='&quot;Drama&quot;' />
          <member value='&quot;Ecchi&quot;' />
          <member value='&quot;Fantasy&quot;' />
          <member value='&quot;Game&quot;' />
          <member value='&quot;Harem&quot;' />
          <member value='&quot;Historical&quot;' />
          <member value='&quot;Horror&quot;' />
          <member value='&quot;Josei&quot;' />
          <member value='&quot;Kids&quot;' />
          <member value='&quot;Magic&quot;' />
          <member value='&quot;Martial Arts&quot;' />
          <member value='&quot;Mecha&quot;' />
          <member value='&quot;Military&quot;' />
          <member value='&quot;Music&quot;' />
          <member value='&quot;Mystery&quot;' />
          <member value='&quot;Parody&quot;' />
          <member value='&quot;Police&quot;' />
          <member value='&quot;Psychological&quot;' />
          <member value='&quot;Romance&quot;' />
          <member value='&quot;Samurai&quot;' />
          <member value='&quot;School&quot;' />
          <member value='&quot;Sci-Fi&quot;' />
          <member value='&quot;Seinen&quot;' />
          <member value='&quot;Shoujo&quot;' />
          <member value='&quot;Shoujo Ai&quot;' />
          <member value='&quot;Shounen&quot;' />
          <member value='&quot;Slice of Life&quot;' />
          <member value='&quot;Space&quot;' />
          <member value='&quot;Sports&quot;' />
          <member value='&quot;Super Power&quot;' />
          <member value='&quot;Supernatural&quot;' />
          <member value='&quot;Thriller&quot;' />
          <member value='&quot;Vampire&quot;' />
        </members>
      </column>
      <column caption='Avoid Genre1' datatype='string' name='[Required Genre6 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
        <calculation class='tableau' formula='&quot;None&quot;' />
        <members>
          <member value='&quot;None&quot;' />
          <member value='&quot;Action&quot;' />
          <member value='&quot;Adventure&quot;' />
          <member value='&quot;Cars&quot;' />
          <member value='&quot;Comedy&quot;' />
          <member value='&quot;Dementia&quot;' />
          <member value='&quot;Demons&quot;' />
          <member value='&quot;Drama&quot;' />
          <member value='&quot;Ecchi&quot;' />
          <member value='&quot;Fantasy&quot;' />
          <member value='&quot;Game&quot;' />
          <member value='&quot;Harem&quot;' />
          <member value='&quot;Historical&quot;' />
          <member value='&quot;Horror&quot;' />
          <member value='&quot;Josei&quot;' />
          <member value='&quot;Kids&quot;' />
          <member value='&quot;Magic&quot;' />
          <member value='&quot;Martial Arts&quot;' />
          <member value='&quot;Mecha&quot;' />
          <member value='&quot;Military&quot;' />
          <member value='&quot;Music&quot;' />
          <member value='&quot;Mystery&quot;' />
          <member value='&quot;Parody&quot;' />
          <member value='&quot;Police&quot;' />
          <member value='&quot;Psychological&quot;' />
          <member value='&quot;Romance&quot;' />
          <member value='&quot;Samurai&quot;' />
          <member value='&quot;School&quot;' />
          <member value='&quot;Sci-Fi&quot;' />
          <member value='&quot;Seinen&quot;' />
          <member value='&quot;Shoujo&quot;' />
          <member value='&quot;Shoujo Ai&quot;' />
          <member value='&quot;Shounen&quot;' />
          <member value='&quot;Slice of Life&quot;' />
          <member value='&quot;Space&quot;' />
          <member value='&quot;Sports&quot;' />
          <member value='&quot;Super Power&quot;' />
          <member value='&quot;Supernatural&quot;' />
          <member value='&quot;Thriller&quot;' />
          <member value='&quot;Vampire&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Genres (Anime Exports)' inline='true' name='federated.1b2b7y41ru73pf19gx60j1d24zbx' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Anime Exports' name='google-sheets.0sbs7kt14xb44z1d4ddff0drrzwu'>
            <connection REDIRECT_URI='urn:ietf:wg:oauth:2.0:oob' SCOPE='email profile https://www.googleapis.com/auth/drive.readonly' class='google-sheets' cleaning='no' compat='no' dataRefreshTime='' filename='Anime Exports' googleSheetId='17KQKFy9o1pPG0Yko2dTYZcRhNSTdNWyI3NLWsJyfqbI' interpretationMode='8' mimeType='application/vnd.google-apps.spreadsheet' server='' server-oauth='' username='spencershadley@gmail.com' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='google-sheets.0sbs7kt14xb44z1d4ddff0drrzwu' name='Genres' table='[Genres$]' type='table'>
          <columns gridOrigin='A1:A41:no:A1:A41:0' header='yes' outcome='2'>
            <column datatype='string' name='Genres' ordinal='0' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Genres</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Genres]</local-name>
            <parent-name>[Genres]</parent-name>
            <remote-alias>Genres</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Genres]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:A41:no:A1:A41:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='HasGenres' datatype='boolean' name='[Calculation_92605288849973249]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS(ATTR([federated.16528900by6s131f9qlq90dm3noc].[Genres]), [Parameters].[Parameter 1]) then TRUE&#13;&#10;ELSE FALSE&#13;&#10;END' />
      </column>
      <column caption='Possible Genres' datatype='string' name='[Genres]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.490143' measure-ordering='alphabetic' measure-percentage='0.200717' parameter-percentage='0.30914' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Required Genre1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
          <calculation class='tableau' formula='&quot;Any&quot;' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
        <column datatype='string' name='[Genres]' role='dimension' type='nominal' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='Top Anime (Anime Exports)' inline='true' name='federated.16528900by6s131f9qlq90dm3noc' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Anime Exports' name='google-sheets.0o2ab0f0w5exig11tlfe00jwzoqs'>
            <connection REDIRECT_URI='urn:ietf:wg:oauth:2.0:oob' SCOPE='email profile https://www.googleapis.com/auth/drive.readonly' class='google-sheets' cleaning='no' compat='no' dataRefreshTime='' filename='Anime Exports' googleSheetId='17KQKFy9o1pPG0Yko2dTYZcRhNSTdNWyI3NLWsJyfqbI' interpretationMode='256' mimeType='application/vnd.google-apps.spreadsheet' server='' server-oauth='' username='spencershadley@gmail.com' validate='no' workgroup-auth-mode='prompt' />
          </named-connection>
        </named-connections>
        <relation connection='google-sheets.0o2ab0f0w5exig11tlfe00jwzoqs' name='Top Anime' table='[&apos;Top Anime$&apos;]' type='table'>
          <columns gridOrigin='A1:AE5051:no:A1:AE5051:0' header='yes' outcome='2'>
            <column datatype='string' name='Title' ordinal='0' />
            <column datatype='string' name='English Title' ordinal='1' />
            <column datatype='string' name='Japanese Title' ordinal='2' />
            <column datatype='string' name='Synonyms' ordinal='3' />
            <column datatype='string' name='URL' ordinal='4' />
            <column datatype='real' name='Score' ordinal='5' />
            <column datatype='integer' name='Number of ratings' ordinal='6' />
            <column datatype='integer' name='Rank' ordinal='7' />
            <column datatype='integer' name='Popularity' ordinal='8' />
            <column datatype='integer' name='Number of Members' ordinal='9' />
            <column datatype='integer' name='Number of Favorites' ordinal='10' />
            <column datatype='string' name='Type of Media' ordinal='11' />
            <column datatype='integer' name='Number of Episodes' ordinal='12' />
            <column datatype='string' name='Status' ordinal='13' />
            <column datatype='date' date-parse-format='MMM dd, yyyy|#|#|MMM ddHH, yyyy' name='Date Started Airing' ordinal='14' />
            <column datatype='date' date-parse-format='MMM dd, yyyy|#|#|MMM ddHH, yyyy' name='Date Finished Airing' ordinal='15' />
            <column datatype='string' name='Producers' ordinal='16' />
            <column datatype='string' name='Licensors' ordinal='17' />
            <column datatype='string' name='Studios' ordinal='18' />
            <column datatype='string' name='Genres' ordinal='19' />
            <column datatype='string' name='Duration' ordinal='20' />
            <column datatype='string' name='Rating' ordinal='21' />
            <column datatype='string' name='Source' ordinal='22' />
            <column datatype='string' name='Synopsis' ordinal='23' />
            <column datatype='string' name='Background' ordinal='24' />
            <column datatype='string' name='Image' ordinal='25' />
            <column datatype='string' name='Adaptation' ordinal='26' />
            <column datatype='string' name='Alternative Setting' ordinal='27' />
            <column datatype='string' name='Sequel' ordinal='28' />
            <column datatype='string' name='Other' ordinal='29' />
            <column datatype='string' name='Alternative Version' ordinal='30' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AE5051:no:A1:AE5051:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Title]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Title</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>English Title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[English Title]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>English Title</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Japanese Title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Japanese Title]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Japanese Title</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Synonyms</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Synonyms]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Synonyms</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>URL</remote-name>
            <remote-type>130</remote-type>
            <local-name>[URL]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>URL</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Score]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Score</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of ratings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of ratings]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Number of ratings</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Rank</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Popularity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Popularity]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Popularity</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Members</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Members]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Number of Members</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Favorites</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Favorites]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Number of Favorites</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of Media</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type of Media]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Type of Media</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Episodes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Episodes]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Number of Episodes</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date Started Airing</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date Started Airing]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Date Started Airing</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date Finished Airing</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date Finished Airing]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Date Finished Airing</remote-alias>
            <ordinal>15</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Producers</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Producers]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Producers</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Licensors</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Licensors]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Licensors</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Studios</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Studios]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Studios</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Genres</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Genres]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Genres</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Duration</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Duration]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Duration</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rating</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Rating]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Rating</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Source]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Source</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Synopsis</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Synopsis]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Synopsis</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Background</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Background]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Background</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Image</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Image]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Image</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Adaptation</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Adaptation]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Adaptation</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Alternative Setting</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Alternative Setting]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Alternative Setting</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sequel</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sequel]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Sequel</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Other]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Other</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Alternative Version</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Alternative Version]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Alternative Version</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='HasGenres' datatype='boolean' name='[Calculation_379991242418241536]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='(CONTAINS([Genres], [Parameters].[Parameter 1]) OR [Parameters].[Parameter 1] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy)]) OR [Parameters].[Required Genre1 (copy)] = &quot;Any&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Required Genre6 (copy)])) OR [Parameters].[Required Genre6 (copy)] = &quot;None&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Avoid Genre1 (copy)])) OR [Parameters].[Avoid Genre1 (copy)] = &quot;None&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Avoid Genre1 (copy) (copy)])) OR [Parameters].[Avoid Genre1 (copy) (copy)] = &quot;None&quot;)' />
      </column>
      <column caption='Percentage of Members who Favorite' datatype='real' name='[Calculation_4901886739109130240]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Number of Favorites] / [Number of Members] * 100' />
      </column>
      <column caption='AwesomenessFactor' datatype='real' name='[Calculation_4901886739110236161]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_4901886739109130240]*([Score]^2)' />
      </column>
      <column caption='ExaggeratedAwesomenessFactor' datatype='real' name='[Calculation_4901886739117621250]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_4901886739110236161]^2' />
      </column>
      <column caption='Came out in the last 12 months' datatype='boolean' name='[Calculation_4901886739125026819]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF DATEDIFF(&apos;month&apos;,[Date Finished Airing],TODAY()) &lt;= 12&#13;&#10;     THEN true&#13;&#10;     ELSE false&#13;&#10;     END' />
      </column>
      <column datatype='date' name='[Date Finished Airing]' role='dimension' type='ordinal' />
      <column datatype='date' name='[Date Started Airing]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Score (Dimension)' datatype='real' name='[Score (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Score]' />
      </column>
      <column datatype='string' name='[Title]' role='dimension' type='nominal' />
      <column datatype='string' name='[URL]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_4901886739110236161]' derivation='Avg' name='[avg:Calculation_4901886739110236161:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
      <column-instance column='[URL]' derivation='None' name='[none:URL:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_4901886739109130240]' derivation='Sum' name='[sum:Calculation_4901886739109130240:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4901886739110236161]' derivation='Sum' name='[sum:Calculation_4901886739110236161:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date Started Airing]' derivation='Day-Trunc' name='[tdy:Date Started Airing:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date Finished Airing]' derivation='Year-Trunc' name='[tyr:Date Finished Airing:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Date Started Airing]' derivation='Year-Trunc' name='[tyr:Date Started Airing:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Title,URL)' hidden='true' name='[Action (Title,URL)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Title]' />
          <groupfilter function='level-members' level='[URL]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (DAY(Date Started Airing),Title)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tdy:Date Started Airing:qk]' />
          <groupfilter function='level-members' level='[none:Title:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Title,URL)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Title:nk]' />
          <groupfilter function='level-members' level='[none:URL:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Title,YEAR(Date Finished Airing))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Title:nk]' />
          <groupfilter function='level-members' level='[tyr:Date Finished Airing:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Title,YEAR(Date Started Airing))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Title:nk]' />
          <groupfilter function='level-members' level='[tyr:Date Started Airing:qk]' />
        </groupfilter>
      </group>
      <folder name='Metrics' role='measures'>
        <folder-item name='[Calculation_4901886739109130240]' type='field' />
        <folder-item name='[Number of Episodes]' type='field' />
        <folder-item name='[Number of Favorites]' type='field' />
        <folder-item name='[Number of Members]' type='field' />
        <folder-item name='[Number of ratings]' type='field' />
        <folder-item name='[Popularity]' type='field' />
        <folder-item name='[Rank]' type='field' />
        <folder-item name='[Score]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.541219' measure-ordering='alphabetic' measure-percentage='0.286738' parameter-percentage='0.172043' rowDisplayCount='10000' show-structure='false' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.16528900by6s131f9qlq90dm3noc].[avg:Calculation_4901886739110236161:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739109130240:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Avoid Genre3' datatype='string' name='[Avoid Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
          <calculation class='tableau' formula='&quot;None&quot;' />
        </column>
        <column caption='Avoid Genre2' datatype='string' name='[Avoid Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
          <calculation class='tableau' formula='&quot;None&quot;' />
        </column>
        <column caption='Required Genre1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
          <calculation class='tableau' formula='&quot;Any&quot;' />
        </column>
        <column caption='Required Genre2' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
          <calculation class='tableau' formula='&quot;Any&quot;' />
        </column>
        <column caption='Required Genre3' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
          <calculation class='tableau' formula='&quot;Any&quot;' />
        </column>
        <column caption='Required Genre4' datatype='string' name='[Required Genre1 (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
          <calculation class='tableau' formula='&quot;Any&quot;' />
        </column>
        <column caption='Required Genre5' datatype='string' name='[Required Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
          <calculation class='tableau' formula='&quot;Any&quot;' />
        </column>
        <column caption='Required Genre6' datatype='string' name='[Required Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
          <calculation class='tableau' formula='&quot;Any&quot;' />
        </column>
        <column caption='Avoid Genre1' datatype='string' name='[Required Genre6 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
          <calculation class='tableau' formula='&quot;None&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.16528900by6s131f9qlq90dm3noc'>
      <datasources>
        <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
      </datasources>
      <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
        <column datatype='real' name='[Score]' role='measure' type='quantitative' />
        <column datatype='string' name='[Title]' role='dimension' type='nominal' />
        <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='quantitative' column='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' included-values='in-range'>
        <min>6.6900000000000004</min>
        <max>8.8599999999999994</max>
      </filter>
      <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]'>
        <groupfilter function='level-members' level='[none:Title:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 9 (generated)' name='[Action10]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Anime over Time' type='sheet' worksheet='When does anime come out?' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Anime over Time' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Anime over Time' type='sheet' worksheet='Avg Number of Episodes' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Anime over Time' />
      </command>
    </action>
    <action caption='Show on MyAnimeList.net' name='[Action2]'>
      <source dashboard='Discovery' type='sheet' />
      <link caption='' expression='&lt;[URL]&gt;' />
    </action>
    <action caption='Filter 1 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Discovery' type='sheet' worksheet='Great New Anime' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Discovery' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Discovery' type='sheet' worksheet='Highest Rated' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Discovery' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Discovery' type='sheet' worksheet='Best Movies' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Discovery' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Discovery' type='sheet' worksheet='Most Favorited' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Discovery' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Discovery' type='sheet' worksheet='Best Movies of the Last 12 Months' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Discovery' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Anime over Time' type='sheet' worksheet='Score over Time' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Anime over Time' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Anime over Time' type='sheet' worksheet='Anime Popularity' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Anime over Time' />
      </command>
    </action>
    <datasources>
      <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
    </datasources>
    <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
      <column datatype='string' name='[URL]' role='dimension' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Anime Popularity'>
      <table>
        <view>
          <datasources>
            <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Avoid Genre3' datatype='string' name='[Avoid Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
            <column caption='Avoid Genre2' datatype='string' name='[Avoid Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
            <column caption='Required Genre1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre2' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre3' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre4' datatype='string' name='[Required Genre1 (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre5' datatype='string' name='[Required Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre6' datatype='string' name='[Required Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Avoid Genre1' datatype='string' name='[Required Genre6 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
            <column caption='HasGenres' datatype='boolean' name='[Calculation_379991242418241536]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='(CONTAINS([Genres], [Parameters].[Parameter 1]) OR [Parameters].[Parameter 1] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy)]) OR [Parameters].[Required Genre1 (copy)] = &quot;Any&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Required Genre6 (copy)])) OR [Parameters].[Required Genre6 (copy)] = &quot;None&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Avoid Genre1 (copy)])) OR [Parameters].[Avoid Genre1 (copy)] = &quot;None&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Avoid Genre1 (copy) (copy)])) OR [Parameters].[Avoid Genre1 (copy) (copy)] = &quot;None&quot;)' />
            </column>
            <column datatype='date' name='[Date Started Airing]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Genres]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_379991242418241536]' derivation='None' name='[none:Calculation_379991242418241536:nk]' pivot='key' type='nominal' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Started Airing]' derivation='Year' name='[yr:Date Started Airing:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_379991242418241536:nk]'>
            <groupfilter function='member' level='[none:Calculation_379991242418241536:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Date Started Airing:ok]' />
              <groupfilter function='member' level='[yr:Date Started Airing:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_379991242418241536:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Records:qk]</rows>
        <cols>[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Avg Number of Episodes'>
      <table>
        <view>
          <datasources>
            <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Avoid Genre3' datatype='string' name='[Avoid Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
            <column caption='Avoid Genre2' datatype='string' name='[Avoid Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
            <column caption='Required Genre1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre2' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre3' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre4' datatype='string' name='[Required Genre1 (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre5' datatype='string' name='[Required Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre6' datatype='string' name='[Required Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Avoid Genre1' datatype='string' name='[Required Genre6 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
            <column caption='HasGenres' datatype='boolean' name='[Calculation_379991242418241536]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='(CONTAINS([Genres], [Parameters].[Parameter 1]) OR [Parameters].[Parameter 1] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy)]) OR [Parameters].[Required Genre1 (copy)] = &quot;Any&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Required Genre6 (copy)])) OR [Parameters].[Required Genre6 (copy)] = &quot;None&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Avoid Genre1 (copy)])) OR [Parameters].[Avoid Genre1 (copy)] = &quot;None&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Avoid Genre1 (copy) (copy)])) OR [Parameters].[Avoid Genre1 (copy) (copy)] = &quot;None&quot;)' />
            </column>
            <column datatype='date' name='[Date Started Airing]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Genres]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Episodes]' role='measure' type='quantitative' />
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column-instance column='[Number of Episodes]' derivation='Avg' name='[avg:Number of Episodes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_379991242418241536]' derivation='None' name='[none:Calculation_379991242418241536:nk]' pivot='key' type='nominal' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Started Airing]' derivation='Year' name='[yr:Date Started Airing:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_379991242418241536:nk]'>
            <groupfilter function='member' level='[none:Calculation_379991242418241536:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Date Started Airing:ok]' />
              <groupfilter function='member' level='[yr:Date Started Airing:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_379991242418241536:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.16528900by6s131f9qlq90dm3noc].[avg:Number of Episodes:qk]</rows>
        <cols>[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Best Movies'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location id='CoolMovies' path='/workbooks/Anime' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
          </datasources>
          <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
            <column caption='Percentage of Members who Favorite' datatype='real' name='[Calculation_4901886739109130240]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Number of Favorites] / [Number of Members] * 100' />
            </column>
            <column caption='AwesomenessFactor' datatype='real' name='[Calculation_4901886739110236161]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4901886739109130240]*([Score]^2)' />
            </column>
            <column caption='ExaggeratedAwesomenessFactor' datatype='real' name='[Calculation_4901886739117621250]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4901886739110236161]^2' />
            </column>
            <column datatype='integer' name='[Number of Episodes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Favorites]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Members]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of ratings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Popularity]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Rank]' role='measure' type='quantitative' />
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type of Media]' role='dimension' type='nominal' />
            <column datatype='string' name='[URL]' role='dimension' type='nominal' />
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type of Media]' derivation='None' name='[none:Type of Media:nk]' pivot='key' type='nominal' />
            <column-instance column='[URL]' derivation='None' name='[none:URL:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4901886739109130240]' derivation='Sum' name='[sum:Calculation_4901886739109130240:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4901886739110236161]' derivation='Sum' name='[sum:Calculation_4901886739110236161:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4901886739117621250]' derivation='Sum' name='[sum:Calculation_4901886739117621250:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Episodes]' derivation='Sum' name='[sum:Number of Episodes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Favorites]' derivation='Sum' name='[sum:Number of Favorites:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Members]' derivation='Sum' name='[sum:Number of Members:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of ratings]' derivation='Sum' name='[sum:Number of ratings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Popularity]' derivation='Sum' name='[sum:Popularity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rank]' derivation='Sum' name='[sum:Rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[Exclusions (Title,URL)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Title:nk]' />
                <groupfilter function='level-members' level='[none:URL:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Title:nk]' member='&quot;Failed to export this anime&quot;' />
                <groupfilter function='member' level='[none:URL:nk]' member='&quot;https://myanimelist.net/anime/4282/Kara_no_Kyoukai_5__Mujun_Rasen&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[none:Type of Media:nk]'>
            <groupfilter function='member' level='[none:Type of Media:nk]' member='&quot;Movie&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]' included-values='in-range-or-null'>
            <min>43.0</min>
            <max>413.24014241967126</max>
          </filter>
          <slices>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Type of Media:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[Exclusions (Title,URL)]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]' field-type='quantitative' max-size='1' min-size='0.000666667' type='quantsize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739117621250:qk]' />
              <lod column='[federated.16528900by6s131f9qlq90dm3noc].[none:URL:nk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Episodes:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Favorites:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Members:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of ratings:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Popularity:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Rank:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739109130240:qk]' />
              <text column='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' />
              <color column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Best Movies of the Last 12 Months'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location id='BestNewMovies' path='/workbooks/Anime' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
          </datasources>
          <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
            <column caption='Percentage of Members who Favorite' datatype='real' name='[Calculation_4901886739109130240]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Number of Favorites] / [Number of Members] * 100' />
            </column>
            <column caption='AwesomenessFactor' datatype='real' name='[Calculation_4901886739110236161]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4901886739109130240]*([Score]^2)' />
            </column>
            <column caption='Came out in the last 12 months' datatype='boolean' name='[Calculation_4901886739125026819]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF DATEDIFF(&apos;month&apos;,[Date Finished Airing],TODAY()) &lt;= 12&#13;&#10;     THEN true&#13;&#10;     ELSE false&#13;&#10;     END' />
            </column>
            <column datatype='date' name='[Date Finished Airing]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Favorites]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Members]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of ratings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Popularity]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Rank]' role='measure' type='quantitative' />
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type of Media]' role='dimension' type='nominal' />
            <column datatype='string' name='[URL]' role='dimension' type='nominal' />
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4901886739125026819]' derivation='None' name='[none:Calculation_4901886739125026819:nk]' pivot='key' type='nominal' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type of Media]' derivation='None' name='[none:Type of Media:nk]' pivot='key' type='nominal' />
            <column-instance column='[URL]' derivation='None' name='[none:URL:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4901886739109130240]' derivation='Sum' name='[sum:Calculation_4901886739109130240:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4901886739110236161]' derivation='Sum' name='[sum:Calculation_4901886739110236161:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Favorites]' derivation='Sum' name='[sum:Number of Favorites:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Members]' derivation='Sum' name='[sum:Number of Members:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of ratings]' derivation='Sum' name='[sum:Number of ratings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Popularity]' derivation='Sum' name='[sum:Popularity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rank]' derivation='Sum' name='[sum:Rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Finished Airing]' derivation='Day-Trunc' name='[tdy:Date Finished Airing:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[Action (Title,URL)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Title]' />
              <groupfilter function='level-members' level='[URL]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_4901886739125026819:nk]'>
            <groupfilter function='member' level='[none:Calculation_4901886739125026819:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[none:Type of Media:nk]'>
            <groupfilter function='member' level='[none:Type of Media:nk]' member='&quot;Movie&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.16528900by6s131f9qlq90dm3noc].[tdy:Date Finished Airing:qk]' included-values='in-range'>
            <min>#1962-01-01 00:00:00#</min>
            <max>#2017-06-17 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Type of Media:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[tdy:Date Finished Airing:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[Action (Title,URL)]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_4901886739125026819:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]' />
              <lod column='[federated.16528900by6s131f9qlq90dm3noc].[none:URL:nk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Favorites:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Members:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of ratings:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Popularity:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Rank:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739109130240:qk]' />
              <text column='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' />
              <color column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Genres'>
      <table>
        <view>
          <datasources>
            <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Avoid Genre3' datatype='string' name='[Avoid Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
            <column caption='Avoid Genre2' datatype='string' name='[Avoid Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
            <column caption='Required Genre1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre2' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre3' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre4' datatype='string' name='[Required Genre1 (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre5' datatype='string' name='[Required Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre6' datatype='string' name='[Required Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Avoid Genre1' datatype='string' name='[Required Genre6 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
            <column caption='HasGenres' datatype='boolean' name='[Calculation_379991242418241536]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='(CONTAINS([Genres], [Parameters].[Parameter 1]) OR [Parameters].[Parameter 1] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy)]) OR [Parameters].[Required Genre1 (copy)] = &quot;Any&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Required Genre6 (copy)])) OR [Parameters].[Required Genre6 (copy)] = &quot;None&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Avoid Genre1 (copy)])) OR [Parameters].[Avoid Genre1 (copy)] = &quot;None&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Avoid Genre1 (copy) (copy)])) OR [Parameters].[Avoid Genre1 (copy) (copy)] = &quot;None&quot;)' />
            </column>
            <column datatype='string' name='[Genres]' role='dimension' type='nominal' />
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_379991242418241536]' derivation='None' name='[none:Calculation_379991242418241536:nk]' pivot='key' type='nominal' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_379991242418241536:nk]'>
            <groupfilter function='member' level='[none:Calculation_379991242418241536:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_379991242418241536:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' value='600' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Great New Anime'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location id='GreatNewAnime' path='/workbooks/Anime' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
          </datasources>
          <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
            <column datatype='date' name='[Date Started Airing]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Episodes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Favorites]' role='measure' type='quantitative' />
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column datatype='string' name='[URL]' role='dimension' type='nominal' />
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[URL]' derivation='None' name='[none:URL:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Episodes]' derivation='Sum' name='[sum:Number of Episodes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Favorites]' derivation='Sum' name='[sum:Number of Favorites:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Started Airing]' derivation='Day-Trunc' name='[tdy:Date Started Airing:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[Action (Title,URL)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Title]' />
              <groupfilter function='level-members' level='[URL]' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' direction='DESC' using='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Favorites:qk]' />
          <filter class='quantitative' column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' included-values='in-range-or-null'>
            <min>8.5</min>
            <max>10.0</max>
          </filter>
          <filter class='quantitative' column='[federated.16528900by6s131f9qlq90dm3noc].[tdy:Date Started Airing:qk]' included-values='in-range'>
            <min>#2014-12-16 00:00:00#</min>
            <max>#2017-06-17 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[tdy:Date Started Airing:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[Action (Title,URL)]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' value='364' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' value='Search for an anime...'>
              <formatted-text>
                <run>Search for an anime...</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.16528900by6s131f9qlq90dm3noc].[none:URL:nk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Episodes:qk]' />
              <text column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</rows>
        <cols>[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Favorites:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Highest Rated'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location id='HighestRated' path='/workbooks/Anime' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
          </datasources>
          <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
            <column datatype='integer' name='[Number of Favorites]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Members]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of ratings]' role='measure' type='quantitative' />
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column datatype='string' name='[URL]' role='dimension' type='nominal' />
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[URL]' derivation='None' name='[none:URL:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Favorites]' derivation='Sum' name='[sum:Number of Favorites:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Members]' derivation='Sum' name='[sum:Number of Members:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of ratings]' derivation='Sum' name='[sum:Number of ratings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[Action (Title,URL)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Title]' />
              <groupfilter function='level-members' level='[URL]' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' direction='DESC' using='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' />
          <filter class='quantitative' column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' included-values='in-range'>
            <min>8.5</min>
            <max>10.0</max>
          </filter>
          <slices>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[Action (Title,URL)]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' field-type='quantitative' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' value='384' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Favorites:qk]' />
              <lod column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Members:qk]' />
              <lod column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of ratings:qk]' />
              <lod column='[federated.16528900by6s131f9qlq90dm3noc].[none:URL:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</rows>
        <cols>[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Is Anime Getting Better?'>
      <table>
        <view>
          <datasources>
            <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Avoid Genre3' datatype='string' name='[Avoid Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
            <column caption='Avoid Genre2' datatype='string' name='[Avoid Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
            <column caption='Required Genre1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre2' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre3' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre4' datatype='string' name='[Required Genre1 (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre5' datatype='string' name='[Required Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre6' datatype='string' name='[Required Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Avoid Genre1' datatype='string' name='[Required Genre6 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
            <column caption='HasGenres' datatype='boolean' name='[Calculation_379991242418241536]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='(CONTAINS([Genres], [Parameters].[Parameter 1]) OR [Parameters].[Parameter 1] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy)]) OR [Parameters].[Required Genre1 (copy)] = &quot;Any&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Required Genre6 (copy)])) OR [Parameters].[Required Genre6 (copy)] = &quot;None&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Avoid Genre1 (copy)])) OR [Parameters].[Avoid Genre1 (copy)] = &quot;None&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Avoid Genre1 (copy) (copy)])) OR [Parameters].[Avoid Genre1 (copy) (copy)] = &quot;None&quot;)' />
            </column>
            <column caption='Percentage of Members who Favorite' datatype='real' name='[Calculation_4901886739109130240]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Number of Favorites] / [Number of Members] * 100' />
            </column>
            <column caption='AwesomenessFactor' datatype='real' name='[Calculation_4901886739110236161]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4901886739109130240]*([Score]^2)' />
            </column>
            <column datatype='date' name='[Date Started Airing]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Genres]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Favorites]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Members]' role='measure' type='quantitative' />
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_4901886739110236161]' derivation='Avg' name='[avg:Calculation_4901886739110236161:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_379991242418241536]' derivation='None' name='[none:Calculation_379991242418241536:nk]' pivot='key' type='nominal' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Started Airing]' derivation='Year' name='[yr:Date Started Airing:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_379991242418241536:nk]'>
            <groupfilter function='member' level='[none:Calculation_379991242418241536:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Date Started Airing:ok]' />
              <groupfilter function='member' level='[yr:Date Started Airing:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_379991242418241536:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.16528900by6s131f9qlq90dm3noc].[avg:Calculation_4901886739110236161:qk]</rows>
        <cols>[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Most Favorited'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location id='MostFavorited' path='/workbooks/Anime' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
          </datasources>
          <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
            <column datatype='integer' name='[Number of Favorites]' role='measure' type='quantitative' />
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column datatype='string' name='[URL]' role='dimension' type='nominal' />
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[URL]' derivation='None' name='[none:URL:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Favorites]' derivation='Sum' name='[sum:Number of Favorites:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[Action (Title,URL)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Title]' />
              <groupfilter function='level-members' level='[URL]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Favorites:qk]' included-values='non-null' />
          <slices>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Favorites:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[Action (Title,URL)]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <lod column='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' />
              <lod column='[federated.16528900by6s131f9qlq90dm3noc].[none:URL:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Favorites:qk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Score over Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
          </datasources>
          <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
            <column datatype='date' name='[Date Finished Airing]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Finished Airing]' derivation='Day-Trunc' name='[tdy:Date Finished Airing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Finished Airing]' derivation='Year-Trunc' name='[tyr:Date Finished Airing:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[Exclusions (Title,YEAR(Date Finished Airing))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Title:nk]' />
                <groupfilter function='level-members' level='[tyr:Date Finished Airing:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Title:nk]' member='&quot;Failed to export this anime&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[tyr:Date Finished Airing:ok]' member='#1998-01-01 00:00:00#' />
                  <groupfilter function='member' level='[tyr:Date Finished Airing:ok]' member='#2008-01-01 00:00:00#' />
                  <groupfilter function='member' level='[tyr:Date Finished Airing:ok]' member='#2009-01-01 00:00:00#' />
                  <groupfilter function='member' level='[tyr:Date Finished Airing:ok]' member='#2010-01-01 00:00:00#' />
                  <groupfilter function='member' level='[tyr:Date Finished Airing:ok]' member='#2012-01-01 00:00:00#' />
                  <groupfilter function='member' level='[tyr:Date Finished Airing:ok]' member='#2013-01-01 00:00:00#' />
                  <groupfilter function='member' level='[tyr:Date Finished Airing:ok]' member='#2015-01-01 00:00:00#' />
                  <groupfilter function='member' level='[tyr:Date Finished Airing:ok]' member='#2016-01-01 00:00:00#' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[tyr:Date Finished Airing:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tyr:Date Finished Airing:ok]' />
              <groupfilter function='member' level='[tyr:Date Finished Airing:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[Exclusions (Title,YEAR(Date Finished Airing))]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[tyr:Date Finished Airing:ok]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='boxplot-style' id='refline1' value='modern' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <lod column='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' />
            </encodings>
            <trendline degree='4' enable-confidence-bands='false' enable-instant-analytics='false' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='polynomial' />
            <reference-line axis-column='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' z-order='2' />
            <reference-line axis-column='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='none' probability='95' scope='per-cell' value-column='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]</rows>
        <cols>[federated.16528900by6s131f9qlq90dm3noc].[tdy:Date Finished Airing:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='When does anime come out?'>
      <table>
        <view>
          <datasources>
            <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Avoid Genre3' datatype='string' name='[Avoid Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
            <column caption='Avoid Genre2' datatype='string' name='[Avoid Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
            <column caption='Required Genre1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre2' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre3' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre4' datatype='string' name='[Required Genre1 (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre5' datatype='string' name='[Required Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre6' datatype='string' name='[Required Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Avoid Genre1' datatype='string' name='[Required Genre6 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
            <column caption='HasGenres' datatype='boolean' name='[Calculation_379991242418241536]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='(CONTAINS([Genres], [Parameters].[Parameter 1]) OR [Parameters].[Parameter 1] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy)]) OR [Parameters].[Required Genre1 (copy)] = &quot;Any&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Required Genre6 (copy)])) OR [Parameters].[Required Genre6 (copy)] = &quot;None&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Avoid Genre1 (copy)])) OR [Parameters].[Avoid Genre1 (copy)] = &quot;None&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Avoid Genre1 (copy) (copy)])) OR [Parameters].[Avoid Genre1 (copy) (copy)] = &quot;None&quot;)' />
            </column>
            <column datatype='date' name='[Date Started Airing]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Genres]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Started Airing]' derivation='Day' name='[dy:Date Started Airing:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date Started Airing]' derivation='Month' name='[mn:Date Started Airing:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_379991242418241536]' derivation='None' name='[none:Calculation_379991242418241536:nk]' pivot='key' type='nominal' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Started Airing]' derivation='Year' name='[yr:Date Started Airing:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_379991242418241536:nk]'>
            <groupfilter function='member' level='[none:Calculation_379991242418241536:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Date Started Airing:ok]' />
              <groupfilter function='member' level='[yr:Date Started Airing:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_379991242418241536:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Records:qk]</rows>
        <cols>([federated.16528900by6s131f9qlq90dm3noc].[mn:Date Started Airing:ok] / [federated.16528900by6s131f9qlq90dm3noc].[dy:Date Started Airing:ok])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Anime over Time'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
      </datasources>
      <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
        <column datatype='real' name='[Score]' role='measure' type='quantitative' />
        <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='26138' id='13' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='26138' id='8' name='When does anime come out?' w='93189' x='0' y='0'>
              <layout-cache cell-count-w='364' minheight='205' non-cell-size-w='60' type-h='scalable' type-w='cell' />
            </zone>
            <zone fixed-size='160' h='26138' id='4' is-fixed='true' param='vert' type='layout-flow' w='6811' x='93189' y='0'>
              <zone h='4396' id='7' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='6811' x='93189' y='0' />
              <zone h='5416' id='9' name='When does anime come out?' param='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='6811' x='93189' y='4396' />
            </zone>
          </zone>
          <zone h='73862' id='14' layout-strategy-id='distribute-evenly' param='horz' type='layout-flow' w='100000' x='0' y='26138'>
            <zone fixed-size='665' h='73862' id='1' is-fixed='true' name='Avg Number of Episodes' w='33334' x='0' y='26138'>
              <layout-cache minheight='203' type-h='scalable' type-w='cell' />
            </zone>
            <zone fixed-size='463' h='73862' id='12' is-fixed='true' name='Score over Time' w='33333' x='33333' y='26138'>
              <layout-cache minheight='198' minwidth='163' type-h='scalable' type-w='scalable' />
            </zone>
            <zone h='73862' id='10' name='Anime Popularity' w='33333' x='66666' y='26138'>
              <layout-cache type-h='fixed' type-w='cell' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Discovery'>
      <repository-location id='LandingDashboard' path='/workbooks/Anime' revision='' />
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
      </datasources>
      <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
        <column datatype='string' name='[Title]' role='dimension' type='nominal' />
        <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='22' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='20' param='horz' type='layout-flow' w='99830' x='0' y='0'>
              <zone h='100000' id='18' param='horz' type='layout-flow' w='99830' x='0' y='0'>
                <zone h='100000' id='16' type='layout-basic' w='99830' x='0' y='0'>
                  <zone h='38320' id='25' type='layout-basic' w='99830' x='0' y='0'>
                    <zone h='38320' id='14' param='horz' type='layout-flow' w='50080' x='0' y='0'>
                      <zone fixed-size='1083' h='38320' id='8' is-fixed='true' name='Great New Anime' w='50080' x='0' y='0'>
                        <layout-cache fixed-size-h='678' minwidth='482' type-h='fixed' type-w='scalable' />
                      </zone>
                    </zone>
                    <zone h='38320' id='26' param='horz' type='layout-flow' w='49750' x='50080' y='0'>
                      <zone h='38320' id='3' name='Highest Rated' w='49750' x='50080' y='0'>
                        <layout-cache fixed-size-h='44' minwidth='502' type-h='fixed' type-w='scalable' />
                      </zone>
                    </zone>
                  </zone>
                  <zone h='61680' id='24' param='horz' type='layout-flow' w='99830' x='0' y='38320'>
                    <zone h='61680' id='27' param='horz' type='layout-flow' w='99830' x='0' y='38320'>
                      <zone h='61680' id='11' name='Best Movies' w='45104' x='0' y='38320'>
                        <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                      </zone>
                      <zone fixed-size='222' h='61680' id='1' is-fixed='true' name='Most Favorited' w='9791' x='45104' y='38320'>
                        <layout-cache minheight='143' type-h='scalable' type-w='cell' />
                      </zone>
                      <zone h='61680' id='15' name='Best Movies of the Last 12 Months' w='44934' x='54895' y='38320'>
                        <layout-cache cell-count-w='1' type-h='fixed' type-w='cell' />
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='3454' id='23' mode='pattern' name='Great New Anime' param='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' type='filter' w='14645' x='83780' y='1413' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Genres' tab-color='#6e597f'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_379991242418241536:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Required Genre1 (copy) (copy) (copy) (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Required Genre1 (copy) (copy) (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Required Genre1 (copy) (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Required Genre1 (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Required Genre6 (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Avoid Genre1 (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Avoid Genre1 (copy) (copy)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Most Favorited' tab-color='#17927d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</field>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[none:URL:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Highest Rated' tab-color='#17927d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[none:Score (copy):ok]</field>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</field>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[none:URL:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Great New Anime' tab-color='#17927d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='pattern' param='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' type='filter' />
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[tdy:Date Started Airing:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[attr:URL:nk]</field>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[none:URL:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Best Movies' tab-color='#17927d'>
      <cards>
        <edge name='left'>
          <strip size='228'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='pattern' param='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' type='filter' />
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</field>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[none:URL:nk]</field>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Best Movies of the Last 12 Months' tab-color='#17927d'>
      <cards>
        <edge name='left'>
          <strip size='239'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_4901886739125026819:nk]' type='filter' />
            <card mode='pattern' param='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' type='filter' />
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[none:Type of Media:nk]' type='filter' />
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[tdy:Date Finished Airing:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</field>
                  <field>[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Favorites:qk]</field>
                  <field>[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Failed to export this anime&quot;</value>
                <value>1677</value>
                <value>39.810000000000002</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[none:URL:nk]</field>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Discovery' tab-color='#17927d'>
      <viewpoints>
        <viewpoint name='Best Movies'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Best Movies of the Last 12 Months'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Great New Anime'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Highest Rated'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Most Favorited'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='11' />
    </window>
    <window class='worksheet' name='Score over Time' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Avg Number of Episodes' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='When does anime come out?' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Anime Popularity' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Is Anime Getting Better?' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Anime over Time' tab-color='#4f779a'>
      <viewpoints>
        <viewpoint name='Anime Popularity'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Avg Number of Episodes'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Score over Time'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='When does anime come out?'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Anime Popularity' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Anime over Time' width='192'>
      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
      BwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Avg Number of Episodes' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Best Movies' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Best Movies of the Last 12 Months' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Discovery' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Genres' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Great New Anime' width='192'>
      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
      aOYCmHOi+b8aw0aTuDhzrwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Highest Rated' width='192'>
      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
      3J8K8niMQV9ceAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Is Anime Getting Better?' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Most Favorited' width='130'>
      iVBORw0KGgoAAAANSUhEUgAAAIIAAADACAYAAADIk7uaAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAALWElEQVR4nO3deXCU9R3H8XeuksOQsBsSQJJAYjQhglpARKkXoINTRKcqeLYyw+lVZ5zS
      Yjs6imcZLQoiWCwdlJEpeBSF4XSsDIdAgyhsgEkg4UzILuTaLCSbX//IDwgkJBm6YbPwef0X
      nmefPDv7Js+zu8/uN8wYY5DLXniwd0A6BoUggEIQSyEIoBDEUggCKASxFEIbeb3eYO9Cu1II
      AigEsRSCAApBLIUggEIQSyEIoBDEUggCKASxFIIACkEshSCAQhBLIQigEMRSCAIoBLEUggAK
      QSyFIIBCEEshCACRwd6BC1a9k0Xvfcy6fZX4Y1IZ/PgkHunvJAIAP+4N83ln4Q+U+WNIvW08
      z4/uQxwA2/j4Yxg79nq7IR8/zX+LH2+cymN9ooJ0ZzoAE5Lc5tt33zRLdnrMSWNMXc1es2L6
      NPNlkV18eJmZNm2J2VVeZ8zJI+b7WVPMrI01dmGemTcv7/SWqvLmmZcXukxdK7+xurq6He5H
      xxGih4ZiCqPvYGROF6KAiOhe3PXoL9m/ZS8Ae9dvJv3+UVzdOQKiUhgyZjiVm/PwnbuZ6m0s
      WpHIEw9l278kl68QDcGB88gqVuzz4Qfw+6isC8d76Ag+oPy4g8yMRg+tI4fcSDees7ZRzdZP
      vyHxoVH0vtwrIGTPEdL49fhb+PDDP/JMSQ3+X8TT67oMaj29Oc4JTvhiiYluvH44EaWllAI9
      ADbNZsImiB40menNVHC+zzlWVla2w33pGEI0BIjocTtPvXL7mX84upLXlibTjU4cifZS4wNO
      x1CPPzmZ5FM/DprEnLFZbJj5Kovzr+Xh7LNjiI2NbfL7vF4v8fHxAb8fHUWIHhqa8mzPIzI9
      DYCERA8Fhf5GC13sqHPiOOsWcQx+cgw1i/7JtuqLuacdU8iGUH5oH26fH/BTsftzZq9K4Z5b
      Gh7q3jcPpOiLr9hd4YfaEtZ9tor4gTcQfe5G4q7nt+OS+eYfG7jcWwjZQwOH1jLj7S2U1EBM
      Si73PTuRvqce6W53MfHO+bzz4mTK/DFk3f00kwY1yQCAiB4jeDJzOjOXp/PCiB6X7bOHMGP0
      hZtt4fV6mz13uFSE7KFBAkshCKAQxFIIAigEsRSCAApBLIUggEIQSyEIoBDEUggCKASxFIIA
      CkEshSBAKF+hdIkyxuAqKsNVVIa7wouzcyx9enUlO81JWFhYu/1ehdBB+OsNq7cUsmjtz7gr
      aposdybEMvqOXIYNyCAiPPBB6FK1NmrPS9XKq3y8/sk68ovLAMi80kG/jGSSEmMpO+5le2Ep
      BQcbPp6TnZbE1MeGkHBF89dgXiiF0EbtFUJ5lY8/fLiaI54qrkl1Mm5kf7J6Opqst+eAh4+W
      bmXXfjfdHFfw9sRhAY1BIbRRe4TgrzdMnbuG/OIybr0uneceGERkxPnP32vr6pmxeCPfby8m
      Jz2J18YNDdhhQs8agmj1lkLyi8u4JtXZagQAUZHhPPfATVyT6sRVVMaarYUB2xeFECTGGBat
      /RmAcSP7txrBKVGR4Ywb2R+Az9buIFB/0BVCkDQ8Pawh80pHs+cELcnq6SCzRxfc5V7yi90B
      2R+FECSuooZnCP0ykltZs3n9MlMA2LnvaED2RyEEibui4aP3SYkXdgJ66naeZl5zuBAKQQCF
      EDTOzg3/o8uOX9jw8VO3c3SOCcj+KIQgyUlPAmB7YekF3X57QQkAfXp1Dcj+KIQgyUlPwtk5
      hoKDHvYc8LR+g0b2HPBQcOgYzoRYstOcAdkfhRAkYWFhjL7zWgA+WrqVOn99m25XW1fPR0u3
      AjDmztyAvSOpEIJo2IAMstOS2LXfzd/+tZHaupZjOPUS8679bnLSkxjaPyNg+6L3GtpIbzoJ
      0P5vQ7/x6brTLzJl9uhCv8yUM29DF5RQcOgY0HBu8adH9TZ00LT3V+f46w1rthby2doduMub
      PqV0JsQy5s5chvbXhSlBdbG+Q8kYQ36xm537juKpqMHROYbc3l25JrV9L1VTCG2kL9OSy4JC
      EEAhiKUQBFAIYikEARSCWApBAIUglkIQQCGIpRAECOXvR6gtZs3cv7N0Rwk1xJA6+HEmPdIf
      ZwTAEZa/8hJfHmy0/qBJzBl7PRoJ3LyQDSF/8VxcfZ/izYndia4/hmvpB7z/dVdeHpUGHKWk
      02+YNucuWrvGt3rbQj7vNJo/X8YRQMgeGo5SXJjBkFu7Ex0BRHUhZ+Rwurnt1cDlbtxdk1uN
      QCOBzwjRELoy4JYKVny9D58fqD2Ga+lG4gZmNyz2eOjUvVsr29BI4MZC+MKUWg6snMFfl+zB
      RyK5jzzDpNt6EgXw03wmz9zQMDc6IoaUq25nzIT76BMHsI2PJ8xmE3Yk8NjrOPegcL6RwH6/
      v9l/vyRcvMH0gVRnDi6bYeZ8f8jU1BljTnrMzmUzzIwVh5uuerLK7N80z/zl3f+Y48YYY/LM
      vHl5xpgqs/79KWahq65Nv7G6ujpwu98BheihYScr/5vFvUManSOMuJUrNuZx5NxVo+LoeeM9
      DK4uoPisBRoJ3FiIhnAlveJ+4Ntt7oZzBL+Pw+vWszvJQSLw0+L3WO5qvOxzvuuSQ9a5m9FI
      4NNC9xyheidfzvmUNbvKOBkRQ0ru3TzxuxFcFQf+it2sXPAJK3aUUOP/BUn97uFJu6zp6wh+
      Di2fzgIeb3Ek8KV+8WrohnCRXeohhOihQQJNIQigEMRSCAIoBLEUggAKQSyFIIBCEEshCKAQ
      xFIIAigEsRSCAApBLIUggEIQSyEIoBDEUggCKASxFIIACkEshSCAQhBLIQigEMRSCAIoBLEU
      ggAKQSyFIIBCEEshCKAQxFIIAigEsRSCAApBLIUggEIQSyEIoBDEUggCKASxFIIACkEshSCA
      QhArZCfBtjwS2I97w3zeWfgDZf4YUm8bz/Oj+xAHaCTweQR3yNyFcy180bz/XaNxf0ummZe+
      LGpYeHiZmTZtidlVXmfMySPm+1lTzKyNNfaWp8b9NajKm2deXugyrQ3907i/DqnlkcB7128m
      /f5RXN05AqJSGDJmOJWb8/CduxmNBD4tRENoeSRw+XEHmRmNHlpHDrmRbjxnbUMjgRsL2XME
      x+1P8ejKGUyZ3GgkcN9o4AQnfLHERDdeO5yI0lJKgR4Am2YzYZMdCdxMBecbCVxZWRn4O9JB
      hGgIfg4tn82y+Ed564PuRNcfw7V6AbNXPsSzd3WjU7SXGh9wOoZ6/MnJJJ/6cdAk5ozNYsPM
      V1mcfy0PZ58dQ3Nj/bxeL/Hx8e14n4IrRA8NLY8ETkj0UFDYaKC3x8WOOieOs7ahkcCNhWgI
      LY8E7n3zQIq++IrdFX6oLWHdZ6uIH3gD0eduRiOBTwvdSbAtjAQ+93WErLufZtKoq87zOoJG
      AkMoh3CRXeohhOihQQJNIQigEMRSCAIoBLEUggAKQSyFIIBCEEshCKAQxFIIAigEsRSCAApB
      LIUggEIQSyEIoBDEUggCKASxFIIACkEshSCAQhArRD8NfekyxuAqKsNVVIa7wouzcyx9enUl
      O81JWFhYu/1ehdBB+OsNq7cUsmjtz7graposdybEMvqOXIYNyCAiPPBB6LOPbdSen30sr/Lx
      +ifryC8ua3Xd7LQkpj42hIQrmny2+/+iENqovUIor/LxwgerKD1+5oP5mVc66JeRTFJiLGXH
      vWwvLKXg4Jkv/klOjGP65OEBjUEhtFF7hOCvN0z5cBV7DjQ8yFf3dDL+3v5k9XQ0WXfPAQ9z
      /72F3XbdrJ5O3po4LGCHCT1rCKKVmwtOR/Crfmm8MWFosxEAZPV08Pr4YdzSNxWAPQfcrNpS
      GLB9UQhBYoxhwYrtAKSnJPD7B28iMqLlhyMqMpznHxxMekoCAAtW/Eig/qD/D8M0xfVa/PEZ
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Score over Time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='When does anime come out?' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
