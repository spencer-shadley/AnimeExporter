<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10300.17.0615.2100                               -->
<workbook source-build='10.3.1 (10300.17.0615.2100)' source-platform='win' version='10.3' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='Anime' path='/workbooks' revision='1.5' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.3'>
      <aliases enabled='yes' />
      <column caption='Avoid Genre3' datatype='string' name='[Avoid Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
        <calculation class='tableau' formula='&quot;None&quot;' />
        <members>
          <member value='&quot;None&quot;' />
          <member value='&quot;Action&quot;' />
          <member value='&quot;Adventure&quot;' />
          <member value='&quot;Cars&quot;' />
          <member value='&quot;Comedy&quot;' />
          <member value='&quot;Dementia&quot;' />
          <member value='&quot;Demons&quot;' />
          <member value='&quot;Drama&quot;' />
          <member value='&quot;Ecchi&quot;' />
          <member value='&quot;Fantasy&quot;' />
          <member value='&quot;Game&quot;' />
          <member value='&quot;Harem&quot;' />
          <member value='&quot;Historical&quot;' />
          <member value='&quot;Horror&quot;' />
          <member value='&quot;Josei&quot;' />
          <member value='&quot;Kids&quot;' />
          <member value='&quot;Magic&quot;' />
          <member value='&quot;Martial Arts&quot;' />
          <member value='&quot;Mecha&quot;' />
          <member value='&quot;Military&quot;' />
          <member value='&quot;Music&quot;' />
          <member value='&quot;Mystery&quot;' />
          <member value='&quot;Parody&quot;' />
          <member value='&quot;Police&quot;' />
          <member value='&quot;Psychological&quot;' />
          <member value='&quot;Romance&quot;' />
          <member value='&quot;Samurai&quot;' />
          <member value='&quot;School&quot;' />
          <member value='&quot;Sci-Fi&quot;' />
          <member value='&quot;Seinen&quot;' />
          <member value='&quot;Shoujo&quot;' />
          <member value='&quot;Shoujo Ai&quot;' />
          <member value='&quot;Shounen&quot;' />
          <member value='&quot;Slice of Life&quot;' />
          <member value='&quot;Space&quot;' />
          <member value='&quot;Sports&quot;' />
          <member value='&quot;Super Power&quot;' />
          <member value='&quot;Supernatural&quot;' />
          <member value='&quot;Thriller&quot;' />
          <member value='&quot;Vampire&quot;' />
        </members>
      </column>
      <column caption='Avoid Genre2' datatype='string' name='[Avoid Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
        <calculation class='tableau' formula='&quot;None&quot;' />
        <members>
          <member value='&quot;None&quot;' />
          <member value='&quot;Action&quot;' />
          <member value='&quot;Adventure&quot;' />
          <member value='&quot;Cars&quot;' />
          <member value='&quot;Comedy&quot;' />
          <member value='&quot;Dementia&quot;' />
          <member value='&quot;Demons&quot;' />
          <member value='&quot;Drama&quot;' />
          <member value='&quot;Ecchi&quot;' />
          <member value='&quot;Fantasy&quot;' />
          <member value='&quot;Game&quot;' />
          <member value='&quot;Harem&quot;' />
          <member value='&quot;Historical&quot;' />
          <member value='&quot;Horror&quot;' />
          <member value='&quot;Josei&quot;' />
          <member value='&quot;Kids&quot;' />
          <member value='&quot;Magic&quot;' />
          <member value='&quot;Martial Arts&quot;' />
          <member value='&quot;Mecha&quot;' />
          <member value='&quot;Military&quot;' />
          <member value='&quot;Music&quot;' />
          <member value='&quot;Mystery&quot;' />
          <member value='&quot;Parody&quot;' />
          <member value='&quot;Police&quot;' />
          <member value='&quot;Psychological&quot;' />
          <member value='&quot;Romance&quot;' />
          <member value='&quot;Samurai&quot;' />
          <member value='&quot;School&quot;' />
          <member value='&quot;Sci-Fi&quot;' />
          <member value='&quot;Seinen&quot;' />
          <member value='&quot;Shoujo&quot;' />
          <member value='&quot;Shoujo Ai&quot;' />
          <member value='&quot;Shounen&quot;' />
          <member value='&quot;Slice of Life&quot;' />
          <member value='&quot;Space&quot;' />
          <member value='&quot;Sports&quot;' />
          <member value='&quot;Super Power&quot;' />
          <member value='&quot;Supernatural&quot;' />
          <member value='&quot;Thriller&quot;' />
          <member value='&quot;Vampire&quot;' />
        </members>
      </column>
      <column caption='Required Genre1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
        <calculation class='tableau' formula='&quot;Any&quot;' />
        <members>
          <member value='&quot;Any&quot;' />
          <member value='&quot;Action&quot;' />
          <member value='&quot;Adventure&quot;' />
          <member value='&quot;Cars&quot;' />
          <member value='&quot;Comedy&quot;' />
          <member value='&quot;Dementia&quot;' />
          <member value='&quot;Demons&quot;' />
          <member value='&quot;Drama&quot;' />
          <member value='&quot;Ecchi&quot;' />
          <member value='&quot;Fantasy&quot;' />
          <member value='&quot;Game&quot;' />
          <member value='&quot;Harem&quot;' />
          <member value='&quot;Historical&quot;' />
          <member value='&quot;Horror&quot;' />
          <member value='&quot;Josei&quot;' />
          <member value='&quot;Kids&quot;' />
          <member value='&quot;Magic&quot;' />
          <member value='&quot;Martial Arts&quot;' />
          <member value='&quot;Mecha&quot;' />
          <member value='&quot;Military&quot;' />
          <member value='&quot;Music&quot;' />
          <member value='&quot;Mystery&quot;' />
          <member value='&quot;Parody&quot;' />
          <member value='&quot;Police&quot;' />
          <member value='&quot;Psychological&quot;' />
          <member value='&quot;Romance&quot;' />
          <member value='&quot;Samurai&quot;' />
          <member value='&quot;School&quot;' />
          <member value='&quot;Sci-Fi&quot;' />
          <member value='&quot;Seinen&quot;' />
          <member value='&quot;Shoujo&quot;' />
          <member value='&quot;Shoujo Ai&quot;' />
          <member value='&quot;Shounen&quot;' />
          <member value='&quot;Slice of Life&quot;' />
          <member value='&quot;Space&quot;' />
          <member value='&quot;Sports&quot;' />
          <member value='&quot;Super Power&quot;' />
          <member value='&quot;Supernatural&quot;' />
          <member value='&quot;Thriller&quot;' />
          <member value='&quot;Vampire&quot;' />
        </members>
      </column>
      <column caption='Required Genre2' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
        <calculation class='tableau' formula='&quot;Any&quot;' />
        <members>
          <member value='&quot;Any&quot;' />
          <member value='&quot;Action&quot;' />
          <member value='&quot;Adventure&quot;' />
          <member value='&quot;Cars&quot;' />
          <member value='&quot;Comedy&quot;' />
          <member value='&quot;Dementia&quot;' />
          <member value='&quot;Demons&quot;' />
          <member value='&quot;Drama&quot;' />
          <member value='&quot;Ecchi&quot;' />
          <member value='&quot;Fantasy&quot;' />
          <member value='&quot;Game&quot;' />
          <member value='&quot;Harem&quot;' />
          <member value='&quot;Historical&quot;' />
          <member value='&quot;Horror&quot;' />
          <member value='&quot;Josei&quot;' />
          <member value='&quot;Kids&quot;' />
          <member value='&quot;Magic&quot;' />
          <member value='&quot;Martial Arts&quot;' />
          <member value='&quot;Mecha&quot;' />
          <member value='&quot;Military&quot;' />
          <member value='&quot;Music&quot;' />
          <member value='&quot;Mystery&quot;' />
          <member value='&quot;Parody&quot;' />
          <member value='&quot;Police&quot;' />
          <member value='&quot;Psychological&quot;' />
          <member value='&quot;Romance&quot;' />
          <member value='&quot;Samurai&quot;' />
          <member value='&quot;School&quot;' />
          <member value='&quot;Sci-Fi&quot;' />
          <member value='&quot;Seinen&quot;' />
          <member value='&quot;Shoujo&quot;' />
          <member value='&quot;Shoujo Ai&quot;' />
          <member value='&quot;Shounen&quot;' />
          <member value='&quot;Slice of Life&quot;' />
          <member value='&quot;Space&quot;' />
          <member value='&quot;Sports&quot;' />
          <member value='&quot;Super Power&quot;' />
          <member value='&quot;Supernatural&quot;' />
          <member value='&quot;Thriller&quot;' />
          <member value='&quot;Vampire&quot;' />
        </members>
      </column>
      <column caption='Required Genre3' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
        <calculation class='tableau' formula='&quot;Any&quot;' />
        <members>
          <member value='&quot;Any&quot;' />
          <member value='&quot;Action&quot;' />
          <member value='&quot;Adventure&quot;' />
          <member value='&quot;Cars&quot;' />
          <member value='&quot;Comedy&quot;' />
          <member value='&quot;Dementia&quot;' />
          <member value='&quot;Demons&quot;' />
          <member value='&quot;Drama&quot;' />
          <member value='&quot;Ecchi&quot;' />
          <member value='&quot;Fantasy&quot;' />
          <member value='&quot;Game&quot;' />
          <member value='&quot;Harem&quot;' />
          <member value='&quot;Historical&quot;' />
          <member value='&quot;Horror&quot;' />
          <member value='&quot;Josei&quot;' />
          <member value='&quot;Kids&quot;' />
          <member value='&quot;Magic&quot;' />
          <member value='&quot;Martial Arts&quot;' />
          <member value='&quot;Mecha&quot;' />
          <member value='&quot;Military&quot;' />
          <member value='&quot;Music&quot;' />
          <member value='&quot;Mystery&quot;' />
          <member value='&quot;Parody&quot;' />
          <member value='&quot;Police&quot;' />
          <member value='&quot;Psychological&quot;' />
          <member value='&quot;Romance&quot;' />
          <member value='&quot;Samurai&quot;' />
          <member value='&quot;School&quot;' />
          <member value='&quot;Sci-Fi&quot;' />
          <member value='&quot;Seinen&quot;' />
          <member value='&quot;Shoujo&quot;' />
          <member value='&quot;Shoujo Ai&quot;' />
          <member value='&quot;Shounen&quot;' />
          <member value='&quot;Slice of Life&quot;' />
          <member value='&quot;Space&quot;' />
          <member value='&quot;Sports&quot;' />
          <member value='&quot;Super Power&quot;' />
          <member value='&quot;Supernatural&quot;' />
          <member value='&quot;Thriller&quot;' />
          <member value='&quot;Vampire&quot;' />
        </members>
      </column>
      <column caption='Required Genre4' datatype='string' name='[Required Genre1 (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
        <calculation class='tableau' formula='&quot;Any&quot;' />
        <members>
          <member value='&quot;Any&quot;' />
          <member value='&quot;Action&quot;' />
          <member value='&quot;Adventure&quot;' />
          <member value='&quot;Cars&quot;' />
          <member value='&quot;Comedy&quot;' />
          <member value='&quot;Dementia&quot;' />
          <member value='&quot;Demons&quot;' />
          <member value='&quot;Drama&quot;' />
          <member value='&quot;Ecchi&quot;' />
          <member value='&quot;Fantasy&quot;' />
          <member value='&quot;Game&quot;' />
          <member value='&quot;Harem&quot;' />
          <member value='&quot;Historical&quot;' />
          <member value='&quot;Horror&quot;' />
          <member value='&quot;Josei&quot;' />
          <member value='&quot;Kids&quot;' />
          <member value='&quot;Magic&quot;' />
          <member value='&quot;Martial Arts&quot;' />
          <member value='&quot;Mecha&quot;' />
          <member value='&quot;Military&quot;' />
          <member value='&quot;Music&quot;' />
          <member value='&quot;Mystery&quot;' />
          <member value='&quot;Parody&quot;' />
          <member value='&quot;Police&quot;' />
          <member value='&quot;Psychological&quot;' />
          <member value='&quot;Romance&quot;' />
          <member value='&quot;Samurai&quot;' />
          <member value='&quot;School&quot;' />
          <member value='&quot;Sci-Fi&quot;' />
          <member value='&quot;Seinen&quot;' />
          <member value='&quot;Shoujo&quot;' />
          <member value='&quot;Shoujo Ai&quot;' />
          <member value='&quot;Shounen&quot;' />
          <member value='&quot;Slice of Life&quot;' />
          <member value='&quot;Space&quot;' />
          <member value='&quot;Sports&quot;' />
          <member value='&quot;Super Power&quot;' />
          <member value='&quot;Supernatural&quot;' />
          <member value='&quot;Thriller&quot;' />
          <member value='&quot;Vampire&quot;' />
        </members>
      </column>
      <column caption='Required Genre5' datatype='string' name='[Required Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
        <calculation class='tableau' formula='&quot;Any&quot;' />
        <members>
          <member value='&quot;Any&quot;' />
          <member value='&quot;Action&quot;' />
          <member value='&quot;Adventure&quot;' />
          <member value='&quot;Cars&quot;' />
          <member value='&quot;Comedy&quot;' />
          <member value='&quot;Dementia&quot;' />
          <member value='&quot;Demons&quot;' />
          <member value='&quot;Drama&quot;' />
          <member value='&quot;Ecchi&quot;' />
          <member value='&quot;Fantasy&quot;' />
          <member value='&quot;Game&quot;' />
          <member value='&quot;Harem&quot;' />
          <member value='&quot;Historical&quot;' />
          <member value='&quot;Horror&quot;' />
          <member value='&quot;Josei&quot;' />
          <member value='&quot;Kids&quot;' />
          <member value='&quot;Magic&quot;' />
          <member value='&quot;Martial Arts&quot;' />
          <member value='&quot;Mecha&quot;' />
          <member value='&quot;Military&quot;' />
          <member value='&quot;Music&quot;' />
          <member value='&quot;Mystery&quot;' />
          <member value='&quot;Parody&quot;' />
          <member value='&quot;Police&quot;' />
          <member value='&quot;Psychological&quot;' />
          <member value='&quot;Romance&quot;' />
          <member value='&quot;Samurai&quot;' />
          <member value='&quot;School&quot;' />
          <member value='&quot;Sci-Fi&quot;' />
          <member value='&quot;Seinen&quot;' />
          <member value='&quot;Shoujo&quot;' />
          <member value='&quot;Shoujo Ai&quot;' />
          <member value='&quot;Shounen&quot;' />
          <member value='&quot;Slice of Life&quot;' />
          <member value='&quot;Space&quot;' />
          <member value='&quot;Sports&quot;' />
          <member value='&quot;Super Power&quot;' />
          <member value='&quot;Supernatural&quot;' />
          <member value='&quot;Thriller&quot;' />
          <member value='&quot;Vampire&quot;' />
        </members>
      </column>
      <column caption='Required Genre6' datatype='string' name='[Required Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
        <calculation class='tableau' formula='&quot;Any&quot;' />
        <members>
          <member value='&quot;Any&quot;' />
          <member value='&quot;Action&quot;' />
          <member value='&quot;Adventure&quot;' />
          <member value='&quot;Cars&quot;' />
          <member value='&quot;Comedy&quot;' />
          <member value='&quot;Dementia&quot;' />
          <member value='&quot;Demons&quot;' />
          <member value='&quot;Drama&quot;' />
          <member value='&quot;Ecchi&quot;' />
          <member value='&quot;Fantasy&quot;' />
          <member value='&quot;Game&quot;' />
          <member value='&quot;Harem&quot;' />
          <member value='&quot;Historical&quot;' />
          <member value='&quot;Horror&quot;' />
          <member value='&quot;Josei&quot;' />
          <member value='&quot;Kids&quot;' />
          <member value='&quot;Magic&quot;' />
          <member value='&quot;Martial Arts&quot;' />
          <member value='&quot;Mecha&quot;' />
          <member value='&quot;Military&quot;' />
          <member value='&quot;Music&quot;' />
          <member value='&quot;Mystery&quot;' />
          <member value='&quot;Parody&quot;' />
          <member value='&quot;Police&quot;' />
          <member value='&quot;Psychological&quot;' />
          <member value='&quot;Romance&quot;' />
          <member value='&quot;Samurai&quot;' />
          <member value='&quot;School&quot;' />
          <member value='&quot;Sci-Fi&quot;' />
          <member value='&quot;Seinen&quot;' />
          <member value='&quot;Shoujo&quot;' />
          <member value='&quot;Shoujo Ai&quot;' />
          <member value='&quot;Shounen&quot;' />
          <member value='&quot;Slice of Life&quot;' />
          <member value='&quot;Space&quot;' />
          <member value='&quot;Sports&quot;' />
          <member value='&quot;Super Power&quot;' />
          <member value='&quot;Supernatural&quot;' />
          <member value='&quot;Thriller&quot;' />
          <member value='&quot;Vampire&quot;' />
        </members>
      </column>
      <column caption='Avoid Genre1' datatype='string' name='[Required Genre6 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
        <calculation class='tableau' formula='&quot;None&quot;' />
        <members>
          <member value='&quot;None&quot;' />
          <member value='&quot;Action&quot;' />
          <member value='&quot;Adventure&quot;' />
          <member value='&quot;Cars&quot;' />
          <member value='&quot;Comedy&quot;' />
          <member value='&quot;Dementia&quot;' />
          <member value='&quot;Demons&quot;' />
          <member value='&quot;Drama&quot;' />
          <member value='&quot;Ecchi&quot;' />
          <member value='&quot;Fantasy&quot;' />
          <member value='&quot;Game&quot;' />
          <member value='&quot;Harem&quot;' />
          <member value='&quot;Historical&quot;' />
          <member value='&quot;Horror&quot;' />
          <member value='&quot;Josei&quot;' />
          <member value='&quot;Kids&quot;' />
          <member value='&quot;Magic&quot;' />
          <member value='&quot;Martial Arts&quot;' />
          <member value='&quot;Mecha&quot;' />
          <member value='&quot;Military&quot;' />
          <member value='&quot;Music&quot;' />
          <member value='&quot;Mystery&quot;' />
          <member value='&quot;Parody&quot;' />
          <member value='&quot;Police&quot;' />
          <member value='&quot;Psychological&quot;' />
          <member value='&quot;Romance&quot;' />
          <member value='&quot;Samurai&quot;' />
          <member value='&quot;School&quot;' />
          <member value='&quot;Sci-Fi&quot;' />
          <member value='&quot;Seinen&quot;' />
          <member value='&quot;Shoujo&quot;' />
          <member value='&quot;Shoujo Ai&quot;' />
          <member value='&quot;Shounen&quot;' />
          <member value='&quot;Slice of Life&quot;' />
          <member value='&quot;Space&quot;' />
          <member value='&quot;Sports&quot;' />
          <member value='&quot;Super Power&quot;' />
          <member value='&quot;Supernatural&quot;' />
          <member value='&quot;Thriller&quot;' />
          <member value='&quot;Vampire&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Genres (Anime Exports)' inline='true' name='federated.1b2b7y41ru73pf19gx60j1d24zbx' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Anime Exports' name='google-sheets.0sbs7kt14xb44z1d4ddff0drrzwu'>
            <connection REDIRECT_URI='urn:ietf:wg:oauth:2.0:oob' SCOPE='email profile https://www.googleapis.com/auth/drive.readonly' class='google-sheets' cleaning='no' compat='no' dataRefreshTime='' filename='Anime Exports' googleSheetId='17KQKFy9o1pPG0Yko2dTYZcRhNSTdNWyI3NLWsJyfqbI' interpretationMode='8' mimeType='application/vnd.google-apps.spreadsheet' server='' server-oauth='' username='spencershadley@gmail.com' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='google-sheets.0sbs7kt14xb44z1d4ddff0drrzwu' name='Genres' table='[Genres$]' type='table'>
          <columns gridOrigin='A1:A41:no:A1:A41:0' header='yes' outcome='2'>
            <column datatype='string' name='Genres' ordinal='0' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Genres</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Genres]</local-name>
            <parent-name>[Genres]</parent-name>
            <remote-alias>Genres</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Genres]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:A41:no:A1:A41:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='HasGenres' datatype='boolean' name='[Calculation_92605288849973249]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS(ATTR([federated.16528900by6s131f9qlq90dm3noc].[Genres]), [Parameters].[Parameter 1]) then TRUE&#13;&#10;ELSE FALSE&#13;&#10;END' />
      </column>
      <column caption='Possible Genres' datatype='string' name='[Genres]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.491039' measure-ordering='alphabetic' measure-percentage='0.199821' parameter-percentage='0.30914' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Required Genre1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
          <calculation class='tableau' formula='&quot;Any&quot;' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
        <column datatype='string' name='[Genres]' role='dimension' type='nominal' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='Top Anime (Anime Exports)' inline='true' name='federated.16528900by6s131f9qlq90dm3noc' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Anime Exports' name='google-sheets.0o2ab0f0w5exig11tlfe00jwzoqs'>
            <connection REDIRECT_URI='urn:ietf:wg:oauth:2.0:oob' SCOPE='email profile https://www.googleapis.com/auth/drive.readonly' class='google-sheets' cleaning='no' compat='no' dataRefreshTime='' filename='Anime Exports' googleSheetId='17KQKFy9o1pPG0Yko2dTYZcRhNSTdNWyI3NLWsJyfqbI' interpretationMode='256' mimeType='application/vnd.google-apps.spreadsheet' server='' server-oauth='' username='spencershadley@gmail.com' validate='no' workgroup-auth-mode='prompt' />
          </named-connection>
        </named-connections>
        <relation connection='google-sheets.0o2ab0f0w5exig11tlfe00jwzoqs' name='Top Anime' table='[&apos;Top Anime$&apos;]' type='table'>
          <columns gridOrigin='A1:AE5051:no:A1:AE5051:0' header='yes' outcome='2'>
            <column datatype='string' name='Title' ordinal='0' />
            <column datatype='string' name='English Title' ordinal='1' />
            <column datatype='string' name='Japanese Title' ordinal='2' />
            <column datatype='string' name='Synonyms' ordinal='3' />
            <column datatype='string' name='URL' ordinal='4' />
            <column datatype='real' name='Score' ordinal='5' />
            <column datatype='integer' name='Number of ratings' ordinal='6' />
            <column datatype='integer' name='Rank' ordinal='7' />
            <column datatype='integer' name='Popularity' ordinal='8' />
            <column datatype='integer' name='Number of Members' ordinal='9' />
            <column datatype='integer' name='Number of Favorites' ordinal='10' />
            <column datatype='string' name='Type of Media' ordinal='11' />
            <column datatype='integer' name='Number of Episodes' ordinal='12' />
            <column datatype='string' name='Status' ordinal='13' />
            <column datatype='date' date-parse-format='MMM dd, yyyy|#|#|MMM ddHH, yyyy' name='Date Started Airing' ordinal='14' />
            <column datatype='date' date-parse-format='MMM dd, yyyy|#|#|MMM ddHH, yyyy' name='Date Finished Airing' ordinal='15' />
            <column datatype='string' name='Producers' ordinal='16' />
            <column datatype='string' name='Licensors' ordinal='17' />
            <column datatype='string' name='Studios' ordinal='18' />
            <column datatype='string' name='Genres' ordinal='19' />
            <column datatype='string' name='Duration' ordinal='20' />
            <column datatype='string' name='Rating' ordinal='21' />
            <column datatype='string' name='Source' ordinal='22' />
            <column datatype='string' name='Synopsis' ordinal='23' />
            <column datatype='string' name='Background' ordinal='24' />
            <column datatype='string' name='Image' ordinal='25' />
            <column datatype='string' name='Adaptation' ordinal='26' />
            <column datatype='string' name='Alternative Setting' ordinal='27' />
            <column datatype='string' name='Sequel' ordinal='28' />
            <column datatype='string' name='Other' ordinal='29' />
            <column datatype='string' name='Alternative Version' ordinal='30' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AE5051:no:A1:AE5051:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Title]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Title</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>English Title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[English Title]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>English Title</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Japanese Title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Japanese Title]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Japanese Title</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Synonyms</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Synonyms]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Synonyms</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>URL</remote-name>
            <remote-type>130</remote-type>
            <local-name>[URL]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>URL</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Score]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Score</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of ratings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of ratings]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Number of ratings</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Rank</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Popularity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Popularity]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Popularity</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Members</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Members]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Number of Members</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Favorites</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Favorites]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Number of Favorites</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of Media</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type of Media]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Type of Media</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Episodes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Episodes]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Number of Episodes</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date Started Airing</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date Started Airing]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Date Started Airing</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date Finished Airing</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date Finished Airing]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Date Finished Airing</remote-alias>
            <ordinal>15</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Producers</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Producers]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Producers</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Licensors</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Licensors]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Licensors</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Studios</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Studios]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Studios</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Genres</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Genres]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Genres</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Duration</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Duration]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Duration</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rating</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Rating]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Rating</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Source]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Source</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Synopsis</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Synopsis]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Synopsis</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Background</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Background]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Background</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Image</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Image]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Image</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Adaptation</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Adaptation]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Adaptation</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Alternative Setting</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Alternative Setting]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Alternative Setting</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sequel</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sequel]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Sequel</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Other]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Other</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Alternative Version</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Alternative Version]</local-name>
            <parent-name>[Top Anime]</parent-name>
            <remote-alias>Alternative Version</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='HasGenres' datatype='boolean' name='[Calculation_379991242418241536]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='(CONTAINS([Genres], [Parameters].[Parameter 1]) OR [Parameters].[Parameter 1] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy)]) OR [Parameters].[Required Genre1 (copy)] = &quot;Any&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Required Genre6 (copy)])) OR [Parameters].[Required Genre6 (copy)] = &quot;None&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Avoid Genre1 (copy)])) OR [Parameters].[Avoid Genre1 (copy)] = &quot;None&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Avoid Genre1 (copy) (copy)])) OR [Parameters].[Avoid Genre1 (copy) (copy)] = &quot;None&quot;)' />
      </column>
      <column caption='Percentage of Members who Favorite' datatype='real' name='[Calculation_4901886739109130240]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Number of Favorites] / [Number of Members] * 100' />
      </column>
      <column caption='AwesomenessFactor' datatype='real' name='[Calculation_4901886739110236161]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_4901886739109130240]*([Score]^2)' />
      </column>
      <column caption='ExaggeratedAwesomenessFactor' datatype='real' name='[Calculation_4901886739117621250]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_4901886739110236161]^2' />
      </column>
      <column caption='Came out in the last 12 months' datatype='boolean' name='[Calculation_4901886739125026819]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF DATEDIFF(&apos;month&apos;,[Date Finished Airing],TODAY()) &lt;= 12&#13;&#10;     THEN true&#13;&#10;     ELSE false&#13;&#10;     END' />
      </column>
      <column datatype='date' name='[Date Finished Airing]' role='dimension' type='ordinal' />
      <column datatype='date' name='[Date Started Airing]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Score (Dimension)' datatype='real' name='[Score (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Score]' />
      </column>
      <column datatype='string' name='[Title]' role='dimension' type='nominal' />
      <column datatype='string' name='[URL]' role='dimension' type='nominal' />
      <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
      <column-instance column='[URL]' derivation='None' name='[none:URL:nk]' pivot='key' type='nominal' />
      <column-instance column='[Date Started Airing]' derivation='Day-Trunc' name='[tdy:Date Started Airing:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date Finished Airing]' derivation='Year-Trunc' name='[tyr:Date Finished Airing:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Date Started Airing]' derivation='Year-Trunc' name='[tyr:Date Started Airing:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Title,URL)' hidden='true' name='[Action (Title,URL)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Title]' />
          <groupfilter function='level-members' level='[URL]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (DAY(Date Started Airing),Title)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tdy:Date Started Airing:qk]' />
          <groupfilter function='level-members' level='[none:Title:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Title,URL)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Title:nk]' />
          <groupfilter function='level-members' level='[none:URL:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Title,YEAR(Date Finished Airing))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Title:nk]' />
          <groupfilter function='level-members' level='[tyr:Date Finished Airing:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Title,YEAR(Date Started Airing))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Title:nk]' />
          <groupfilter function='level-members' level='[tyr:Date Started Airing:qk]' />
        </groupfilter>
      </group>
      <folder name='Metrics' role='measures'>
        <folder-item name='[Number of Episodes]' type='field' />
        <folder-item name='[Number of Favorites]' type='field' />
        <folder-item name='[Number of Members]' type='field' />
        <folder-item name='[Number of ratings]' type='field' />
        <folder-item name='[Popularity]' type='field' />
        <folder-item name='[Rank]' type='field' />
        <folder-item name='[Score]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.405852' measure-ordering='alphabetic' measure-percentage='0.304071' parameter-percentage='0.290076' rowDisplayCount='10000' show-structure='false' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Avoid Genre3' datatype='string' name='[Avoid Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
          <calculation class='tableau' formula='&quot;None&quot;' />
        </column>
        <column caption='Avoid Genre2' datatype='string' name='[Avoid Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
          <calculation class='tableau' formula='&quot;None&quot;' />
        </column>
        <column caption='Required Genre1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
          <calculation class='tableau' formula='&quot;Any&quot;' />
        </column>
        <column caption='Required Genre2' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
          <calculation class='tableau' formula='&quot;Any&quot;' />
        </column>
        <column caption='Required Genre3' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
          <calculation class='tableau' formula='&quot;Any&quot;' />
        </column>
        <column caption='Required Genre4' datatype='string' name='[Required Genre1 (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
          <calculation class='tableau' formula='&quot;Any&quot;' />
        </column>
        <column caption='Required Genre5' datatype='string' name='[Required Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
          <calculation class='tableau' formula='&quot;Any&quot;' />
        </column>
        <column caption='Required Genre6' datatype='string' name='[Required Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
          <calculation class='tableau' formula='&quot;Any&quot;' />
        </column>
        <column caption='Avoid Genre1' datatype='string' name='[Required Genre6 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
          <calculation class='tableau' formula='&quot;None&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.16528900by6s131f9qlq90dm3noc'>
      <datasources>
        <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
      </datasources>
      <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
        <column datatype='string' name='[Title]' role='dimension' type='nominal' />
        <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]'>
        <groupfilter function='level-members' level='[none:Title:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Show on MyAnimeList.net' name='[Action2]'>
      <source dashboard='Discovery' type='sheet' />
      <link caption='' expression='&lt;[URL]&gt;' />
    </action>
    <action caption='Filter 1 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Discovery' type='sheet' worksheet='Great New Anime' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Discovery' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Discovery' type='sheet' worksheet='Highest Rated' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Discovery' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Discovery' type='sheet' worksheet='Best Movies' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Discovery' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Discovery' type='sheet' worksheet='Most Favorited' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Discovery' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Discovery' type='sheet' worksheet='Best Movies of the Last 12 Months' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Discovery' />
      </command>
    </action>
    <datasources>
      <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
    </datasources>
    <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
      <column datatype='string' name='[URL]' role='dimension' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Best Movies'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location id='CoolMovies' path='/workbooks/Anime' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
          </datasources>
          <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
            <column caption='Percentage of Members who Favorite' datatype='real' name='[Calculation_4901886739109130240]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Number of Favorites] / [Number of Members] * 100' />
            </column>
            <column caption='AwesomenessFactor' datatype='real' name='[Calculation_4901886739110236161]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4901886739109130240]*([Score]^2)' />
            </column>
            <column caption='ExaggeratedAwesomenessFactor' datatype='real' name='[Calculation_4901886739117621250]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4901886739110236161]^2' />
            </column>
            <column datatype='integer' name='[Number of Episodes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Favorites]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Members]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of ratings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Popularity]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Rank]' role='measure' type='quantitative' />
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type of Media]' role='dimension' type='nominal' />
            <column datatype='string' name='[URL]' role='dimension' type='nominal' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type of Media]' derivation='None' name='[none:Type of Media:nk]' pivot='key' type='nominal' />
            <column-instance column='[URL]' derivation='None' name='[none:URL:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4901886739109130240]' derivation='Sum' name='[sum:Calculation_4901886739109130240:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4901886739110236161]' derivation='Sum' name='[sum:Calculation_4901886739110236161:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4901886739117621250]' derivation='Sum' name='[sum:Calculation_4901886739117621250:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Episodes]' derivation='Sum' name='[sum:Number of Episodes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Favorites]' derivation='Sum' name='[sum:Number of Favorites:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Members]' derivation='Sum' name='[sum:Number of Members:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of ratings]' derivation='Sum' name='[sum:Number of ratings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Popularity]' derivation='Sum' name='[sum:Popularity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rank]' derivation='Sum' name='[sum:Rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[Exclusions (Title,URL)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Title:nk]' />
                <groupfilter function='level-members' level='[none:URL:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Title:nk]' member='&quot;Failed to export this anime&quot;' />
                <groupfilter function='member' level='[none:URL:nk]' member='&quot;https://myanimelist.net/anime/4282/Kara_no_Kyoukai_5__Mujun_Rasen&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[none:Type of Media:nk]'>
            <groupfilter function='member' level='[none:Type of Media:nk]' member='&quot;Movie&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]' included-values='in-range-or-null'>
            <min>43.0</min>
            <max>413.24014241967126</max>
          </filter>
          <slices>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Type of Media:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[Exclusions (Title,URL)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]' field-type='quantitative' max-size='1' min-size='0.000666667' type='quantsize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739117621250:qk]' />
              <lod column='[federated.16528900by6s131f9qlq90dm3noc].[none:URL:nk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Episodes:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Favorites:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Members:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of ratings:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Popularity:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Rank:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739109130240:qk]' />
              <text column='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' />
              <color column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Best Movies of the Last 12 Months'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location id='BestNewMovies' path='/workbooks/Anime' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
          </datasources>
          <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
            <column caption='Percentage of Members who Favorite' datatype='real' name='[Calculation_4901886739109130240]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Number of Favorites] / [Number of Members] * 100' />
            </column>
            <column caption='AwesomenessFactor' datatype='real' name='[Calculation_4901886739110236161]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4901886739109130240]*([Score]^2)' />
            </column>
            <column caption='Came out in the last 12 months' datatype='boolean' name='[Calculation_4901886739125026819]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF DATEDIFF(&apos;month&apos;,[Date Finished Airing],TODAY()) &lt;= 12&#13;&#10;     THEN true&#13;&#10;     ELSE false&#13;&#10;     END' />
            </column>
            <column datatype='date' name='[Date Finished Airing]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Favorites]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Members]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of ratings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Popularity]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Rank]' role='measure' type='quantitative' />
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type of Media]' role='dimension' type='nominal' />
            <column datatype='string' name='[URL]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_4901886739125026819]' derivation='None' name='[none:Calculation_4901886739125026819:nk]' pivot='key' type='nominal' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type of Media]' derivation='None' name='[none:Type of Media:nk]' pivot='key' type='nominal' />
            <column-instance column='[URL]' derivation='None' name='[none:URL:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4901886739109130240]' derivation='Sum' name='[sum:Calculation_4901886739109130240:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4901886739110236161]' derivation='Sum' name='[sum:Calculation_4901886739110236161:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Favorites]' derivation='Sum' name='[sum:Number of Favorites:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Members]' derivation='Sum' name='[sum:Number of Members:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of ratings]' derivation='Sum' name='[sum:Number of ratings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Popularity]' derivation='Sum' name='[sum:Popularity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rank]' derivation='Sum' name='[sum:Rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Finished Airing]' derivation='Day-Trunc' name='[tdy:Date Finished Airing:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[Action (Title,URL)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Title]' />
              <groupfilter function='level-members' level='[URL]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_4901886739125026819:nk]'>
            <groupfilter function='member' level='[none:Calculation_4901886739125026819:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[none:Type of Media:nk]'>
            <groupfilter function='member' level='[none:Type of Media:nk]' member='&quot;Movie&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.16528900by6s131f9qlq90dm3noc].[tdy:Date Finished Airing:qk]' included-values='in-range'>
            <min>#1962-01-01 00:00:00#</min>
            <max>#2017-06-17 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Type of Media:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[tdy:Date Finished Airing:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[Action (Title,URL)]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_4901886739125026819:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]' />
              <lod column='[federated.16528900by6s131f9qlq90dm3noc].[none:URL:nk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Favorites:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Members:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of ratings:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Popularity:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Rank:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739109130240:qk]' />
              <text column='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' />
              <color column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Genres'>
      <table>
        <view>
          <datasources>
            <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Avoid Genre3' datatype='string' name='[Avoid Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
            <column caption='Avoid Genre2' datatype='string' name='[Avoid Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
            <column caption='Required Genre1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre2' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre3' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre4' datatype='string' name='[Required Genre1 (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre5' datatype='string' name='[Required Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre6' datatype='string' name='[Required Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Avoid Genre1' datatype='string' name='[Required Genre6 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
            <column caption='HasGenres' datatype='boolean' name='[Calculation_379991242418241536]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='(CONTAINS([Genres], [Parameters].[Parameter 1]) OR [Parameters].[Parameter 1] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy)]) OR [Parameters].[Required Genre1 (copy)] = &quot;Any&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Required Genre6 (copy)])) OR [Parameters].[Required Genre6 (copy)] = &quot;None&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Avoid Genre1 (copy)])) OR [Parameters].[Avoid Genre1 (copy)] = &quot;None&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Avoid Genre1 (copy) (copy)])) OR [Parameters].[Avoid Genre1 (copy) (copy)] = &quot;None&quot;)' />
            </column>
            <column datatype='string' name='[Genres]' role='dimension' type='nominal' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_379991242418241536]' derivation='None' name='[none:Calculation_379991242418241536:nk]' pivot='key' type='nominal' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_379991242418241536:nk]'>
            <groupfilter function='member' level='[none:Calculation_379991242418241536:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_379991242418241536:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' value='600' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Great New Anime'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location id='GreatNewAnime' path='/workbooks/Anime' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
          </datasources>
          <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
            <column datatype='date' name='[Date Started Airing]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Episodes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Favorites]' role='measure' type='quantitative' />
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column datatype='string' name='[URL]' role='dimension' type='nominal' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[URL]' derivation='None' name='[none:URL:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Episodes]' derivation='Sum' name='[sum:Number of Episodes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Favorites]' derivation='Sum' name='[sum:Number of Favorites:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Started Airing]' derivation='Day-Trunc' name='[tdy:Date Started Airing:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[Action (Title,URL)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Title]' />
              <groupfilter function='level-members' level='[URL]' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' direction='DESC' using='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Favorites:qk]' />
          <filter class='quantitative' column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' included-values='in-range-or-null'>
            <min>8.5</min>
            <max>10.0</max>
          </filter>
          <filter class='quantitative' column='[federated.16528900by6s131f9qlq90dm3noc].[tdy:Date Started Airing:qk]' included-values='in-range'>
            <min>#2014-12-16 00:00:00#</min>
            <max>#2017-06-17 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[tdy:Date Started Airing:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[Action (Title,URL)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' value='364' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' value='Search for an anime...'>
              <formatted-text>
                <run>Search for an anime...</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.16528900by6s131f9qlq90dm3noc].[none:URL:nk]' />
              <tooltip column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Episodes:qk]' />
              <text column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</rows>
        <cols>[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Favorites:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Highest Rated'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location id='HighestRated' path='/workbooks/Anime' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
          </datasources>
          <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
            <column datatype='integer' name='[Number of Favorites]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Members]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of ratings]' role='measure' type='quantitative' />
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column datatype='string' name='[URL]' role='dimension' type='nominal' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[URL]' derivation='None' name='[none:URL:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Favorites]' derivation='Sum' name='[sum:Number of Favorites:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Members]' derivation='Sum' name='[sum:Number of Members:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of ratings]' derivation='Sum' name='[sum:Number of ratings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[Action (Title,URL)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Title]' />
              <groupfilter function='level-members' level='[URL]' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' direction='DESC' using='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' />
          <filter class='quantitative' column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' included-values='in-range'>
            <min>8.5</min>
            <max>10.0</max>
          </filter>
          <slices>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[Action (Title,URL)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' field-type='quantitative' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' value='384' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Favorites:qk]' />
              <lod column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Members:qk]' />
              <lod column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of ratings:qk]' />
              <lod column='[federated.16528900by6s131f9qlq90dm3noc].[none:URL:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</rows>
        <cols>[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Most Favorited'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location id='MostFavorited' path='/workbooks/Anime' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
          </datasources>
          <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
            <column datatype='integer' name='[Number of Favorites]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column datatype='string' name='[URL]' role='dimension' type='nominal' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[URL]' derivation='None' name='[none:URL:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Favorites]' derivation='Sum' name='[sum:Number of Favorites:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[Action (Title,URL)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Title]' />
              <groupfilter function='level-members' level='[URL]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Favorites:qk]' included-values='non-null' />
          <slices>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Favorites:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[Action (Title,URL)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <lod column='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' />
              <lod column='[federated.16528900by6s131f9qlq90dm3noc].[none:URL:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Favorites:qk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Number of Episodes over Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Avoid Genre3' datatype='string' name='[Avoid Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
            <column caption='Avoid Genre2' datatype='string' name='[Avoid Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
            <column caption='Required Genre1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre2' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre3' datatype='string' name='[Required Genre1 (copy) (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre4' datatype='string' name='[Required Genre1 (copy) (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre5' datatype='string' name='[Required Genre1 (copy) (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Required Genre6' datatype='string' name='[Required Genre1 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Any&quot;'>
              <calculation class='tableau' formula='&quot;Any&quot;' />
            </column>
            <column caption='Avoid Genre1' datatype='string' name='[Required Genre6 (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;None&quot;'>
              <calculation class='tableau' formula='&quot;None&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
            <column caption='HasGenres' datatype='boolean' name='[Calculation_379991242418241536]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='(CONTAINS([Genres], [Parameters].[Parameter 1]) OR [Parameters].[Parameter 1] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy) (copy)]) OR [Parameters].[Required Genre1 (copy) (copy)] = &quot;Any&quot;) AND&#13;&#10;(CONTAINS([Genres], [Parameters].[Required Genre1 (copy)]) OR [Parameters].[Required Genre1 (copy)] = &quot;Any&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Required Genre6 (copy)])) OR [Parameters].[Required Genre6 (copy)] = &quot;None&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Avoid Genre1 (copy)])) OR [Parameters].[Avoid Genre1 (copy)] = &quot;None&quot;) AND&#13;&#10;((NOT CONTAINS([Genres], [Parameters].[Avoid Genre1 (copy) (copy)])) OR [Parameters].[Avoid Genre1 (copy) (copy)] = &quot;None&quot;)' />
            </column>
            <column datatype='date' name='[Date Started Airing]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Genres]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Episodes]' role='measure' type='quantitative' />
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column-instance column='[Number of Episodes]' derivation='Avg' name='[avg:Number of Episodes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_379991242418241536]' derivation='None' name='[none:Calculation_379991242418241536:nk]' pivot='key' type='nominal' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Started Airing]' derivation='Year' name='[yr:Date Started Airing:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' included-values='in-range'>
            <min>6.6900000000000004</min>
            <max>7.4988489208633053</max>
          </filter>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_379991242418241536:nk]'>
            <groupfilter function='member' level='[none:Calculation_379991242418241536:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_379991242418241536:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.16528900by6s131f9qlq90dm3noc].[avg:Number of Episodes:qk]</rows>
        <cols>[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Score over Time (Continuous)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
          </datasources>
          <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
            <column datatype='date' name='[Date Finished Airing]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Finished Airing]' derivation='Day-Trunc' name='[tdy:Date Finished Airing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Finished Airing]' derivation='Year-Trunc' name='[tyr:Date Finished Airing:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[Exclusions (Title,YEAR(Date Finished Airing))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Title:nk]' />
                <groupfilter function='level-members' level='[tyr:Date Finished Airing:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Title:nk]' member='&quot;Failed to export this anime&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[tyr:Date Finished Airing:ok]' member='#1998-01-01 00:00:00#' />
                  <groupfilter function='member' level='[tyr:Date Finished Airing:ok]' member='#2008-01-01 00:00:00#' />
                  <groupfilter function='member' level='[tyr:Date Finished Airing:ok]' member='#2009-01-01 00:00:00#' />
                  <groupfilter function='member' level='[tyr:Date Finished Airing:ok]' member='#2010-01-01 00:00:00#' />
                  <groupfilter function='member' level='[tyr:Date Finished Airing:ok]' member='#2012-01-01 00:00:00#' />
                  <groupfilter function='member' level='[tyr:Date Finished Airing:ok]' member='#2013-01-01 00:00:00#' />
                  <groupfilter function='member' level='[tyr:Date Finished Airing:ok]' member='#2015-01-01 00:00:00#' />
                  <groupfilter function='member' level='[tyr:Date Finished Airing:ok]' member='#2016-01-01 00:00:00#' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.16528900by6s131f9qlq90dm3noc].[tyr:Date Finished Airing:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tyr:Date Finished Airing:ok]' />
              <groupfilter function='member' level='[tyr:Date Finished Airing:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[Exclusions (Title,YEAR(Date Finished Airing))]</column>
            <column>[federated.16528900by6s131f9qlq90dm3noc].[tyr:Date Finished Airing:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='boxplot-style' id='refline1' value='modern' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <lod column='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' />
            </encodings>
            <trendline degree='4' enable-confidence-bands='false' enable-instant-analytics='false' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='polynomial' />
            <reference-line axis-column='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' z-order='2' />
            <reference-line axis-column='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='none' probability='95' scope='per-cell' value-column='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]</rows>
        <cols>[federated.16528900by6s131f9qlq90dm3noc].[tdy:Date Finished Airing:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Discovery'>
      <repository-location id='LandingDashboard' path='/workbooks/Anime' revision='' />
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Top Anime (Anime Exports)' name='federated.16528900by6s131f9qlq90dm3noc' />
      </datasources>
      <datasource-dependencies datasource='federated.16528900by6s131f9qlq90dm3noc'>
        <column datatype='string' name='[Title]' role='dimension' type='nominal' />
        <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='22' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='20' param='horz' type='layout-flow' w='99824' x='0' y='0'>
              <zone h='100000' id='18' param='horz' type='layout-flow' w='99824' x='0' y='0'>
                <zone h='100000' id='16' type='layout-basic' w='99824' x='0' y='0'>
                  <zone h='38320' id='25' type='layout-basic' w='99824' x='0' y='0'>
                    <zone h='38320' id='14' param='horz' type='layout-flow' w='50077' x='0' y='0'>
                      <zone fixed-size='1083' h='38320' id='8' is-fixed='true' name='Great New Anime' w='50077' x='0' y='0'>
                        <layout-cache fixed-size-h='698' minwidth='482' type-h='fixed' type-w='scalable' />
                      </zone>
                    </zone>
                    <zone h='38320' id='26' param='horz' type='layout-flow' w='49747' x='50077' y='0'>
                      <zone h='38320' id='3' name='Highest Rated' w='49747' x='50077' y='0'>
                        <layout-cache fixed-size-h='44' minwidth='502' type-h='fixed' type-w='scalable' />
                      </zone>
                    </zone>
                  </zone>
                  <zone h='61680' id='24' param='horz' type='layout-flow' w='99824' x='0' y='38320'>
                    <zone h='61680' id='27' param='horz' type='layout-flow' w='99824' x='0' y='38320'>
                      <zone h='61680' id='11' name='Best Movies' w='44936' x='0' y='38320'>
                        <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                      </zone>
                      <zone fixed-size='222' h='61680' id='1' is-fixed='true' name='Most Favorited' w='10127' x='44936' y='38320'>
                        <layout-cache minheight='143' type-h='scalable' type-w='cell' />
                      </zone>
                      <zone h='61680' id='15' name='Best Movies of the Last 12 Months' w='44760' x='55063' y='38320'>
                        <layout-cache cell-count-w='1' type-h='fixed' type-w='cell' />
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='3454' id='23' mode='pattern' name='Great New Anime' param='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' type='filter' w='14645' x='83780' y='1413' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Most Favorited'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</field>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[none:URL:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Highest Rated'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[none:Score (copy):ok]</field>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</field>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[none:URL:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Great New Anime'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='pattern' param='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' type='filter' />
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[tdy:Date Started Airing:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[attr:URL:nk]</field>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[none:URL:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Best Movies'>
      <cards>
        <edge name='left'>
          <strip size='228'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='pattern' param='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' type='filter' />
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[sum:Calculation_4901886739110236161:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</field>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[none:URL:nk]</field>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Best Movies of the Last 12 Months'>
      <cards>
        <edge name='left'>
          <strip size='239'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_4901886739125026819:nk]' type='filter' />
            <card mode='pattern' param='[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]' type='filter' />
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[none:Type of Media:nk]' type='filter' />
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[tdy:Date Finished Airing:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</field>
                  <field>[federated.16528900by6s131f9qlq90dm3noc].[sum:Number of Favorites:qk]</field>
                  <field>[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Failed to export this anime&quot;</value>
                <value>1677</value>
                <value>39.810000000000002</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[none:URL:nk]</field>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[sum:Score:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Score over Time (Continuous)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[none:Title:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Discovery'>
      <viewpoints>
        <viewpoint name='Best Movies'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Best Movies of the Last 12 Months'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Great New Anime'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Highest Rated'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Most Favorited'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='11' />
    </window>
    <window class='worksheet' name='Genres'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[none:Calculation_379991242418241536:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Required Genre1 (copy) (copy) (copy) (copy) (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Required Genre1 (copy) (copy) (copy) (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Required Genre1 (copy) (copy) (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Required Genre1 (copy) (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Required Genre1 (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Required Genre6 (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Avoid Genre1 (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Avoid Genre1 (copy) (copy)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Number of Episodes over Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16528900by6s131f9qlq90dm3noc].[avg:Score:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.16528900by6s131f9qlq90dm3noc].[yr:Date Started Airing:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Best Movies' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Best Movies of the Last 12 Months' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Discovery' width='192'>
      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
      E4SK7wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Genres' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3d95Mk6X3n93fa8pXlq/20mZkeP4v1WOwuQOBIHAGRR54oxV2ERMaRugjp
      /1HopDvyTscI6Yc7KUIioQOIxRpgd7y3baa72neXr8ryVen0Q88Ot9GzDsBs704/r58murJz
      nnxqnsn85ifzeSTP8zwE4ZCSD7oBgnCQxAAQDjUxAIRDTQwA4VATA0A41FQAcSNIOKzUj//Q
      arUOsh2CcCCkT+YAnUaV2/cXePHV19l4dB/V70fzpxkbjn25vXout69+iByf4tzxiU/drLC+
      QTgVodFWGE4F2dgoMDqapNl2MKLBPdtu5hZY3q7z5puvoTxlX47V49bN2yRSCZIjM3i9BtF4
      nF6zjhKI4lM/+2qva1ZoeQHSsSCuPeDmzZucOP8yYZ/6mb8nfLPt+XYDoRD1/BY9x2O7XOfN
      F2f4v/7uXbKjY9iDFomRCcKqR3FjjcbAJuSXuf9whX/5r/6K+5c+QNE0OpbN8VMvkwypkBnm
      P//tvyU9eoJqr0vA72MkBJttlde/dZrixhZyaJjrV3OMTw6xMf+QrZ1hkskpludu0+g66IpD
      KDnKqalhdhp9rrz7EzpKlEG9jKf6GR4b5eb9R/zFn/0+dbOJ5La5M5cjOTyC3r6DP+Cjbin0
      GxX8oThucxNCQzSaXSJal7bjx6e4aIpMoQUnR0PkyjZHUxo9yxED4Dm359ttmiZGIobjeIQ1
      ibWdGmfPnqRQqCFJEoNWnZInk8iMEJMl2tVNTr/wIgFVIpUdZdCu0rUcZEnCHzZw3DZGcgTP
      hrGxcXQNurUS8YgPgOGJNPfu5hgdSwISM7MnGfQbSJKEPxTDH7QxzRqyJCHJCtFIkFLdT0iT
      yU5MgKyzWakxMpIBZCLhAAPXYXY6S7HtEk1kiAVc2g2ZTCwIjkNpEMXv82NWi6ixLCeyafqW
      TatWI6tJ1DsWKSNEYmSEVNh3AF+J8FWSvF0H3Q5BOBBPzgDdbvcg2yEIB2JPZdht1Lhy+Qo9
      Z+9GnudhNszP3dnG5ibuoIvZ7v9OGykIz8qeGsAfClEv7rC6ukK7XsVs9vA5dQZanEK5yFBY
      I50awR+NkJyY5sHFD9D8AdrdHpPHz1LY2mEoLHPrwTYMWviCQayBy9tvvX5AhycIn23PGaDZ
      MDHiBpnhCTTJwTRN0EIYMYOxbJpkIkalXmV1dRMJSGZHCfk0ZElClmQUb8BWsYaiykiyjD8Y
      JZv6krdQBeEr9KQI/vUaoFbK03E1RrPJA2qaIDx7krgFJBxmey6BOo0qFy9cpGfv3cjzPOpm
      /XN3tra+jjvoYLa+WBHsWF0an9j2zs0r3Ljz4HN/z7X73Hswx6BtcvnKNR4trQJQq9cAWF9f
      +0J/vyDsT4IL2+RWc7SqZerNHn6nRl9LUCgVGA5rpNOjBIwoqSNHuffhL9ACAVqdPtMnzpPf
      2mY4InPt3hYMWvgDQQaWy3fOTfB3713D7/cT8GtUmhZSa4twPIWlZZE6O3z3h3/E5tYW6AaP
      ggrOoMvKyjKe4ycQimBJDq++/m3uXv0IWZYod3W8epnZV9/kzvs/Y3snTzwic8/sYjYqlGsN
      5m9dIj0+Tb9v8+pb3ycT0Q+qn4WvqacmwdmRIwxqBep1k+FkmHgsjq56xHxQMatYVZP05FFS
      w+O4/Sbd3gBFkVEfF8GaquDYCoGwQVIFSVKYnBxH1zTMjs2ZcYNq3s/k9BTrWyaurFOtd4jF
      YgykAGa1BIqfsckjyJaPteUcUjyOIkvIsoKRSjMUTJAOudy9fh0jM4Ffk3DdLrIskxmZQPEs
      xiaPkU7FcRUd13UPqo+Fr7FPTYK/TkVwr9VCDYVRpYNuifC8+dS7QIJwGOxLgi9fvvzUItg0
      Pz8JXt94ehJsd+v86pcfka80f/sWC8Lv0L4k2CzmWV1boVWrYLb6j4vgOMVyiWxIfZIEp47M
      cP/C+4+T4D6Tx89Q3N5hOCJx4/42ktXGFwhgDVxePzfGTqEKXOXvFtc4e/4c2UyKa798l+yR
      U7hyn9e+/T1C2gH1gnBo7S2CGyZGPEZmZIJBvYhZNwkkI8SNOD4VDJ9ErVnHqjdIH5khPTSG
      02/RG1ioioLKgO1iHZ+uYjsKwXCMgAKyGuDo9CSKPODUuRcI+WTsXovk0BiNWp1QOoos3k4W
      DsCn1gD1SoGuozGcSTzTBnRbLfRw+KlveQnCsyaSYOFQ25cEX7hwga69W/jev3WV1c0iS/P3
      uH1//qDaKAjPzJ4zgOf0+en/+/cMzZwAVSPiNak6EfrlHLHhGZx+G2lgcvHaA46fOkU4Oczr
      508cZPsF4bey93Fo08RIxkFWkBnQ7nqEAzqxWBzXdfE6ZYLJcWbPvMDU+Aj1cumg2i0IvxNf
      6p3gYrFIJpN5xk0ShK+OSIKFQ21/Enzp8pMi+OHd66xtFckt3Ofuw8Wn7qBTL3L1+k26NoBH
      vf6Ux6ZdhysXP2JxZeNTG2L32zS6g9/mWAThS9tzBvCcAT////4L2aljoGhEpBY1O0K/soox
      NInT7yANGly+OcexEycIxbPMZvzcWNwiotosF9qcnRlmJ7+B48jE41luzz3iL//8z7h+6z52
      p0lhK0dyaIx238HvDxCNJ8ndvUQ8mcKJHMGqrjI6c5KwX2X26NGD7h/hObc/CU7EkGQVWbJp
      dyEU1QnEYjiuh9epEMpOcfyUxsRIktxmGWlsGr9k4ekRzpwaRXV7jE5MIgM7qyWOTIzhSRLd
      RoVEZhRFgUwqjiXptHsO9WqV8cljHJmcYLPcYdD30W23aTRsMQCEZ+5L1QDlcplUKvUVNEsQ
      vhoiCRYOtT2XQO1qnuv3l3n1jTcIfOLtk4/fCY7H4p+xK49Hc/dxdYPZmafMCO05rK5tMzk5
      /ql7KGytslFqkTQiTE1NUCkV6QwcxkdHnrp9aXudpa0K6ajOQPJjN8uEU8NUtjeZmD2H323x
      4NEa2XScRs8lJPfxtAiDVpVwZoKpUXFL97DbMwDMUpFCfpOFpWX69TK1Zp+AU6WnJyiVSwyF
      FJKpEUKGQWrqOHd/9Q6a30+7N2B69jztdgscmRvXLtMsFyh1dPxhjVhIw/VUGqU825urtDo9
      vL6HrckkswnCmsbwyBi9bpdOp0u9sMHa5iaGrrKykWM1nSU9PMJGvkE6HqCYe0hk8kW+NZOm
      NbeKYyvQbSHHhmhtrhPUPArbG2SzafrtJmsDB7/m0pEUJKdNylApVxpiAAh7B4ASCJHNZhgb
      n2SjUaBumoTTMVKxFEFdwfBBvdWi3GiTmT7O0OgRnH6LgeWgaSqhUJhK26aR3+boiVmiDRU1
      BOu5RdKZMbInTmP3mvQHFpoeIpWJIXsmNWn3iVN/IIDbL5MZm0aXHFzLxjCiRCIRNje2ODI+
      xGapjz+aJKDJzN2/SyyeRJe7WIEITruG7vOzXmzwne9MUFt7iByOkwwqNPoeYbmPrYTpWh1C
      4gV5gc9Igs1qka6jMZT+rMuep/A8SpUK6U8Uy612m3Ao9NTNq+UysWQK+Qu872vWygSjSTRF
      vBws/G6IJFg41PYkwb1GmQ8vXGVzY433fnUR8FhfXuDOgwXW1tf3/XKtVvuq2ikIz8SeGmBh
      LsfMmI6pJtHkTXK5FXa2S+gBHyuFdVY3tlHtNn6/n1y+g88x+c4P/pCk8fTLG0H4uttzBpie
      HmE+1yDulpg4fp7p6SniRpBWz2Z4bJJsKo6m6+ghg5BscUQktcI3nKgBhENNJMHCobbnEqjf
      Nrlx5z610g4Pl1ae/NzzPGqfeMx5cXFpz05WVlefbSsF4RnZUwT7QgaD7n1iqVM8zF1lCYfC
      5gquHiWitfhoq83M+TfY2dhkZ3MJLZIlEQ3QaneYmpw8oEMQhN/c3meBzAqVcpWV3ArVWotv
      v/YajmOB6+LaHsdmx1DwSKdT+HwKmuSyVqxzYmbygJovCL8dsU6wcKiJdYKFQ21PETzoNLh1
      7yHF7XWu3Li9b+NPvu/rWl2uXbnC3flH+z7zXJvVjc1P/UtrW0vMrea5euky9qdu9Ukei3ev
      ceXuAgA9s0S+3nnq+8fFjTW6Dk9/N1kQfs2eGkAPRhn0GkQjw7SXNsnlcqwu3mds8hjvvX+F
      V958kZdiBtVqjUHpEYmZFyguXuXn728zlIwzd/8OPn8QLWSwsniPcinPves3GD/9Am6/S0K3
      qLkGJ5IOGzWT6toGgUQSHYfi5gaSojC3sMwf/tm/YO3eZdD8WL0BIzMnGU7FGAyifPSr95AG
      fVZbKienM/Tv38Fstwj5AiwuLjMxOoq0VSUdVonFxBKtwmfbE4S1zQofXrpKOBgiEM/w0plZ
      Hty+QrHcwnI1hqaHGEumAYgGFa7cnMMXjhAJ6OB5tM0qPn8QVwugKx5dM0+51sOXHCMTUWlV
      S8h+g/GExmqpgyf58Sk9Bq6CEQhgd03KLZsXXvoW+c1V3EGPStVkdOYUGb9FyQ6Qz93Hp/po
      OArRSAC/piLjYHVbVBsWKSNCB4WAX+XksWMH3L3C151IgoVDTSTBwqG2Lwm+fuceha01Ll69
      uW/jTz7+7FpdLl+8yO0HC48/21sErzzl8emPVTcXuZ/b4dJHH33hInj+9mUu3poDoFsvsF3r
      PFkX+JMKayt0nN229lo1Ll64QL1jPfk8t7JKq1bg0tXrdAfOF/rbhefXviTY6jaIRkZodzZY
      WlpiZf4uY1PHeecXl3j9ey/zajxGpVKlX1wkeewlCvOX+Ok7mwylkzy4W8UXCKKHYizP36FY
      2OH21ascOfMSbr9DUreoejFOpxzWq3Uqq+sEk/PouBTW10FReDj/iD/6F/89K3cu7BbB3QEj
      x04zmo4z6Bt88N47yIMeuabK6aNZ+o1bmK0mQX+AhblHHBkfR9qokI1qnD91Eqw+t65dodMf
      EA8plBoWv/fyCdqtNld+9XO2mx4p2USKjGDWW0yMJujaNrbZIJKd5tWXTh7UdyN8BfYnwZUa
      127cxUhkOTozQ88ssrWxzbFjM+j+AJVKFYDM1CkuXbuOL5JkKquDB07Ph8/vx5VkTp19gU5t
      h8mZo/hCBkPDSZqVIml/iIChk+q3SZ45j9dv03AVRo5MYXUanDp7HiOoMTQ2iWN1qZTrBHw6
      aiCCofrp+Hz4IlGmogqq5iMyNEZasrE7LeSz58nEorRR0H0qle0cLc9POm4w7NdoNiqkUwaS
      ouHXJBQ9ybkxAzO/hS8cxeq2UDQfflUnnswAYtGy551IgoVDTSTBwqG2b3boSxcvklvJcf32
      g30bPz1d9VhbWWPp0W4i7Do2axv7Z4GuFjZ5771f0rVcwKNeq1LeWWer8PnrDwvCs7JvneBm
      uUTTUoj5PR7lcmws3GNk8ijvv3+VV956kRcjOu/+w7tIsh9Zl3jh29/j4Z2b1PsOtVIeWw2w
      PHeX4olZ7j3aYXY6jSMFePu1FwmFiqzev8LDnTbHhpL0e2XmVru8cP4ofk3i+HFRcApfrf2z
      QyfjBONRmu0ex6amsBol8tt5jh6dwecPADJTx2YxSyXajoeuSBw7dRbL6mMPOrhakBOzM8hq
      gPPnThMOqkgAkkQiEafXqjCaTRIIBFC1BEePuDhWn0rHPZAOEA43kQQLh5pIgoVDbd86wR/9
      6lcsLS9x5cZdypUKyys5ADzP5c6NKyyt7n/MeXt5haedP+bv3+LClRt8coTNPbhDu/+P+W+5
      UgHgwc2LFGstPrx4Ze+EW55LrSYKZeHZ2L9O8N/9PRgjxP0eaxurhI0UkqzwT7//Eh/9co5A
      LEAoFMA2t1jeaeOPJmlvbjF+ZpSVNZO0z6XjOIxPn6Sxs0TL1rCbBQKpLFZLo9HeJBrwM9Ci
      xHSVQrXId3/vh+TmruNZHvmBxkw6yNJyjiMT4/TlID67Tb3ZRZMHNAcyb/+THxHzH2S3Cc+L
      vUWwaRJLJgknYpjtLmdmT9D2dGJhH7Ji4PfbSLJCs1IiGAxx6tQ4hXIDPZNGQmdiJEMqGsFT
      QFEUwhMzHDt2nBtXLxLLpJE8A8sZYdAy0SMJqvkdTs2ewEMiMzROrdbgTNxAcmyGkjH0cJxm
      tUYyHqVnOYRDUUaNLzlZryB8BpEEC4eaSIKFQ21PEVzNb3LpynVKpTwPl1bw3AEfvvcuS6vb
      B9U+QXim9tQAA2tAu7BE4+g5GrU7eGQJRFLkNxe5/aufEB0+QShm4LYKpCdPc2Jq9KDaLQi/
      E3vOAEYsjj9xhECvgNno4KHQqhdJZYbIjk0zPjFGvVpjdGSYTqt9UG0WhN+ZL5UED7ptXMWP
      X1e+gqYJwrMnkmDhUNtTA3RqeS7fWWZyIkOx1iGiWEihJCMhh5uLec6//CrJ8O7qirnFB/Tl
      ECePTlJay+EfmSYiXqASvmH2LpE0v8LskQA/vb7O6VE/XVVmbX2O2EyUUrXGnetXmFtY5Z//
      2Y/YzJd5840Zrl78FYW1HbzYAsFQFBkPt2nij0YxO31+/MN/clDHJgifa88AOHZsgst3lnjr
      /CilWoeRZBA9nCIQdTl7egir0+LFF88jA8OpOAureUrFEudeeYHlzQIJI0zf9khkh2jX86xu
      Nw/osAThi3lSBP+mpYDZaGBEo/t+3mma9ByZRCzy27ZREJ4Z8T6AcKjtDcI6De49Wmc4FmCz
      2iHuB0sOMmgViWVnmBzLfOqOcqsrTE9OPfUz1xlw49p1YtkJjk2Nffo+5u6hJUZYW1rgzOmT
      1CslXDXI9JFf/x2Xer1JLGZ88SMVhKfYdwa4cu0y2DKS7OJ4Ep7bQ9MidBsVhjMGD9eK+AIh
      tot1ToxFcdQwb337NS5evoDd7aDKMh0bbM1gIhthKJ0m6Jo8qPjpFOZJZ4doVbe5fm+VibEh
      ep5OSnfRY8NoTpuBZLOx1eD4zBhW26Td67GwuMaRo8fxPAcjoNF3JRLBIPMPb/Li7/0px8aT
      B9yNwjfVvomxzJrJxMQEtVafeAAsKY7VKjF67AyjUReCCSr1NpnsCEZgN0iul/OEI0kGEgRC
      EZyaSTLqo1htMJROo8dGsBauYks+zGqFUDjBmXMGUb+CHo6heQ6gIMshzIbJ2bNDqLKEHPAR
      ti1Un4FhGPgDGq4LKi52v8vIxDS6LB1EvwnPiSdngF6vd9BtEYSvnEiChUNN/vUfLOWW922U
      W95dFzg3/4CVpXlu3L3HjTsPd7dfzrG6nMMCXLvL++/8nKX1HQCalRI9MQGz8DWm/voPCtsb
      zC8uMxJVyFUt4ppMd9ClWO/gk3f/NbcbJrLu292+WEQHhmemkd0BO1tbaMEAP/t//m+Gk0km
      zp0kKPvYzq0TncxQXFxF0/zk8kWOT49y9luvkE2KuznCwdhzCdRt1ljYKBLUZTpmhYHkw+u2
      0CIxdLeDrUTB8wgqFuuVNt86PUutuE3e7HPy2BRxI8j83CM8WaZcrnNkJEnLlahu7xAMxJg5
      N01ls4hZrjHQdGLRMCdnjx7k8QuH3BdOgnuNKgNJwVNCGMF9Jw5B+EYSSbBwqO0rgj+eCOuT
      Vh4XxisLc6wuL3Dr/gNu3Z/f3T63wlpuBYvdJPmdd35BqdbEc23KWznWS61newSC8FvYdy1T
      zG+xuLTCcERhtW4RU2V6VpeS2cUn705t3mk1kNXd9wKKpRI+YGh6Cl8wSjRiUF9ZIG9EGGyu
      sdHb5JHcRwtF6HV6JI0g/lCM06eOf8WHKgj77RkAvWadcGKIdFam26gyPqzjddvEw8Pobhtb
      ieJ5HtlkjM1Kh2q1SjYepmD2aVer+BIJUqkkfmDkyBDb3S4Tjkan1UTBotDsEJa7jM+eP6DD
      FYS9vnAS3GvUsGQZV/7NiuB208RGRcYlEhGPSAtfDyIJFg61fUXwo8ep7yctL+0uf7Q894Dc
      ozmu37n7JAl+tLTMytLy4yLY5Gc//RnFx0VwaWOZ1eKnvxV2/+a1p65HDGD3m6xt5AFw7T7v
      /fIjVhfvsLJZebLN0vKjL36kgvAU+4vgnU3mF3OMRGVyNYuEJtMd9CjVO/iU3VVcOg0TWfvH
      IljHY+ToDL6ggRGNUVt6yHYsymBjhbXuOgtKDz0UpdvukoqH0DUfR46dpFgsMtBC/OLv/xNW
      IIbb0wgHHWRNoWU26PcdcisjvPLyGTbXV/GpWZqlHRYeSmh6kHK1zMMblwiNneEHb7z41fac
      8FzYMwC6zRrh5AiZ4d0keDKo43ZbJMKje4rg4XSc9UqHSqXCUDxM3uzTqlTwJZOkM2n8wNjU
      MFvdLrKj0241UOmz0+wQkXuMf+s7AByZmWXm6DRXL11ADQRJJsapFXMogRC4EpMzWR6tbBPU
      NV781kksRyMa8Ki2msSMCIqmEfMNExsWM9QJv5kvkQT/dkVwp9XARkXyXCKR8Bf6HXvQw0bF
      r4vkWXg2RBIsHGpPeRx6fxKcy+0WxisLc6wuLXDp9tzuB55LsVzZt70gfFPsOwNcuvQhtdaA
      4bDMan33ceie1SORPYJP8QCPWq2BJvfo25AvtUhHPSw9jdQ38QcDdNsdQj6duUervPLt19kp
      1lG7BfyJUSzL4fvffxsxu6jwdfCUJHiYzJBM16xyJKTjdtvEPy6C5Qie5zE0lEX3KeB5GOEa
      ekAlEE6iyC6u6yB7Hk6vixqIotg9RseGqW71ySRimF1r/2lHEA7Il06CPSVENCCKUuH58KWS
      YHvQx5MkPElFV8X/48I3377/yq/fuMbk5Ax+TcaRdbxBh/mlHOfPnmV5fh5ZhULH4c0zM5Q7
      EjIWiqxgDQYEfRqSHqDXajCob1BRx/Fam4yNzxANB1A0H4qYxkT4Gtk3APq9Htdu3SSue6yW
      G6TCcRy7yZUbHkbIBzbonkWvvs3lK+sMVAl/QCUVDjJotvBci631NWIj43R8NimpjuFX+eBC
      mX/2X/1AFL/C18q+d4ILjQFBXabXrDGQA7idGlo4idTJ0/LCuOgE5TaaL4gk+1F0DUXZvZ8q
      eeDZffKFIrFUGlfxE1UG1FtdtstN3nztWwd4qIKw35Mi2HE+e/4SxxrgSRJIKqoiLmOE58OT
      S6DBYPC5G9v9Hp4k0RNFsPCc2FcD3Lx1g4mJKQKajP24CF5cXuXsmdOsPFpEViQKNRO7Z/Pq
      m2+gS9BrN1EDITqNBv12ma4+xEQ6jGP3abb7KLJMMpVEnDeEr5v9SfDlC7S6Fobusl5pkgzH
      cK0WejRLNKSD59FsNoipUCaKoTo0Kts0XZeA5KdbrzDy0neRW1tUNhdoWAl8/gBv/+j3+GKP
      wAnCV2fPAOg16xRbAwK6TK9Zx5IDuJ06WjiB1CnQ8kK46IzENe4vrHJ0apT2QEK2O+ihMAHd
      j2fb1HsWdtfEiISQ1BCKrBDPJhFr6AlfN08GwOfVAK5tPSmCFXH5LzwnvmQS3MOTZJEEC8+N
      fUXwtRvXODIxRUBXcGQdt99mYWmF8+fOsrywgKLATnW3CP72d9/CJ0GnbaIFwrRNk36rRMc3
      zFQ2gmP1qTd7qKpMKBjEpzn8w88+4pXvfBvXcTDCARzHpd3pkckkWM89pNb0c+zYMN2Bw9rK
      IpOpIL+8s8rsiXOkjABbGyucOHEKWVVxHZte38azugSNJJ7dpd2z8ckeij9Cq7DC/E4DedDn
      1LmzDHotFFnBQyIUjqApMq5rU8qvs12BmYkYii+M1e+iaj7CQT8gofs0SsUSS4uPOHnuPHav
      TTAcodFsUdvaoORIfPfVlw7g6xN+W/vOABcufEizNyCmubtJcCSOazXRo0O7STAejYZJXIWS
      ZBBTHMzKJg3HIyj76dTKjL/6A6TmOuX1OUw7hc8X4I0/eJOEJnPr2mWWcztkhuPkTYvZpJ97
      WzX+9E/+mBsf/pw79/OcnE3TVSKcmBohofb44P4OdNqks1F2yibjo+PoPo1WrYDnH6FfnEfN
      zhJ06/SsAZqn4+k+0rpL6vTLzF+5iCup+NUulcYAWbbptyXGJ0cpNdqcOpJgfmGbXq+LGkkB
      LfyqSjwaZ9DtoukeTmCYVmEDWfZ2i35bJ5aIE4mkiKZCvDA7ezDfoPBb2ZcEF5sWQV2m26w9
      LoIfJ8HtPE0vhIuP0YTG3fkVjk+P0RpIKHYbPRQh6PPjWjb13gC7Y2JEw8hqCFlRQJVIG2Hu
      33/IyOgYmzslRobTxMN+7i+scObsGarFHRzLw/IcWj2HkWycgOJye26F6ckJdgoVhoeSeI5D
      rVImEk8QCscpbOaIpEbQP56+3ayiRzNkYgEezj0imRlCVyTwLBxPRpI9rG6PitkhmzZotnvE
      olG6nS6KL4iqesh41MolwvEhMokQcwvLpNJZVMmhXCyghwwi4RCO56EqKslkXNzm/Qb6Ekmw
      hSchkmDhufIbJMGySIKF58a+IvjGreuMj00S1JXdJLjfZjG3tpsELz1CkSWWt7fx62Fe+9Zp
      PC1Av20i2x3WGipjMY1YMoMmBojwDfCUJPgi7d7jJLjcIBmJ41hN9MjHSTAUdlboEyYR1Bg4
      bWQvhNMtoYycp712kxfe+jEjydABH5ogfL59SXCpbRHQZHqtOpbsx+2YqOEEUjv/JAkeSoWx
      BwMcqwu+KO3KDpmxSYqFEk6vydjRU0QCIvcVvv6eDADLsj5zQ8e2QJLwJAVVvNUlPCe+XBLc
      7+FKEp6s4RPX+MJzYF8RfPX6VSbGpwj6ZBzZh9trsbC8yvlzZ8ktLqIosLKd5/jsaUI+HUVy
      CYRCNFtdhoeHECcH4Ztk3wCw+n3uPLiHobmslU1SkQSO1eDaLQkj5MN2PM4cnWRxZQXdqdFT
      Ddpra4SGhyEyxKhY+0L4BtmXBJdaj5PgRh1L2U2C1XASqbWzmwRLPgy1hxSM41dt3vnJTzj9
      0ncZG00RNFIERe0rfIM8KYJt2/7MDV3b3k2CZRURBAvPiyeXQJ93FwjA7okiWHi+7J8Y6+Z1
      xseOENRlbNmH22/z6HESvLq8hCLDzuYSgfFXmIzLGPEE9UaHoA6KL0KnUSEQCoeS54AAABA5
      SURBVNNodYlHQziOQ6vTZyibolTIE4zGaZomQ0MZbt+6Dbgcm5nhxoN5Th+dQvOHkSUPWVXp
      txtoQYONe7fJ9zscO/4CmuwS1CUsT8XtdwhGo7TaXdaWlzg+O4vlQiQUACT8ft9X36PCN8pT
      k+BO3yaquaxXTFLh3SJY+0QSnNY72EPnufOL/4yjpNGMEIYG9qCOp8RoV8rkK23Gjg6T8Sks
      lbr8+Ec/4MqljzALm2TGpklPn6e6+gDPc3Ecm77Vp7C1zcjwENXOAC2QwJBMOsQYC+vEJgze
      f+cG4USKaMyH6nn0GnVafRstFCekSQwlI5TbA6KBAJ4S5MXz4hFl4bM9JQm2CeoSvaaJpXwi
      Cf5EETwzFMLzx1hfniMUiNDs2xg+kINRLvziv3D0zCvISAyNZogFdeaXNjh1ahbTrOM6FoVC
      ldlTJ6nurNPDj2q36Uk6XsfEyAzTa/eQFYlBp4kvnCAgD9istJgeTbOyWSKbTSF7LuViHiOe
      pGK2SYQ1Bo6H5SnQb2GkR0gnjIPuX+Fr7gsnwU+KYEkR83sKz40vmQR3cSVZFMHCc2NfEXzl
      2hUmxicJ+hQcyYfbb7KwvMb58+dYWVxEVjx2Nh7hH3uZQXmZ1954m1q1xuhIhv/4H/4P3nz9
      LDttl+nhYWJxA0mCer2OKksEwxFUX5BL7/+M8ePnifpkqpubhI+eIui0kbUAnW4PI+yn0eoR
      8sl4Woh67jrL/RQ7czf4o//mv0bD5sGdRU6cmcU0m8QTMSTAp6vkd/JomozPyBL1i3UMhM+2
      71+IPRhwb+4hUdVlrVwnHUniWCbXb93HCPvAkTg5OYY9PMFSaZGf/J9/zSA0zB//yZ8wbGgs
      5LvY+fvQm2XnRo9EMkrAafDo0TqvvP37zM6EmJqaYn7xHvn1TRLhCN1ymxG9Q7nlMjQ2jtNr
      0B3Y+CQJR9KYjMt06nkUf5S5+3Mo7oAHN6/R7TVwJYliT2YyGeDs8TEePnxAp2ny4g/+lKj/
      ILpU+CZ5ShJsP5kd2lKC/5gEN7dpeCFcyc+xkRCuP0GvWcWxemznK5w+ew6zWmZg2Wga7GyX
      OX78CMXagJAO5eI2kXgaI5GmtL6EGknSruwQCCfQ/D46zRqaP0woFMRzd1/PHLRNPJ9BzO9h
      ti0kVcfrN+m6KkZAw3YcSuUa2XSMSmvA8SPD1Bst+t0u8cwoAV1cpgmf7YsnwY4DEniSIpJg
      4bnx5ZJgUQQLz5mnLpE0OjpByKfsJsG9Fo9W1jl39gyrS0vICpS6NkEVZqen6QxcXKsPnoMR
      T9Bo9wgoHhYaKXEfXviae2oS3B04RFSHjYpJMpLEGZh7kuBWpw14SLaH7Xn4FI9KsYAbTBLy
      KUgqyLLK22+8cbBHJwifY18SXO7YBDSZfuvjx6FN1FAcWnmaXhBX8jEa16i0HRKR4O5ePIf8
      9g6ZkWEqZodUfPelgGQicYCHJgif74snwR8XwcgiCRaeG18qCRaE582eItgyt/jppVUS4T61
      gsnrf/BPCSvQbddx1RBWp04oEqNSa1AubnHy8SzNAPN3ruEE0/TqW5w8+ypOt0E4FkeWZErF
      CrFEmL4lkV9fQvEb+Lo11rs2J2ZPEfWrtBt1QkYcSZKQVZ1WtYDkizBo10lmR7l77QK1RpsT
      L75OIqjRrFdRVJn5tQKz4xm0QBS/T6M/sDCCClcfrNFvVDk+MwGezWqxy9SQgS8YxefTuHP/
      LmdOnqbdNPH5dGwlRMoIHsR3IBygPWcA13FwgcsfvUvHbCMnjhDTXDpdE89uYklxBrUiW8Ua
      iSMjJI0UoYCKK+scG03xwaVbJGJ+8CxwfbRrW6QmjrGa75GKSUi2y3fffhNJklm69hFXttsc
      z0awJRmr36NXL2OMThEfm6UwfxW730LV4/jiGfpmgbGEn8ViD92nY9W2sbQo0ZiBUy/geBqx
      VJLJ0y+Q0iz+09/9A57rYegOPcVPdniSbmEFV/YRSybYKmwSM9J4OLTzJY6+/n1OTCQP8KsQ
      DsJTL4FKO+tsFpuMpKM0+hJJI4Dn2rz3s59w/Px3wLXIjIyg4lKvlDEyw6h2m0LDIpuI4OFR
      KxZIZIfZ3twiX6pz/swMzb7E9PgwAK1aFQuPjeVHRMZP4ta3iGWGyG9tM3F0FqvTAM+jVMgz
      Oj0LPZP1gkncP6BuR9Esk3AyS6NeRbIHhIwY1VqTdDZNOmFQM9u4Vp96tUwkmaFp1sHqETLi
      1OotUpkUsudgVssYiQz+UJRIUP/KvwDhYH3hJFgQnkdfKgkWhOfN3iK4sc3Pr6wRD/epFxq8
      8oPff1wEm7hqELtjEowaVGsNKqUdZmdPICsqILF47zpuMEWvvs3x0y/j9BpEjDiSJFMuVTHi
      IfqWRGEzh+o30Jo77Kgpcg9u8s9//EP6rkK3WcOTVVLJJJVaAxmbcCiA60J34DKcTR1QNwnP
      qz1BmOc6uJ7E1Uvv02l0kGPjGJpLt9fAs1vYcox+rcROqU58fJiEkSToV/BkjZmRFB9evUPc
      2C2CJc9Hu7ZNcuwoa4UeycdF8JvfeQNJkli5fY1cs0O51icmtwkmhnAGFaS+n22zz/RImIYU
      QOk3ULHpyBF+9P23Drq/hOfMvkchAMr5TbbKTUZSERp9iUQ0AJ7NBz//GcfOvQ6OTXpkCNVz
      qdcqGOkhFKtDqWmRjocBj1qpSCIzxM72DoVSnTOnpmj1JSbHhgBo12s0ewMkXUcZtGkOwAjr
      4Cq4nkup2iCbiQMSPtllrWBy6vj0wfSS8Nz6wkmwIDyPRBIsHGp7iuCBuclPL66SiPSp5U1e
      /+FuEtxp7ibBdqdGyIhTrphUStucPHkKRVFBkpi7fRU3lKFb3eDk2dewuybReBJJkp4kwT1L
      orCxhOqPoTW22VbTLN27xn/7z35M15EI+X206gXkQIJ+f8DYcOag+kU4JPacATzXxQUuffiL
      3SQ4foSY5tDpN8FqYMkJetU8OyWT+MTwJ5JgjWOjaT64dJNEPAjuAMnz06pukBo/zmphNwmW
      bZe3334LSZJZvnGZ5WabUrXHZDaCPbAZtMvogShbtR7RWJw//oPvHVzPCIfCpyfBpRajHyfB
      0QCeZ/Puz37C7J4k2KFeqewmwVabQtMik4iA51ErfTIJrnH+zFGaPYmp8d0iuFWv0upZSJqG
      YnXouDqK3SOWiNDt2eTLJmdOHP3KO0Q4XEQSLBxqIgkWDrU9RbDn2fyHv/lb/vyv/pLq2iLz
      eRO3P+D4iVkUp0sgEqNaLmPEEjRaTdKxMK2ew+rGBq+++MJBHYMg/Mb2DIDa6hyyJnPl9gJU
      Nzn2yuss3b5D7tEiTq9Oq9cjHEyykbvJ+NEsNzpVkkYWny6WhRG+mfYkwfVajWgsSr3eIm6E
      WJhfIJEdRZPBrJYIhCPoup92s0soEsBxetRbNslYhHhMzAAhfPOIJFg41EQSLBxq+4rg/+3f
      /DX/w//0P1JZmePhjonb6zN76iSK0yEQTVAtloglktSbDbLxMM2ew8pqjlOzZ4iEddY2t3DN
      Iot1+MO3X+HCB++SHDnC2sojvv3GWxQKZTKpKI32AL/i4KohBm2TvrlNePoNhsIH1RXCYbRn
      AFRz91F9KhdvzCFV15l97U0Wb94kt7iI3avR6nUJh9KsvXOdI8eHudYuk4kNoesq4bCfnY1l
      btxeJKhYVFo2S0sJBq7K5NgQ+e01Ln3wU7bzVSJjJ8mEABzsfp2NjSbjQ1FOTh1MJwiH155L
      oCdFcK1JPBZm7uE8qaHdIrheLRGIRPBpftrNHqGIH8fpUWtZJI0A4CMej+B5Lma9gYRHJJ6g
      VS1QadvEIwGcQZd8qUYqO4LvydDzKO5sYyTSxFJDiCn9ha+SSIKFQ00kwcKhtq8I/vf/7j/y
      F//6r6isLrBQaOD2+hybPb6bBEcTVEolYvEEZqtJJrZbBK9vbJKORzkyMcrqZpGIX6LdtQkb
      UZpbS9T9Y8R9MDkxclDHKQhPtbcIXn2I6le5cmseqb7F0ZdfZ/n2HVaXl3H6dZrdLpFwigvv
      3+LIsSFutitkYkMoWNy8uUS/02Bx2yQRBgbgSQ5Kv8Oj8gbxWJzhiRHE0tXC18meJNis14kY
      Ecx6i5gRZnF+gUR2BE2BerVMIBzBp/lotz4ugvvUmxbJWIRoNILVa7G0UWQ0mwRPwvMccB1c
      WWUnX+bUqeOIZTWErxORBAuHmkiChUPt14pgi//1f/lr/tVf/Tnr22VqhQKvvHqUf/8373Jm
      Enwzb2OoFvGgQsdRsdo14qkM+WIVTVPQFInx8XF2Ntfwh2IUKzWyiRDVWhM9GMHpmoRUh00n
      zQtTYiJa4eDtGQCV3AP0gM47H9xge3ONt773HQB8koctq9y99CGZRIxIQEFVHNrVIt12Hy08
      iu7zoxgy/f6AwvoyLjJLSxskj84QBVA8umYRORDl5PmxAzhUQdhvbxJcrxE1ohQ2Nyg3B4wM
      p0nEwtSKVWxJQlE1tnaKdEortNQkRzJhopEIihpElmVcxSNlxMg9micUS1AuVkmPDKFLEh4e
      lVIRI2agh+IYIXE/SDh4IgkWDrUDS4Idq4flafh15amft1otQuEwYjUy4VnalwT/zb/93/nv
      /uJfsrFdoV4q8tLLM/zt337A6QkPffo7RGWbWFCh46rY7RrxVHq3CFYVNFVmbGyM/OY6vrBB
      qVwjkwhTrTfxBcM4nQYhzWXLSeFWVkhlEty4O08qpOPqEaxyiZf/8Pt89M5HvPnycR5VOxyf
      EJNjCc/O3iR45SF6UOf9D2+zs73BG2+9Dnj4HxfB969cIpOMEfLJaIpDu1am2+6hhUfQfX7k
      iMxgMKC4uYrrSeRyWySmp4lK4MkuvUYJKRDlxJlRtsseg1aT4ydPUc/vIOGSyGSQtQDpRJRQ
      LIU5lwMxAIRnaG8SbJpEomFK21tUmhZDQ0niRoh6qY4tS6iqytZOiW5ljZaSYCIdJhoJI6sB
      ZGm3CE5GDVaXFwkZCcrlKumhLNrjIrhaLmHEDLSgwU5uHtkXpGt5jCZDuFqI4kaOoJGgVq0S
      0GUi2RnG0pGD7iPhOXagSbAHn3qN73kekiQqAOHZOrAk2LG6DDydwOMi2HNt2t0B4ZBYqlT4
      6uxLgv/N//zv+Mt//eesbpaoF4u8+tox/uavf8HZSQ/96HeJyhaJkELbUbFaVZKZLNv5Crq2
      WwRPTEywvb6KPxKjUKoylAxTqTbwhaLYnTphzWXTSeOWc4RDLncXW4wORcCzUVWdV1995aD6
      QjiE9ibBy/fxh/38/P0b5LfXnyTBARlsRePuxY8YSiceF8E27VqJztUeemRstwiOSgwGFsXN
      FRwHlnObJGZmMGRA3qZrFpH8EU6dn2CzDJOTk7QHXfqdNVR/AsdqHkQfCIfYnkugjx+HLm5v
      UW70GR5KkYiFqZdqu0mwprG5VaBbXt1NgtNhotEI8uMk2JM9kobBytI84ViS0uMkWJMk+EQS
      rAVjbC8/YPToCXAkJLuFqwVZnF/glZdfPMDuEA6bA0uCPx53/1joengeovAVvlL/PyKwvrwT
      yGQXAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Great New Anime' width='192'>
      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
      aOYCmHOi+b8aw0aTuDhzrwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Highest Rated' width='192'>
      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
      3J8K8niMQV9ceAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Most Favorited' width='130'>
      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
    </thumbnail>
    <thumbnail height='192' name='Number of Episodes over Time' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Score over Time (Continuous)' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
